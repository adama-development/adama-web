{"version":3,"sources":["app.js","app-config.js","account/app.js","alert/adama-alert-error.component.js","alert/adama-alert.component.js","alert/alert.service.js","auth/accessDenied.controller.js","auth/app.js","auth/recoverPassword.controller.js","auth/signin.controller.js","crud/app.js","crud/btn-create.component.js","crud/crud-action-dropdown.component.js","crud/crud-custom-filter.component.js","crud/crud-delete.controller.js","crud/crud-edit.controller.js","crud/crud-export-xls.controller.js","crud/crud-import-xls.controller.js","crud/crud-list.controller.js","crud/crud-search-field.component.js","crud/crud-view.controller.js","crud/modal-btn-back-to-list.directive.js","crud/modal-btn-cancel.directive.js","crud/modal-btn-confirm-delete.directive.js","crud/modal-btn-confirm-edit.directive.js","crud/modal-btn-confirm-export-xls.directive.js","crud/modal-btn-confirm-import-xls.directive.js","datasources/authorities.datasource.js","datasources/binary-file-url.datasource.js","datasources/language.datasource.js","datasources/principal-identity.datasource.js","directives/layoutFix.directive.js","directives/lazyControl.directive.js","filters/min.filter.js","has-authority/has-any-authority.directive.js","has-authority/has-authority.directive.js","interceptors/auth-expired.interceptor.js","interceptors/auth.interceptor.js","interceptors/error-handler.interceptor.js","interceptors/notification.interceptor.js","resources/user.resource.js","services/adama-resource-config.service.js","services/adama-token.service.js","services/adama.constant.js","services/auth.backend.service.js","services/auth.service.js","services/base64.service.js","services/binary-file.service.js","services/language.provider.js","services/parse-links.service.js","services/pdf.service.js","services/principal.service.js","user/app.js","account/password/app.js","account/password/password.controller.js","account/settings/app.js","account/settings/settings.controller.js","ark/ark-footer/ark-footer.component.js","ark/ark-header/app.js","ark/ark-header/ark-header.component.js","ark/language-selector/language-selector.component.js","ark/menu/main-navigation.component.js","ark/menu/menu.provider.js","ark/select-all/select-all.component.js","ark/user-info/user-info.component.js","ark/view-attribute/view-attribute.component.js"],"names":["angular","module","config","$urlRouterProvider","otherwise","run","$rootScope","additionalBodyClass","$on","event","toState","name","indexOf","$filter","translateFn","data","pageTitle","$translateProvider","useSanitizeValueStrategy","useLocalStorage","registerAvailableLanguageKeys","en_*","fr_*","determinePreferredLanguage","$stateProvider","state","abstract","url","template","resolve","authorize","Principal","ngTableDefaults","settings","extend","counts","params","page","count","translations","MENU_CATEGORY_USERS","PAGER_RESULT","FLAG_EN","FLAG_CN","FLAG_FR","FILEUPLOAD_DROPZONE_LABEL","FILEUPLOAD_DROPZONE_LABEL_DROP","FILEUPLOAD_RESET","$state","toStateParams","isIdentityResolved","toParams","fromState","fromParams","previousStateName","previousStateParams","$httpProvider","interceptors","push","component","templateUrl","controller","$scope","$translate","AlertService","ctrl","this","alerts","addErrorAlert","message","key","add","type","msg","timeout","toast","isToast","scoped","cleanHttpErrorListener","httpResponse","i","stopPropagation","status","errorHeader","headers","entityKey","entityName","instant","fieldErrors","length","fieldError","convertedField","field","replace","fieldName","objectName","JSON","stringify","get","provider","$get","$timeout","$sce","alertId","clear","closeAlertByIndex","index","thisAlerts","splice","closeAlert","id","extAlerts","map","e","factory","alertOptions","alert","trustAsHtml","position","close","addAlert","success","error","warning","info","showAsToast","controllerAs","authorities","SIGNIN","SIGNIN_INTRO","SIGNIN_FORGET_PASSWORD","SIGNIN_USERNAME","SIGNIN_USERNAME_REQUIRED","SIGNIN_PASSWORD","SIGNIN_PASSWORD_REQUIRED","SIGNIN_SUBMIT","SIGNIN_ERROR","RECOVER","RECOVER_INTRO","RECOVER_MAIL","RECOVER_MAIL_REQUIRED","RECOVER_MAIL_EMAIL","RECOVER_SUBMIT","RECOVER_BACK_TO_LOGIN","RECOVER_SUCCESS","RECOVER_ERROR","RECOVER_ERROR_EMAIL_NOT_EXIST","ACCESS_DENIED","ACCESS_DENIED_INTRO","recover","userEmail","recoverSuccess","recoverError","errorEmailNotExists","loading","resetPasswordInit","then","response","Auth","signin","userName","userPassword","authenticationError","login","username","password","go","CRUD_BACK_TO_LIST","CRUD_CANCEL","CRUD_CONFIRM_DELETE","CRUD_CONFIRM_EDIT","CRUD_CONFIRM_EXPORT","CRUD_CONFIRM_IMPORT","CRUD_CONFIRM_SAVE","CRUD_DELETE_MESSAGE","CRUD_DELETE_SUCCESS","CRUD_DELETE_ERROR","CRUD_EXPORT_XLS_MESSAGE","CRUD_EXPORT_XLS_SUCCESS","CRUD_EXPORT_XLS_ERROR","CRUD_IMPORT_XLS_MESSAGE","CRUD_IMPORT_XLS_SUCCESS","CRUD_IMPORT_XLS_ERROR","CRUD_NEW","CRUD_MASS_IMPORT","CRUD_MASS_EXPORT","CRUD_EDIT_SUCCESS","CRUD_NEW_SUCCESS","CRUD_SAVE_ERROR","CRUD_FORM_ERROR_REQUIRED","CRUD_FORM_ERROR_MAXLENGTH","CRUD_FORM_ERROR_EMAIL","CRUD_FORM_SEARCH","CRUD_FORM_SEARCH_SUBMIT","CRUD_ACTION_VIEW","CRUD_ACTION_EDIT","CRUD_ACTION_DELETE","transclude","bindings","disableCreate","disableMassImport","disableMassExport","disableAdditionnalAction","routeMapping","disableView","disableEdit","disableDelete","tableParams","searchValue","labelKey","displayFiltered","filter","business","reload","entity","dismiss","$dismiss","confirmDelete","$delete","$close","EntityGenericResource","isEdition","save","resourceAction","update","$promise","newEntity","confirmExportXls","massExportXls","confirmImportXls","file","massImportXls","NgTableParams","total","getData","$defer","sort","sorting","sortValues","equals","hasOwnProperty","requestParams","size","search","$","query","entities","$metadata","totalItems","directive","restrict","$parse","adamaConstant","scope","link","element","attrs","assign","binaryFileService","updateOutput","binaryFileList","output","copy","isArray","initUrlForBinaryFiles","$watch","input","language","getAll","languages","identity","account","addEvent","AdminLTE","layout","fix","translateFilter","additionalLabelAttributes","labelScreenOnly","labelContainer","isPlaceholderForced","wrap","after","next","eq","ngModel","placeholder","attr","addClass","before","prev","initLabelAndPlaceholder","label","lazyControlLabelKey","html","Math","min","setVisible","removeClass","setHidden","hasAnyAuthority","split","defineVisibility","reset","result","isAuthenticated","authority","hasAuthority","$injector","$q","getHttpService","service","getAdamaTokenService","responseError","console","log","apiBase","refreshAndGetToken","undefined","reject","request","getToken","token","$emit","alertKey","isString","param","$resource","adamaResourceConfig","delete","method","ParseLinks","pdfService","transformResponse","fromJson","links","parse","interceptor","resource","responseType","Accept","transformResponseToPdf","Content-Type","transformRequest","formData","window","FormData","append","$http","jwtHelper","localStorageService","api","getPayload","tokenPayload","decodeToken","getUsername","setToken","set","setRefreshToken","isTokenExpired","when","refreshToken","Authorization","refresh_token","newToken","rejection","constant","adamaWebToolkitTemplateUrl","adamaTokenService","credentials","post","logout","authBackendService","deferred","defer","use","langKey","err","promise","authenticate","previousStateNameParams","keyStr","encode","chr1","chr2","enc1","enc2","enc3","chr3","enc4","charCodeAt","isNaN","charAt","decode","String","fromCharCode","workingList","idList","forEach","binaryFile","ids","selectorData","code","cssCLass","setLanguages","newLanguages","setSelectorData","newSelectorData","getCurrent","storage","isUndefined","getSelectorData","header","Error","parts","p","section","trim","queryString","RegExp","$0","$1","$2","$3","parseInt","FileSaver","headersGetter","filename","dataBlob","Blob","contentDisposition","substring","saveAs","_identity","Password","PasswordResetInit","PasswordResetFinish","_authenticated","isDefined","_id","force","updateAccount","user","changePassword","newPassword","mail","resetPasswordFinish","keyAndPassword","User","openModal","$uibModal","$stateParams","controllerName","templateName","resolveEntity","open","onEnter","userexists","emailexists","USER_MENU","USER_TITLE_DELETE","USER_TITLE_VIEW","USER_TITLE_LIST","USER_TITLE_EDIT","USER_TITLE_NEW","USER_TITLE_IMPORT_XLS","USER_TITLE_EXPORT_XLS","USER_FORM_LOGIN","USER_FORM_FIRSTNAME","USER_FORM_LASTNAME","USER_FORM_EMAIL","USER_FORM_LANGUAGE","USER_FORM_AUTHORITY","USER_LIST_LOGIN","USER_LIST_MAIL","USER_LIST_LANGUAGE","USER_LIST_AUTHORITY","ACCOUNT_PASSWORD","ACCOUNT_PASSWORD_TITLE","ACCOUNT_PASSWORD_NEWPASSWORD","ACCOUNT_PASSWORD_NEWPASSWORD_PLACEHOLDER","ACCOUNT_PASSWORD_NEWPASSWORD_REQUIRED","ACCOUNT_PASSWORD_NEWPASSWORD_MINLENGTH","ACCOUNT_PASSWORD_NEWPASSWORD_MAXLENGTH","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PLACEHOLDER","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_REQUIRED","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MINLENGTH","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MAXLENGTH","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PATTERN","ACCOUNT_PASSWORD_SUBMIT","ACCOUNT_PASSWORD_SAVE_SUCCESS","ACCOUNT_PASSWORD_SAVE_ERROR","ACCOUNT_SETTINGS","ACCOUNT_SETTINGS_TITLE","ACCOUNT_SETTINGS_FIRSTNAME","ACCOUNT_SETTINGS_FIRSTNAME_PLACEHOLDER","ACCOUNT_SETTINGS_FIRSTNAME_REQUIRED","ACCOUNT_SETTINGS_FIRSTNAME_MAXLENGTH","ACCOUNT_SETTINGS_LASTNAME","ACCOUNT_SETTINGS_LASTNAME_PLACEHOLDER","ACCOUNT_SETTINGS_LASTNAME_REQUIRED","ACCOUNT_SETTINGS_LASTNAME_MAXLENGTH","ACCOUNT_SETTINGS_EMAIL","ACCOUNT_SETTINGS_EMAIL_PLACEHOLDER","ACCOUNT_SETTINGS_EMAIL_REQUIRED","ACCOUNT_SETTINGS_EMAIL_EMAIL","ACCOUNT_SETTINGS_EMAIL_MAXLENGTH","ACCOUNT_SETTINGS_LANGUAGE","ACCOUNT_SETTINGS_SUBMIT","ACCOUNT_SETTINGS_SAVE_SUCCESS","ACCOUNT_SETTINGS_SAVE_ERROR","copyAccount","activated","email","firstName","lastName","settingsAccount","current","TOGGLE_NAVIGATION","USERINFO_PROFILE","USERINFO_PASSWORD","USERINFO_SIGNOUT","changeLanguage","updateCurrentLanguage","currentLanguage","menuService","addMenuEntry","addMenuEntries","item","subItems","menuEntries","l","menuEntry","updateMenuEntries","menuItems","items","getItems","addItem","newItem","entityList","isAllChecked","checkAll","isSelected","signout","value","valueKey"],"mappings":"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","file":"adama-web-min.js","sourcesContent":["'use strict';\n\nangular.module('adama-web', [ //\n\t'ngSanitize', //\n\t'ngMessages', //\n\t'ui.router', //\n\t'ui.bootstrap', //\n\t'pascalprecht.translate', //\n\t'ngCookies', //\n\t'ngResource', //\n\t'LocalStorageModule', //\n\t'ngTable', //\n\t'ngFileSaver', //\n\t'ngFileUpload', //\n\t'angular-jwt', //\n\t'angular-loading-bar' //\n]);\n","'use strict';\n\nangular.module('adama-web').config([\"$urlRouterProvider\", function($urlRouterProvider) {\n\t$urlRouterProvider.otherwise('/app/');\n}]);\n\nangular.module('adama-web').run([\"$rootScope\", function($rootScope) {\n\t// change body class depending on application main state (app or login)\n\t$rootScope.additionalBodyClass = 'sidebar-mini';\n\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.name && toState.name.indexOf('auth') === 0) {\n\t\t\t$rootScope.additionalBodyClass = 'login-page';\n\t\t} else {\n\t\t\t$rootScope.additionalBodyClass = 'sidebar-mini';\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').run([\"$rootScope\", \"$filter\", function($rootScope, $filter) {\n\t// change page title depending on current page\n\tvar translateFn = $filter('translate');\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.data && toState.data.pageTitle) {\n\t\t\t$rootScope.pageTitle = translateFn(toState.data.pageTitle);\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.useSanitizeValueStrategy('escapeParameters');\n\t$translateProvider.useLocalStorage();\n\t$translateProvider.registerAvailableLanguageKeys(['en', 'fr'], {\n\t\t'en_*': 'en',\n\t\t'fr_*': 'fr'\n\t});\n\t$translateProvider.determinePreferredLanguage();\n}]);\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app', {\n\t\tabstract: true,\n\t\turl: '/app',\n\t\ttemplate: '' + //\n\t\t\t'<div class=\"wrapper\">' + //\n\t\t\t'\t<ark-header></ark-header>' + //\n\t\t\t'\t<aside class=\"main-sidebar\">' + //\n\t\t\t'\t\t<section class=\"sidebar\">' + //\n\t\t\t'\t\t\t<main-navigation></main-navigation>' + //\n\t\t\t'\t\t</section>' + //\n\t\t\t'\t</aside>' + //\n\t\t\t'\t<adama-alert></adama-alert>' + //\n\t\t\t'\t<ui-view></ui-view>' + //\n\t\t\t'\t<ark-footer></ark-footer>' + //\n\t\t\t'\t<layout-fix add-event=\"true\"></layout-fix>' + //\n\t\t\t'</div>' + //\n\t\t\t'',\n\t\tresolve: {\n\t\t\tauthorize: [\"Principal\", function(Principal) {\n\t\t\t\treturn Principal.authorize();\n\t\t\t}]\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').run([\"ngTableDefaults\", function(ngTableDefaults) {\n\tngTableDefaults.settings = angular.extend({}, ngTableDefaults.settings, {\n\t\tcounts: [10, 20, 50]\n\t});\n\tngTableDefaults.params = angular.extend({}, ngTableDefaults.params, {\n\t\t// init : show first page\n\t\tpage: 1,\n\t\t// init : count per page\n\t\tcount: 20\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'MENU_CATEGORY_USERS': 'Utilisateurs',\n\t\t'PAGER_RESULT': '{{ firstItemIdx }}-{{ lastItemIdx | min:total }} sur {{ total }} entrées',\n\t\t'FLAG_EN': 'Anglais',\n\t\t'FLAG_CN': 'Chinois',\n\t\t'FLAG_FR': 'Français',\n\t\t'FILEUPLOAD_DROPZONE_LABEL': 'Déposez un fichier XLS pour le téléverser ou cliquez sur la zone pour sélectionner un fichier XLS.',\n\t\t'FILEUPLOAD_DROPZONE_LABEL_DROP': 'Vous pouvez déposer le fichier.',\n\t\t'FILEUPLOAD_RESET': 'Retirer le fichier sélectionné et faire une nouvelle sélection.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'MENU_CATEGORY_USERS': 'Users',\n\t\t'PAGER_RESULT': '{{ firstItemIdx }}-{{ lastItemIdx | min:total }} on {{ total }} entries',\n\t\t'FLAG_EN': 'English',\n\t\t'FLAG_CN': 'Chinese',\n\t\t'FLAG_FR': 'French',\n\t\t'FILEUPLOAD_DROPZONE_LABEL': 'Drop a XLS file on this area to upload it or click the area to select a XLS file.',\n\t\t'FILEUPLOAD_DROPZONE_LABEL_DROP': 'You can now drop the file',\n\t\t'FILEUPLOAD_RESET': 'Remove selected file and start over.'\n\t});\n}]);\n\nangular.module('adama-web').run([\"$rootScope\", \"$state\", \"Principal\", function($rootScope, $state, Principal) {\n\t$rootScope.$on('$stateChangeStart', function(event, toState, toStateParams) {\n\t\t$rootScope.toState = toState;\n\t\t$rootScope.toStateParams = toStateParams;\n\t\tif (Principal.isIdentityResolved()) {\n\t\t\tPrincipal.authorize();\n\t\t}\n\t});\n\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n\t\t// Remember previous state unless we've been redirected to login or we've just\n\t\t// reset the state memory after logout. If we're redirected to login, our\n\t\t// previousState is already set in the authExpiredInterceptor. If we're going\n\t\t// to login directly, we don't want to be sent to some previous state anyway\n\t\tif (toState.name !== 'auth.signin' && $rootScope.previousStateName) {\n\t\t\t$rootScope.previousStateName = fromState.name;\n\t\t\t$rootScope.previousStateParams = fromParams;\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$httpProvider\", function($httpProvider) {\n\t$httpProvider.interceptors.push('errorHandlerInterceptor');\n\t$httpProvider.interceptors.push('authExpiredInterceptor');\n\t$httpProvider.interceptors.push('authInterceptor');\n\t$httpProvider.interceptors.push('notificationInterceptor');\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app.personal', {\n\t\tabstract: true,\n\t\turl: '/personal',\n\t\ttemplate: '<ui-view></ui-view>'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').component('adamaAlertError', {\n\ttemplateUrl: 'adama-web/alert/adama-alert-error.html',\n\tcontroller: [\"$rootScope\", \"$scope\", \"$translate\", \"AlertService\", function($rootScope, $scope, $translate, AlertService) {\n\t\tvar ctrl = this;\n\t\tctrl.alerts = [];\n\n\t\tvar addErrorAlert = function(message, key, data) {\n\t\t\tkey = key && key !== null ? key : message;\n\t\t\tctrl.alerts.push(AlertService.add({\n\t\t\t\ttype: 'danger',\n\t\t\t\tmsg: key,\n\t\t\t\tparams: data,\n\t\t\t\ttimeout: 5000,\n\t\t\t\ttoast: AlertService.isToast(),\n\t\t\t\tscoped: true\n\t\t\t}, ctrl.alerts));\n\t\t};\n\n\t\tvar cleanHttpErrorListener = $rootScope.$on('Adama.httpError', function(event, httpResponse) {\n\t\t\tvar i;\n\t\t\tevent.stopPropagation();\n\t\t\tswitch (httpResponse.status) {\n\t\t\t\t// connection refused, server not reachable\n\t\t\t\tcase 0:\n\t\t\t\t\taddErrorAlert('Server not reachable', 'error.server.not.reachable');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 400:\n\t\t\t\t\tvar errorHeader = httpResponse.headers('X-Adama-error');\n\t\t\t\t\tvar entityKey = httpResponse.headers('X-Adama-params');\n\t\t\t\t\tif (errorHeader) {\n\t\t\t\t\t\tvar entityName = $translate.instant('global.menu.entities.' + entityKey);\n\t\t\t\t\t\taddErrorAlert(errorHeader, errorHeader, {\n\t\t\t\t\t\t\tentityName: entityName\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (httpResponse.data && httpResponse.data.fieldErrors) {\n\t\t\t\t\t\tfor (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n\t\t\t\t\t\t\tvar fieldError = httpResponse.data.fieldErrors[i];\n\t\t\t\t\t\t\t// convert 'something[14].other[4].id'\n\t\t\t\t\t\t\t// to 'something[].other[].id' so\n\t\t\t\t\t\t\t// translations can be written to it\n\t\t\t\t\t\t\tvar convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n\t\t\t\t\t\t\tvar fieldName = $translate.instant('Adama.' + fieldError.objectName + '.' + convertedField);\n\t\t\t\t\t\t\taddErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {\n\t\t\t\t\t\t\t\tfieldName: fieldName\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (httpResponse.data && httpResponse.data.message) {\n\t\t\t\t\t\taddErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddErrorAlert(httpResponse.data);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (httpResponse.data && httpResponse.data.message) {\n\t\t\t\t\t\taddErrorAlert(httpResponse.data.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddErrorAlert(JSON.stringify(httpResponse));\n\t\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tif (!!cleanHttpErrorListener) {\n\t\t\t\tcleanHttpErrorListener();\n\t\t\t\tctrl.alerts = [];\n\t\t\t}\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').component('adamaAlert', {\n\ttemplateUrl: 'adama-web/alert/adama-alert.html',\n\tcontroller: [\"AlertService\", function(AlertService) {\n\t\tvar ctrl = this;\n\t\tctrl.alerts = AlertService.get();\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web')\n\t.provider('AlertService', function() {\n\t\tvar toast = false;\n\n\t\tthis.$get = ['$timeout', '$sce', '$translate', function($timeout, $sce, $translate) {\n\n\t\t\tvar alertId = 0; // unique id for each alert. Starts from 0.\n\t\t\tvar alerts = [];\n\t\t\tvar timeout = 5000; // default timeout\n\n\t\t\tvar isToast = function() {\n\t\t\t\treturn toast;\n\t\t\t};\n\n\t\t\tvar clear = function() {\n\t\t\t\talerts = [];\n\t\t\t};\n\n\t\t\tvar get = function() {\n\t\t\t\treturn alerts;\n\t\t\t};\n\n\t\t\tvar closeAlertByIndex = function(index, thisAlerts) {\n\t\t\t\treturn thisAlerts.splice(index, 1);\n\t\t\t};\n\n\t\t\tvar closeAlert = function(id, extAlerts) {\n\t\t\t\tvar thisAlerts = extAlerts ? extAlerts : alerts;\n\t\t\t\treturn closeAlertByIndex(thisAlerts.map(function(e) {\n\t\t\t\t\treturn e.id;\n\t\t\t\t}).indexOf(id), thisAlerts);\n\t\t\t};\n\n\t\t\tvar factory = function(alertOptions) {\n\t\t\t\tvar alert = {\n\t\t\t\t\ttype: alertOptions.type,\n\t\t\t\t\tmsg: $sce.trustAsHtml(alertOptions.msg),\n\t\t\t\t\tid: alertOptions.alertId,\n\t\t\t\t\ttimeout: alertOptions.timeout,\n\t\t\t\t\ttoast: alertOptions.toast,\n\t\t\t\t\tposition: alertOptions.position ? alertOptions.position : 'top right',\n\t\t\t\t\tscoped: alertOptions.scoped,\n\t\t\t\t\tclose: function(alerts) {\n\t\t\t\t\t\treturn closeAlert(this.id, alerts);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (!alert.scoped) {\n\t\t\t\t\talerts.push(alert);\n\t\t\t\t}\n\t\t\t\treturn alert;\n\t\t\t};\n\n\t\t\tvar addAlert = function(alertOptions, extAlerts) {\n\t\t\t\talertOptions.alertId = alertId++;\n\t\t\t\talertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n\t\t\t\tvar alert = factory(alertOptions);\n\t\t\t\tif (alertOptions.timeout && alertOptions.timeout > 0) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\tcloseAlert(alertOptions.alertId, extAlerts);\n\t\t\t\t\t}, alertOptions.timeout);\n\t\t\t\t}\n\t\t\t\treturn alert;\n\t\t\t};\n\n\t\t\tvar success = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar error = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'danger',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar warning = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar info = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\tfactory: factory,\n\t\t\t\tisToast: isToast,\n\t\t\t\tadd: addAlert,\n\t\t\t\tcloseAlert: closeAlert,\n\t\t\t\tcloseAlertByIndex: closeAlertByIndex,\n\t\t\t\tclear: clear,\n\t\t\t\tget: get,\n\t\t\t\tsuccess: success,\n\t\t\t\terror: error,\n\t\t\t\tinfo: info,\n\t\t\t\twarning: warning\n\t\t\t};\n\t\t}];\n\n\t\tthis.showAsToast = function(isToast) {\n\t\t\ttoast = isToast;\n\t\t};\n\n\t});\n","'use strict';\n\nangular.module('adama-web').controller('AccessDeniedCtrl', function() {\n\t// nothing to do\n});\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('auth', {\n\t\tabstract: true,\n\t\turl: '/auth',\n\t\ttemplate: '' + //\n\t\t\t'<ui-view></ui-view>' + //\n\t\t\t''\n\t});\n\n\t$stateProvider.state('auth.signin', {\n\t\turl: '/',\n\t\ttemplateUrl: 'adama-web/auth/signin.html',\n\t\tcontroller: 'SigninCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'SIGNIN',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.recoverPassword', {\n\t\turl: '/recoverPassword',\n\t\ttemplateUrl: 'adama-web/auth/recoverPassword.html',\n\t\tcontroller: 'RecoverPasswordCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'RECOVER',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.accessDenied', {\n\t\turl: '/accessDenied',\n\t\ttemplateUrl: 'adama-web/auth/accessDenied.html',\n\t\tcontroller: 'AccessDeniedCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCESS_DENIED',\n\t\t\tauthorities: []\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'SIGNIN': 'Identification',\n\t\t'SIGNIN_INTRO': 'Identifiez-vous pour démarrer votre session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'J\\'ai oublié mon mot de passe ...',\n\t\t'SIGNIN_USERNAME': 'Identifiant',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'L\\'identifiant est obligatoire',\n\t\t'SIGNIN_PASSWORD': 'Mot de passe',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'SIGNIN_SUBMIT': 'Démarrer la session',\n\t\t'SIGNIN_ERROR': 'Erreur d\\'authentification : identifiant ou mot de passe incorrect.',\n\t\t'RECOVER': 'Récupération de mot de passe',\n\t\t'RECOVER_INTRO': 'Saisissez votre email pour récupérer votre mot de passe',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'L\\'email est obligatoire',\n\t\t'RECOVER_MAIL_EMAIL': 'L\\'email n\\'est pas au bon format',\n\t\t'RECOVER_SUBMIT': 'Récupérer mon mot de passe',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Retour à l\\'identificaition',\n\t\t'RECOVER_SUCCESS': 'Consultez votre email pour connaître comment réinitialiser votre mot de passe.',\n\t\t'RECOVER_ERROR': 'Erreur lors de la récupération du mot de passe.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'L\\'email n\\'existe pas',\n\t\t'ACCESS_DENIED': 'Accès interdit',\n\t\t'ACCESS_DENIED_INTRO': 'Vous n\\'avez pas suffisamment de droits d\\'accéder à cette page.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'SIGNIN': 'Signin',\n\t\t'SIGNIN_INTRO': 'Sign in to start your session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'I forgot my password ...',\n\t\t'SIGNIN_USERNAME': 'Username',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'Username is required',\n\t\t'SIGNIN_PASSWORD': 'Password',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Password is required',\n\t\t'SIGNIN_SUBMIT': 'Start session',\n\t\t'SIGNIN_ERROR': 'Authentication error : Username or password are incorrect.',\n\t\t'RECOVER': 'Recover password',\n\t\t'RECOVER_INTRO': 'Set your email to recover your password',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'Email is required',\n\t\t'RECOVER_MAIL_EMAIL': 'Email does not respect the right format',\n\t\t'RECOVER_SUBMIT': 'Retrieve my password',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Back to signin',\n\t\t'RECOVER_SUCCESS': 'Check your e-mails for details on how to reset your password.',\n\t\t'RECOVER_ERROR': 'Recovering error.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'E-Mail address isn\\'t registered! Please check and try again',\n\t\t'ACCESS_DENIED': 'Access denied',\n\t\t'ACCESS_DENIED_INTRO': 'You do not have enough privileges to access this page.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('RecoverPasswordCtrl', [\"Principal\", function(Principal) {\n\tvar ctrl = this;\n\tctrl.recover = function(userEmail) {\n\t\tctrl.recoverSuccess = false;\n\t\tctrl.recoverError = false;\n\t\tctrl.errorEmailNotExists = false;\n\t\tctrl.loading = true;\n\t\tPrincipal.resetPasswordInit(userEmail).then(function() {\n\t\t\tctrl.recoverSuccess = true;\n\t\t}).catch(function(response) {\n\t\t\tif (response.status === 400 && response.data === 'e-mail address not registered') {\n\t\t\t\tctrl.errorEmailNotExists = true;\n\t\t\t} else {\n\t\t\t\tctrl.recoverError = true;\n\t\t\t}\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('SigninCtrl', [\"$rootScope\", \"$state\", \"Auth\", function($rootScope, $state, Auth) {\n\tvar ctrl = this;\n\tctrl.signin = function(userName, userPassword) {\n\t\tctrl.authenticationError = false;\n\t\tAuth.login({\n\t\t\tusername: userName,\n\t\t\tpassword: userPassword\n\t\t}).then(function() {\n\t\t\tif ($rootScope.previousStateName === 'auth.signin' || $state.get($rootScope.previousStateName) === null) {\n\t\t\t\t$state.go('app.main');\n\t\t\t} else {\n\t\t\t\t$state.go($rootScope.previousStateName, $rootScope.previousStateParams);\n\t\t\t}\n\t\t}).catch(function() {\n\t\t\tctrl.authenticationError = true;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'CRUD_BACK_TO_LIST': 'Retour à la liste',\n\t\t'CRUD_CANCEL': 'Annuler',\n\t\t'CRUD_CONFIRM_DELETE': 'Confirmer la suppression',\n\t\t'CRUD_CONFIRM_EDIT': 'Editer',\n\t\t'CRUD_CONFIRM_EXPORT': 'Confirmer l\\'export',\n\t\t'CRUD_CONFIRM_IMPORT': 'Confirmer l\\'import',\n\t\t'CRUD_CONFIRM_SAVE': 'Créer',\n\t\t'CRUD_DELETE_MESSAGE': 'Etes-vous certain de vouloir supprimer ?',\n\t\t'CRUD_DELETE_SUCCESS': 'Suppression avec succès.',\n\t\t'CRUD_DELETE_ERROR': 'Erreur, impossible de supprimer.',\n\t\t'CRUD_EXPORT_XLS_MESSAGE': 'Vous vous apprétez à exporter toutes les données dans une feuille de calcul Excel (XLS).',\n\t\t'CRUD_EXPORT_XLS_SUCCESS': 'Exportation avec succès.',\n\t\t'CRUD_EXPORT_XLS_ERROR': 'Erreur, impossible d\\'exporter.',\n\t\t'CRUD_IMPORT_XLS_MESSAGE': 'Sélectionnez un fichier Excel puis validez pour un import massif de données.',\n\t\t'CRUD_IMPORT_XLS_SUCCESS': 'Importation avec succès.',\n\t\t'CRUD_IMPORT_XLS_ERROR': 'Erreur, impossible d\\'importer.',\n\t\t'CRUD_NEW': 'Nouveau',\n\t\t'CRUD_MASS_IMPORT': 'Import massif',\n\t\t'CRUD_MASS_EXPORT': 'Export massif',\n\t\t'CRUD_EDIT_SUCCESS': 'Enregistrement avec succès.',\n\t\t'CRUD_NEW_SUCCESS': 'Création avec succès.',\n\t\t'CRUD_SAVE_ERROR': 'Erreur, impossible de sauvegarder.',\n\t\t'CRUD_FORM_ERROR_REQUIRED': 'Le champs est obligatoire.',\n\t\t'CRUD_FORM_ERROR_MAXLENGTH': 'Le champs ne doit pas dépasser {{ maxlength }} caractères.',\n\t\t'CRUD_FORM_ERROR_EMAIL': 'Le format est invalide.',\n\t\t'CRUD_FORM_SEARCH': 'Recherche',\n\t\t'CRUD_FORM_SEARCH_SUBMIT': 'Rechercher',\n\t\t'CRUD_ACTION_VIEW': 'Détails',\n\t\t'CRUD_ACTION_EDIT': 'Editer',\n\t\t'CRUD_ACTION_DELETE': 'Supprimer'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'CRUD_BACK_TO_LIST': 'Back to list',\n\t\t'CRUD_CANCEL': 'Cancel',\n\t\t'CRUD_CONFIRM_DELETE': 'Confirm delete',\n\t\t'CRUD_CONFIRM_EDIT': 'Edit',\n\t\t'CRUD_CONFIRM_EXPORT': 'Confirm export',\n\t\t'CRUD_CONFIRM_IMPORT': 'Confirm import',\n\t\t'CRUD_CONFIRM_SAVE': 'Save',\n\t\t'CRUD_DELETE_MESSAGE': 'Are you sure you want to delete ?',\n\t\t'CRUD_DELETE_SUCCESS': 'Delete successfull.',\n\t\t'CRUD_DELETE_ERROR': 'Error, impossible to delete.',\n\t\t'CRUD_EXPORT_XLS_MESSAGE': 'You\\'re about to export all the data into an Excel spreadsheet (XLS).',\n\t\t'CRUD_EXPORT_XLS_SUCCESS': 'Export successfull.',\n\t\t'CRUD_EXPORT_XLS_ERROR': 'Error, impossible to export.',\n\t\t'CRUD_IMPORT_XLS_MESSAGE': 'Select an Excel file and submit in order to mass import data.',\n\t\t'CRUD_IMPORT_XLS_SUCCESS': 'Import successfull.',\n\t\t'CRUD_IMPORT_XLS_ERROR': 'Error, impossible to import.',\n\t\t'CRUD_NEW': 'New',\n\t\t'CRUD_MASS_IMPORT': 'Mass import',\n\t\t'CRUD_MASS_EXPORT': 'Mass export',\n\t\t'CRUD_EDIT_SUCCESS': 'Save successfull.',\n\t\t'CRUD_NEW_SUCCESS': 'Creation successful.',\n\t\t'CRUD_SAVE_ERROR': 'Error, impossible to save.',\n\t\t'CRUD_FORM_ERROR_REQUIRED': 'This field is required.',\n\t\t'CRUD_FORM_ERROR_MAXLENGTH': 'This field cannot be longer than {{ maxlength }} characters.',\n\t\t'CRUD_FORM_ERROR_EMAIL': 'Format is invalid.',\n\t\t'CRUD_FORM_SEARCH': 'Search',\n\t\t'CRUD_FORM_SEARCH_SUBMIT': 'Search',\n\t\t'CRUD_ACTION_VIEW': 'View details',\n\t\t'CRUD_ACTION_EDIT': 'Edit',\n\t\t'CRUD_ACTION_DELETE': 'Delete'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').component('btnCreate', {\n\ttemplateUrl: 'adama-web/crud/btn-create.html',\n\ttransclude: true,\n\tbindings: {\n\t\tdisableCreate: '<',\n\t\tdisableMassImport: '<',\n\t\tdisableMassExport: '<',\n\t\tdisableAdditionnalAction: '<'\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').component('crudActionDropdown', {\n\tbindings: {\n\t\trouteMapping: '<',\n\t\tdisableView: '<',\n\t\tdisableEdit: '<',\n\t\tdisableDelete: '<'\n\t},\n\ttemplateUrl: 'adama-web/crud/crud-action-dropdown.html'\n});\n","'use strict';\n\nangular.module('adama-web').component('crudCustomFilter', {\n\ttemplateUrl: 'adama-web/crud/crud-custom-filter.html',\n\tbindings: {\n\t\ttableParams: '<',\n\t\tsearchValue: '<',\n\t\tlabelKey: '@'\n\t},\n\tcontroller: function() {\n\t\tvar ctrl = this;\n\t\tctrl.displayFiltered = function() {\n\t\t\tctrl.tableParams.filter({\n\t\t\t\tbusiness: ctrl.searchValue\n\t\t\t});\n\t\t\tctrl.tableParams.page(1);\n\t\t\tctrl.tableParams.reload();\n\t\t};\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').controller('CrudDeleteCtrl', [\"$scope\", \"entity\", \"AlertService\", function($scope, entity, AlertService) {\n\tvar ctrl = this;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\tctrl.confirmDelete = function() {\n\t\tentity.$delete().then(function() {\n\t\t\tAlertService.success('CRUD_DELETE_SUCCESS');\n\t\t\t$scope.$close();\n\t\t}).catch(function() {\n\t\t\tAlertService.error('CRUD_DELETE_ERROR');\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudEditCtrl', [\"$scope\", \"entity\", \"EntityGenericResource\", \"AlertService\", function($scope, entity, EntityGenericResource, AlertService) {\n\tvar ctrl = this;\n\tctrl.isEdition = !!entity;\n\tctrl.entity = entity;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\tctrl.save = function() {\n\t\tvar resourceAction;\n\t\tif (ctrl.isEdition) {\n\t\t\tresourceAction = EntityGenericResource.update;\n\t\t} else {\n\t\t\tresourceAction = EntityGenericResource.save;\n\t\t}\n\t\tresourceAction(ctrl.entity).$promise.then(function(newEntity) {\n\t\t\tif (ctrl.isEdition) {\n\t\t\t\tAlertService.success('CRUD_EDIT_SUCCESS');\n\t\t\t} else {\n\t\t\t\tAlertService.success('CRUD_NEW_SUCCESS');\n\t\t\t}\n\t\t\t$scope.$close(newEntity);\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudExportXlsCtrl', [\"$scope\", \"AlertService\", \"EntityGenericResource\", function($scope, AlertService, EntityGenericResource) {\n\tvar ctrl = this;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\tctrl.loading = false;\n\tctrl.confirmExportXls = function() {\n\t\tctrl.loading = true;\n\t\tEntityGenericResource.massExportXls().$promise.then(function(newEntity) {\n\t\t\tAlertService.success('CRUD_EXPORT_XLS_SUCCESS');\n\t\t\t$scope.$close(newEntity);\n\t\t}).catch(function() {\n\t\t\tAlertService.error('CRUD_EXPORT_XLS_ERROR');\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudImportXlsCtrl', [\"$scope\", \"AlertService\", \"EntityGenericResource\", function($scope, AlertService, EntityGenericResource) {\n\tvar ctrl = this;\n\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\n\tctrl.loading = false;\n\tctrl.confirmImportXls = function() {\n\t\tvar file = ctrl.file;\n\t\tctrl.loading = true;\n\t\tEntityGenericResource.massImportXls({\n\t\t\tfile: file\n\t\t}).$promise.then(function() {\n\t\t\tAlertService.success('CRUD_IMPORT_XLS_SUCCESS');\n\t\t\t$scope.$close();\n\t\t}, function() {\n\t\t\tAlertService.error('CRUD_IMPORT_XLS_ERROR');\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudListCtrl', [\"EntityGenericResource\", \"NgTableParams\", function(EntityGenericResource, NgTableParams) {\n\t// TODO filter search results\n\tvar ctrl = this;\n\n\t// search data\n\tctrl.tableParams = new NgTableParams({}, {\n\t\ttotal: 0,\n\t\tgetData: function($defer, params) {\n\t\t\tvar sort = params.sorting();\n\t\t\tvar sortValues = [];\n\t\t\tif (!angular.equals({}, sort)) {\n\t\t\t\tfor (var key in sort) {\n\t\t\t\t\tif (sort.hasOwnProperty(key)) {\n\t\t\t\t\t\tsortValues.push(key + ',' + sort[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar requestParams = angular.extend({}, {\n\t\t\t\tpage: params.page() - 1,\n\t\t\t\tsize: params.count(),\n\t\t\t\tsort: sortValues,\n\t\t\t\tsearch: params.filter().$\n\t\t\t}, params.filter().business);\n\t\t\tEntityGenericResource.query(requestParams).$promise.then(function(entities) {\n\t\t\t\tparams.total(entities.$metadata.totalItems);\n\t\t\t\t$defer.resolve(entities);\n\t\t\t});\n\t\t}\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').component('crudSearchField', {\n\ttemplateUrl: 'adama-web/crud/crud-search-field.html',\n\tbindings: {\n\t\ttableParams: '<'\n\t},\n\tcontroller: function() {\n\t\tvar ctrl = this;\n\t\tctrl.search = function() {\n\t\t\tctrl.tableParams.filter({\n\t\t\t\t$: ctrl.searchValue\n\t\t\t});\n\t\t\tctrl.tableParams.page(1);\n\t\t\tctrl.tableParams.reload();\n\t\t};\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').controller('CrudViewCtrl', [\"$scope\", \"entity\", function($scope, entity) {\n\tvar ctrl = this;\n\tctrl.entity = entity;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnBackToList', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-back-to-list.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnCancel', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-cancel.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmDelete', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-confirm-delete.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmEdit', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-confirm-edit.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmExportXls', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-confirm-export-xls.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmImportXls', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-confirm-import-xls.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('dsAuthorities', [\"$parse\", \"adamaConstant\", function($parse, adamaConstant) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar authorities = adamaConstant.authorities;\n\t\t\t$parse(attrs.data).assign(scope, authorities);\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('dsBinaryFileUrl', [\"$parse\", \"binaryFileService\", function($parse, binaryFileService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar updateOutput = function(binaryFileList) {\n\t\t\t\tif (attrs.output) {\n\t\t\t\t\tbinaryFileList = angular.copy(binaryFileList);\n\t\t\t\t}\n\t\t\t\tif (!angular.isArray(binaryFileList)) {\n\t\t\t\t\tbinaryFileList = [binaryFileList];\n\t\t\t\t}\n\t\t\t\tbinaryFileService.initUrlForBinaryFiles(binaryFileList).then(function() {\n\t\t\t\t\tif (attrs.output) {\n\t\t\t\t\t\t$parse(attrs.output).assign(scope, binaryFileList);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tscope.$watch(attrs.input, function() {\n\t\t\t\tvar binaryFileList = $parse(attrs.input)(scope);\n\t\t\t\tif (binaryFileList) {\n\t\t\t\t\tupdateOutput(binaryFileList);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('dsLanguage', [\"$parse\", \"language\", function($parse, language) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tlanguage.getAll().then(function(languages) {\n\t\t\t\t$parse(attrs.data).assign(scope, languages);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('dsPrincipalIdentity', [\"$parse\", \"Principal\", function($parse, Principal) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tPrincipal.identity().then(function(account) {\n\t\t\t\t$parse(attrs.data).assign(scope, account);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('layoutFix', [\"$rootScope\", function($rootScope) {\n\treturn {\n\t\tscope: {\n\t\t\taddEvent: '='\n\t\t},\n\t\trestrict: 'E',\n\t\tlink: function postLink(scope) {\n\t\t\tif (scope.addEvent) {\n\t\t\t\t$rootScope.$on('$viewContentLoaded', function() {\n\t\t\t\t\t$.AdminLTE.layout.fix();\n\t\t\t\t});\n\t\t\t}\n\t\t\t$.AdminLTE.layout.fix();\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('lazyControl', [\"$rootScope\", \"$filter\", function($rootScope, $filter) {\n\tvar translateFilter = $filter('translate');\n\treturn {\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tvar id, additionalLabelAttributes, labelScreenOnly, labelContainer;\n\t\t\tvar isPlaceholderForced = false;\n\t\t\tif (attrs.type === 'checkbox') {\n\t\t\t\telement.wrap('<div class=\"checkbox\"><label></label></div>');\n\t\t\t\telement.after('<span></span>');\n\t\t\t\tlabelContainer = element.next().eq(0);\n\t\t\t} else {\n\t\t\t\tid = attrs.ngModel.replace(/\\./g, '_');\n\t\t\t\tadditionalLabelAttributes = ' for=\"' + id + '\"';\n\t\t\t\tlabelScreenOnly = attrs.labelScreenOnly || false;\n\t\t\t\tif (labelScreenOnly) {\n\t\t\t\t\tadditionalLabelAttributes += ' class=\"sr-only\"';\n\t\t\t\t}\n\t\t\t\tif (attrs.placeholder) {\n\t\t\t\t\tisPlaceholderForced = true;\n\t\t\t\t}\n\t\t\t\telement.attr('id', id);\n\t\t\t\telement.addClass('form-control');\n\t\t\t\telement.wrap('<div class=\"form-group\"></div>');\n\t\t\t\telement.before('<label' + additionalLabelAttributes + '></label>');\n\t\t\t\tlabelContainer = element.prev().eq(0);\n\t\t\t}\n\t\t\tvar initLabelAndPlaceholder = function() {\n\t\t\t\tvar label = translateFilter(attrs.lazyControlLabelKey);\n\t\t\t\tlabelContainer.html(label);\n\t\t\t\tif (!isPlaceholderForced) {\n\t\t\t\t\telement.attr('placeholder', label);\n\t\t\t\t}\n\t\t\t};\n\t\t\tinitLabelAndPlaceholder();\n\t\t\t$rootScope.$on('$translateChangeSuccess', function() {\n\t\t\t\tinitLabelAndPlaceholder();\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').filter('min', function() {\n\treturn Math.min;\n});\n","'use strict';\n\nangular.module('adama-web').directive('hasAnyAuthority', [\"Principal\", function(Principal) {\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar setVisible = function() {\n\t\t\t\telement.removeClass('hidden');\n\t\t\t};\n\t\t\tvar setHidden = function() {\n\t\t\t\telement.addClass('hidden');\n\t\t\t};\n\t\t\tvar authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\t\t\tvar defineVisibility = function(reset) {\n\t\t\t\tvar result;\n\t\t\t\tif (reset) {\n\t\t\t\t\tsetVisible();\n\t\t\t\t}\n\n\t\t\t\tresult = Principal.hasAnyAuthority(authorities);\n\t\t\t\tif (result) {\n\t\t\t\t\tsetVisible();\n\t\t\t\t} else {\n\t\t\t\t\tsetHidden();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (authorities.length > 0) {\n\t\t\t\tdefineVisibility(true);\n\n\t\t\t\tscope.$watch(function() {\n\t\t\t\t\treturn Principal.isAuthenticated();\n\t\t\t\t}, function() {\n\t\t\t\t\tdefineVisibility(true);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('hasAuthority', [\"Principal\", function(Principal) {\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar setVisible = function() {\n\t\t\t\telement.removeClass('hidden');\n\t\t\t};\n\t\t\tvar setHidden = function() {\n\t\t\t\telement.addClass('hidden');\n\t\t\t};\n\t\t\tvar authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\t\t\tvar defineVisibility = function(reset) {\n\n\t\t\t\tif (reset) {\n\t\t\t\t\tsetVisible();\n\t\t\t\t}\n\n\t\t\t\tPrincipal.hasAuthority(authority).then(function(result) {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tsetVisible();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetHidden();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (authority.length > 0) {\n\t\t\t\tdefineVisibility(true);\n\n\t\t\t\tscope.$watch(function() {\n\t\t\t\t\treturn Principal.isAuthenticated();\n\t\t\t\t}, function() {\n\t\t\t\t\tdefineVisibility(true);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-web').factory('authExpiredInterceptor', [\"$injector\", \"$q\", \"adamaConstant\", function($injector, $q, adamaConstant) {\n\tvar getHttpService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$http'));\n\t\t};\n\t}());\n\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\treturn {\n\t\tresponseError: function(response) {\n\t\t\tconsole.log('authExpiredInterceptor');\n\t\t\tvar config = response.config;\n\t\t\tconsole.log('config.url', config.url);\n\t\t\tif (response.status === 401 && config && config.url.indexOf(adamaConstant.apiBase) === 0 && config.url.indexOf(adamaConstant.apiBase + 'login/authenticate') !== 0) {\n\t\t\t\tconsole.log('authExpiredInterceptor error 401, refresh token');\n\t\t\t\treturn getAdamaTokenService().refreshAndGetToken().then(function() {\n\t\t\t\t\tconsole.log('authExpiredInterceptor token is refresh, reset Authorization header');\n\t\t\t\t\tconfig.headers['Authorization'] = undefined;\n\t\t\t\t\treturn getHttpService()(config);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-web').factory('authInterceptor', [\"$injector\", \"adamaConstant\", function($injector, adamaConstant) {\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\treturn {\n\t\t// Add authorization token to headers\n\t\trequest: function(config) {\n\t\t\tconfig.headers = config.headers || {};\n\t\t\tif (!config.headers['Authorization'] && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\tconsole.log('authInterceptor need authorization, getting token');\n\t\t\t\treturn getAdamaTokenService().getToken().then(function(token) {\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn config;\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('errorHandlerInterceptor', [\"$q\", \"$rootScope\", function($q, $rootScope) {\n\treturn {\n\t\t'responseError': function(response) {\n\t\t\tif (!(response.status === 401 && response.data === 'Bad credentials')) {\n\t\t\t\t$rootScope.$emit('Adama.httpError', response);\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('notificationInterceptor', [\"$q\", \"AlertService\", function($q, AlertService) {\n\treturn {\n\t\tresponse: function(response) {\n\t\t\tvar alertKey = response.headers('X-Adama-alert');\n\t\t\tif (angular.isString(alertKey)) {\n\t\t\t\tAlertService.success(alertKey, {\n\t\t\t\t\tparam: response.headers('X-Adama-params')\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response;\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('User', [\"$resource\", \"adamaConstant\", \"adamaResourceConfig\", function($resource, adamaConstant, adamaResourceConfig) {\n\tvar config = angular.extend({}, adamaResourceConfig, {\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tlogin: '@login'\n\t\t\t}\n\t\t}\n\t});\n\treturn $resource(adamaConstant.apiBase + 'users/:login', {}, config);\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('adamaResourceConfig', [\"ParseLinks\", \"pdfService\", function(ParseLinks, pdfService) {\n\treturn {\n\t\t'query': {\n\t\t\tmethod: 'GET',\n\t\t\tisArray: true,\n\t\t\ttransformResponse: function(data, headers, status) {\n\t\t\t\tdata = angular.fromJson(data);\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tdata.$metadata = {\n\t\t\t\t\t\tlinks: ParseLinks.parse(headers('link')),\n\t\t\t\t\t\ttotalItems: headers('X-Total-Count')\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t},\n\t\t\tinterceptor: {\n\t\t\t\tresponse: function(response) {\n\t\t\t\t\tresponse.resource.$metadata = response.data.$metadata;\n\t\t\t\t\treturn response.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'get': {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\t'save': {\n\t\t\tmethod: 'POST'\n\t\t},\n\t\t'update': {\n\t\t\tmethod: 'PUT'\n\t\t},\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tid: '@id'\n\t\t\t}\n\t\t},\n\t\t'massExportXls': {\n\t\t\tmethod: 'GET',\n\t\t\tresponseType: 'arraybuffer',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n\t\t\t},\n\t\t\ttransformResponse: pdfService.transformResponseToPdf\n\t\t},\n\t\t'massImportXls': {\n\t\t\tmethod: 'POST',\n\t\t\tparams: {\n\t\t\t\tmethod: 'import-xls'\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\t'Content-Type': undefined\n\t\t\t},\n\t\t\ttransformRequest: function(data) {\n\t\t\t\tvar formData = new window.FormData();\n\t\t\t\tvar file = data.file;\n\t\t\t\tformData.append('file', file, file.name);\n\t\t\t\treturn formData;\n\t\t\t}\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-web').factory('adamaTokenService', [\"$rootScope\", \"$http\", \"$q\", \"$state\", \"jwtHelper\", \"localStorageService\", \"adamaConstant\", function($rootScope, $http, $q, $state, jwtHelper, localStorageService, adamaConstant) {\n\tvar api = {};\n\n\tvar getPayload = function(key) {\n\t\treturn api.getToken().then(function(token) {\n\t\t\tif (token) {\n\t\t\t\tvar tokenPayload = jwtHelper.decodeToken(token);\n\t\t\t\tif (key) {\n\t\t\t\t\treturn tokenPayload[key];\n\t\t\t\t}\n\t\t\t\treturn tokenPayload;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t};\n\n\tapi.getUsername = function() {\n\t\treturn getPayload('sub');\n\t};\n\n\tapi.setToken = function(token) {\n\t\tlocalStorageService.set('token', token);\n\t};\n\n\tapi.setRefreshToken = function(token) {\n\t\tlocalStorageService.set('refresh_token', token);\n\t};\n\n\tapi.getToken = function() {\n\t\tvar token = localStorageService.get('token');\n\t\tif (token && jwtHelper.isTokenExpired(token)) {\n\t\t\tconsole.log('adamaTokenService.getToken token is expired');\n\t\t\treturn api.refreshAndGetToken();\n\t\t}\n\t\treturn $q.when(token);\n\t};\n\n\tapi.refreshAndGetToken = function() {\n\t\tvar token = localStorageService.get('token');\n\t\tif (!token) {\n\t\t\tconsole.error('no token, redirect to signin');\n\t\t\t$state.go('auth.signin');\n\t\t\treturn $q.reject('refreshAndGetToken : no token');\n\t\t}\n\t\tvar refreshToken = localStorageService.get('refresh_token');\n\t\treturn $http({\n\t\t\tmethod: 'POST',\n\t\t\turl: adamaConstant.apiBase + 'login/refresh',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t'refresh_token': refreshToken\n\t\t\t}\n\t\t}).then(function(response) {\n\t\t\tvar data = response.data;\n\t\t\tvar newToken = data['access_token'];\n\t\t\tapi.setToken(newToken);\n\t\t\treturn newToken;\n\t\t}, function(rejection) {\n\t\t\tconsole.error('error while refreshing user token, redirect to signin', rejection);\n\t\t\t$state.go('auth.signin');\n\t\t\tapi.setToken(undefined);\n\t\t\treturn $q.reject(rejection);\n\t\t});\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').constant('adamaConstant', {\n\tapiBase: 'http://localhost:13337/',\n\tadamaWebToolkitTemplateUrl: {\n\t\t// TODO\n\t},\n\tauthorities: ['ROLE_ADMIN', 'ROLE_USER', 'ROLE_MANAGER']\n});\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-web').factory('authBackendService', [\"$http\", \"adamaConstant\", \"adamaTokenService\", function loginService($http, adamaConstant, adamaTokenService) {\n\tvar api = {};\n\n\tapi.login = function(credentials) {\n\t\treturn $http.post(adamaConstant.apiBase + 'login/authenticate', {\n\t\t\tusername: credentials.username,\n\t\t\tpassword: credentials.password\n\t\t}).then(function(response) {\n\t\t\tvar data = response.data;\n\t\t\tadamaTokenService.setToken(data['access_token']);\n\t\t\tadamaTokenService.setRefreshToken(data['refresh_token']);\n\t\t});\n\t};\n\n\tapi.logout = function() {\n\t\tadamaTokenService.setToken(undefined);\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('Auth', [\"$rootScope\", \"$state\", \"$q\", \"$translate\", \"Principal\", \"authBackendService\", function Auth($rootScope, $state, $q, $translate, Principal, authBackendService) {\n\tvar api = {};\n\n\tapi.login = function(credentials) {\n\t\tvar deferred = $q.defer();\n\n\t\tauthBackendService.login(credentials).then(function(data) {\n\t\t\t// retrieve the logged account information\n\t\t\tPrincipal.identity(true).then(function(account) {\n\t\t\t\t// After the login the language will be changed to\n\t\t\t\t// the language selected by the user during his\n\t\t\t\t// registration\n\t\t\t\t$translate.use(account.langKey);\n\t\t\t\tdeferred.resolve(data);\n\t\t\t});\n\t\t}).catch(function(err) {\n\t\t\tapi.logout();\n\t\t\tdeferred.reject(err);\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\tapi.logout = function() {\n\t\tauthBackendService.logout();\n\t\tPrincipal.authenticate(null);\n\t\t// Reset state memory\n\t\t$rootScope.previousStateName = undefined;\n\t\t$rootScope.previousStateNameParams = undefined;\n\t};\n\n\treturn api;\n}]);\n","/*jshint bitwise: false*/\n'use strict';\n\nangular.module('adama-web').service('Base64', function() {\n\tvar keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\tthis.encode = function(input) {\n\t\tvar output = '';\n\t\tvar chr1, chr2, enc1, enc2, enc3;\n\t\tvar chr3 = '';\n\t\tvar enc4 = '';\n\t\tvar i = 0;\n\n\t\twhile (i < input.length) {\n\t\t\tchr1 = input.charCodeAt(i++);\n\t\t\tchr2 = input.charCodeAt(i++);\n\t\t\tchr3 = input.charCodeAt(i++);\n\n\t\t\tenc1 = chr1 >> 2;\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n\t\t\tenc4 = chr3 & 63;\n\n\t\t\tif (isNaN(chr2)) {\n\t\t\t\tenc3 = enc4 = 64;\n\t\t\t} else if (isNaN(chr3)) {\n\t\t\t\tenc4 = 64;\n\t\t\t}\n\n\t\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n\t\t\tchr1 = chr2 = chr3 = '';\n\t\t\tenc1 = enc2 = enc3 = enc4 = '';\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tthis.decode = function(input) {\n\t\tvar output = '';\n\t\tvar chr1, chr2, enc1, enc2, enc3;\n\t\tvar chr3 = '';\n\t\tvar enc4 = '';\n\t\tvar i = 0;\n\n\t\t// remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n\t\twhile (i < input.length) {\n\t\t\tenc1 = keyStr.indexOf(input.charAt(i++));\n\t\t\tenc2 = keyStr.indexOf(input.charAt(i++));\n\t\t\tenc3 = keyStr.indexOf(input.charAt(i++));\n\t\t\tenc4 = keyStr.indexOf(input.charAt(i++));\n\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\n\n\t\t\toutput = output + String.fromCharCode(chr1);\n\n\t\t\tif (enc3 !== 64) {\n\t\t\t\toutput = output + String.fromCharCode(chr2);\n\t\t\t}\n\t\t\tif (enc4 !== 64) {\n\t\t\t\toutput = output + String.fromCharCode(chr3);\n\t\t\t}\n\n\t\t\tchr1 = chr2 = chr3 = '';\n\t\t\tenc1 = enc2 = enc3 = enc4 = '';\n\t\t}\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').factory('binaryFileService', [\"$http\", \"$q\", \"adamaConstant\", function($http, $q, adamaConstant) {\n\tvar api = {};\n\n\tapi.initUrlForBinaryFiles = function(binaryFileList) {\n\t\tvar workingList = [];\n\t\tvar idList = [];\n\t\tangular.forEach(binaryFileList, function(binaryFile) {\n\t\t\tif (binaryFile && binaryFile.id && !binaryFile.url) {\n\t\t\t\tworkingList.push(binaryFile);\n\t\t\t\tidList.push(binaryFile.id);\n\t\t\t}\n\t\t});\n\t\tif (idList.length) {\n\t\t\treturn $http({\n\t\t\t\tmethod: 'GET',\n\t\t\t\turl: adamaConstant.apiBase + 'binaryFiles',\n\t\t\t\tdata: {\n\t\t\t\t\tids: idList\n\t\t\t\t}\n\t\t\t}).then(function(response) {\n\t\t\t\tangular.forEach(workingList, function(binaryFile) {\n\t\t\t\t\tbinaryFile.url = response.data[binaryFile.id];\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn $q.when();\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').provider('language', function() {\n\tvar languages = ['en', 'fr'];\n\tvar selectorData = [{\n\t\tcode: 'en',\n\t\tlabelKey: 'FLAG_EN',\n\t\tcssCLass: 'us'\n\t}, {\n\t\tcode: 'fr',\n\t\tlabelKey: 'FLAG_FR',\n\t\tcssCLass: 'fr'\n\t}];\n\n\tthis.setLanguages = function(newLanguages) {\n\t\tlanguages = newLanguages;\n\t};\n\n\tthis.setSelectorData = function(newSelectorData) {\n\t\tselectorData = newSelectorData;\n\t};\n\n\tthis.$get = [\"$q\", \"$http\", \"$translate\", function($q, $http, $translate) {\n\t\tvar api = {};\n\n\t\tapi.getCurrent = function() {\n\t\t\tvar language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\t\t\tif (angular.isUndefined(language)) {\n\t\t\t\tlanguage = 'en';\n\t\t\t}\n\t\t\treturn $q.when(language);\n\t\t};\n\n\t\tapi.getAll = function() {\n\t\t\treturn $q.when(languages);\n\t\t};\n\n\t\tapi.getSelectorData = function() {\n\t\t\treturn $q.when(selectorData);\n\t\t};\n\n\t\treturn api;\n\t}];\n});\n","'use strict';\n\nangular.module('adama-web').service('ParseLinks', function() {\n\tthis.parse = function(header) {\n\t\tif (header.length === 0) {\n\t\t\tthrow new Error('input must not be of zero length');\n\t\t}\n\n\t\t// Split parts by comma\n\t\tvar parts = header.split(',');\n\t\tvar links = {};\n\t\t// Parse each part into a named link\n\t\tangular.forEach(parts, function(p) {\n\t\t\tvar section = p.split(';');\n\t\t\tif (section.length !== 2) {\n\t\t\t\tthrow new Error('section could not be split on \";\"');\n\t\t\t}\n\t\t\tvar url = section[0].replace(/<(.*)>/, '$1').trim();\n\t\t\tvar queryString = {};\n\t\t\turl.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function($0, $1, $2, $3) {\n\t\t\t\tqueryString[$1] = $3;\n\t\t\t});\n\t\t\tvar page = queryString.page;\n\t\t\tif (angular.isString(page)) {\n\t\t\t\tpage = parseInt(page);\n\t\t\t}\n\t\t\tvar name = section[1].replace(/rel='(.*)'/, '$1').trim();\n\t\t\tlinks[name] = page;\n\t\t});\n\n\t\treturn links;\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').factory('pdfService', [\"FileSaver\", function(FileSaver) {\n\tvar api = {};\n\n\tapi.transformResponseToPdf = function(data, headersGetter, status) {\n\t\tif (status === 200) {\n\t\t\tvar dataBlob = new Blob([data], {\n\t\t\t\ttype: 'application/pdf'\n\t\t\t});\n\t\t\tvar contentDisposition = headersGetter('Content-Disposition');\n\t\t\tvar filename;\n\t\t\tif (contentDisposition) {\n\t\t\t\tfilename = contentDisposition.substring('attachment;filename = '.length);\n\t\t\t}\n\t\t\tif (!filename) {\n\t\t\t\tfilename = 'file.pdf';\n\t\t\t}\n\t\t\tFileSaver.saveAs(dataBlob, filename);\n\t\t}\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('Principal', [\"$http\", \"$q\", \"$rootScope\", \"$resource\", \"$state\", \"adamaConstant\", \"adamaTokenService\", function($http, $q, $rootScope, $resource, $state, adamaConstant, adamaTokenService) {\n\tvar Password = $resource(adamaConstant.apiBase + 'account/change_password');\n\tvar PasswordResetInit = $resource(adamaConstant.apiBase + 'account/reset_password/init');\n\tvar PasswordResetFinish = $resource(adamaConstant.apiBase + 'account/reset_password/finish');\n\n\tvar _identity;\n\tvar _authenticated = false;\n\n\tvar api = {};\n\n\tapi.isIdentityResolved = function() {\n\t\treturn angular.isDefined(_identity);\n\t};\n\n\tapi.isAuthenticated = function() {\n\t\treturn _authenticated;\n\t};\n\n\tapi.hasAuthority = function(authority) {\n\t\tif (!_authenticated) {\n\t\t\treturn $q.when(false);\n\t\t}\n\t\treturn this.identity().then(function(_id) {\n\t\t\treturn _id.authority && _id.authority === authority;\n\t\t}, function() {\n\t\t\treturn false;\n\t\t});\n\t};\n\n\tapi.hasAnyAuthority = function(authorities) {\n\t\tif (!_authenticated || !_identity || !_identity.authority) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < authorities.length; i++) {\n\t\t\tif (_identity.authority === authorities[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tapi.authenticate = function(identity) {\n\t\t_identity = identity;\n\t\t_authenticated = identity !== null;\n\t};\n\n\tapi.identity = function(force) {\n\t\tvar deferred = $q.defer();\n\n\t\tif (force === true) {\n\t\t\t_identity = undefined;\n\t\t}\n\n\t\t// check and see if we have retrieved the identity data from the\n\t\t// server.\n\t\t// if we have, reuse it by immediately resolving\n\t\tif (angular.isDefined(_identity)) {\n\t\t\tdeferred.resolve(_identity);\n\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\t// retrieve the identity data from the server, update the\n\t\t// identity object, and then resolve.\n\n\t\t// from jwt token : sub\n\t\t// users/byLogin/:sub\n\t\tadamaTokenService.getUsername().then(function(username) {\n\t\t\tif (username) {\n\t\t\t\treturn $http({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: adamaConstant.apiBase + 'users/byLogin/' + username\n\t\t\t\t}).then(function(response) {\n\t\t\t\t\treturn response.data;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn $q.reject('not connected');\n\t\t}).then(function(account) {\n\t\t\t_identity = account;\n\t\t\t_authenticated = true;\n\t\t\tdeferred.resolve(_identity);\n\t\t}, function() {\n\t\t\t_identity = null;\n\t\t\t_authenticated = false;\n\t\t\tdeferred.resolve(_identity);\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\tapi.authorize = function(force) {\n\t\treturn api.identity(force).then(function() {\n\t\t\tvar isAuthenticated = api.isAuthenticated();\n\t\t\t// an authenticated user can't access to login pages\n\t\t\tif (isAuthenticated && $rootScope.toState.name && $rootScope.toState.name === 'auth.signin') {\n\t\t\t\t$state.go('app.main');\n\t\t\t}\n\t\t\tif ((!$rootScope.toState.data || !$rootScope.toState.data.authorities) && !isAuthenticated) {\n\t\t\t\t// user is not signed in but desired state needs an\n\t\t\t\t// authenticated user\n\t\t\t\t$state.go('auth.signin');\n\t\t\t} else if ($rootScope.toState.data && //\n\t\t\t\t$rootScope.toState.data.authorities && //\n\t\t\t\t$rootScope.toState.data.authorities.length > 0 && //\n\t\t\t\t!api.hasAnyAuthority($rootScope.toState.data.authorities) //\n\t\t\t) {\n\t\t\t\tif (isAuthenticated) {\n\t\t\t\t\t// user is signed in but not authorized for\n\t\t\t\t\t// desired state\n\t\t\t\t\t$state.go('auth.accessDenied');\n\t\t\t\t} else {\n\t\t\t\t\t// user is not authenticated. stow the state\n\t\t\t\t\t// they wanted before you\n\t\t\t\t\t// send them to the signin state, so you can\n\t\t\t\t\t// return them when you're done\n\t\t\t\t\t$rootScope.previousStateName = $rootScope.toState;\n\t\t\t\t\t$rootScope.previousStateNameParams = $rootScope.toStateParams;\n\t\t\t\t\t// now, send them to the signin state so they\n\t\t\t\t\t// can log in\n\t\t\t\t\t$state.go('auth.signin');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tapi.updateAccount = function(account) {\n\t\treturn $http({\n\t\t\tmethod: 'PUT',\n\t\t\turl: adamaConstant.apiBase + 'users',\n\t\t\tdata: {\n\t\t\t\tuser: account\n\t\t\t}\n\t\t}).then(function() {\n\t\t\t$rootScope.$emit('auth.updateAccount', {\n\t\t\t\taccount: account\n\t\t\t});\n\t\t\treturn account;\n\t\t});\n\t};\n\n\tapi.changePassword = function(newPassword) {\n\t\treturn Password.save(newPassword).$promise;\n\t};\n\n\tapi.resetPasswordInit = function(mail) {\n\t\treturn PasswordResetInit.save(mail).$promise;\n\t};\n\n\tapi.resetPasswordFinish = function(keyAndPassword) {\n\t\treturn PasswordResetFinish.save(keyAndPassword).$promise;\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app.user', {\n\t\turl: '/users',\n\t\ttemplateUrl: 'adama-web/user/user-list.html',\n\t\tcontroller: 'CrudListCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tresolve: {\n\t\t\tEntityGenericResource: [\"User\", function(User) {\n\t\t\t\treturn User;\n\t\t\t}]\n\t\t},\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_LIST',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\tvar openModal = function($state, $uibModal, $stateParams, controllerName, templateName) {\n\t\tvar resolveEntity;\n\t\tif ($stateParams) {\n\t\t\tresolveEntity = /* @ngInject */ [\"User\", function(User) {\n\t\t\t\treturn User.get({\n\t\t\t\t\tlogin: $stateParams.login\n\t\t\t\t}).$promise;\n\t\t\t}];\n\t\t}\n\t\t$uibModal.open({\n\t\t\ttemplateUrl: 'adama-web/user/' + templateName,\n\t\t\tresolve: {\n\t\t\t\tentity: resolveEntity,\n\t\t\t\tEntityGenericResource: [\"User\", function(User) {\n\t\t\t\t\treturn User;\n\t\t\t\t}]\n\t\t\t},\n\t\t\tcontroller: controllerName + ' as ctrl'\n\t\t}).result.then(function() {\n\t\t\t$state.go('^', {}, {\n\t\t\t\treload: true\n\t\t\t});\n\t\t}).catch(function() {\n\t\t\t$state.go('^');\n\t\t});\n\t};\n\n\t$stateProvider.state('app.user.edit', {\n\t\turl: '/edit/:login',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"$stateParams\", function($state, $uibModal, $stateParams) {\n\t\t\topenModal($state, $uibModal, $stateParams, 'CrudEditCtrl', 'user-edit.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_EDIT',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.create', {\n\t\turl: '/new',\n\t\tonEnter: [\"$state\", \"$uibModal\", function($state, $uibModal) {\n\t\t\topenModal($state, $uibModal, undefined, 'CrudEditCtrl', 'user-edit.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_NEW',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.view', {\n\t\turl: '/view/:login',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"$stateParams\", function($state, $uibModal, $stateParams) {\n\t\t\topenModal($state, $uibModal, $stateParams, 'CrudViewCtrl', 'user-view.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_VIEW',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.delete', {\n\t\turl: '/delete/:login',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"$stateParams\", function($state, $uibModal, $stateParams) {\n\t\t\topenModal($state, $uibModal, $stateParams, 'CrudDeleteCtrl', 'user-delete.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_DELETE',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.importXls', {\n\t\turl: '/import-xls',\n\t\tonEnter: [\"$state\", \"$uibModal\", function($state, $uibModal) {\n\t\t\topenModal($state, $uibModal, undefined, 'CrudImportXlsCtrl', 'user-import-xls.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_IMPORT_XLS',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.exportXls', {\n\t\turl: '/export-xls',\n\t\tonEnter: [\"$state\", \"$uibModal\", function($state, $uibModal) {\n\t\t\topenModal($state, $uibModal, undefined, 'CrudExportXlsCtrl', 'user-export-xls.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_EXPORT_XLS',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\terror: {\n\t\t\tuserexists: 'Login déjà utilisé !',\n\t\t\temailexists: 'E-mail déjà utilisé !'\n\t\t},\n\t\t'USER_MENU': 'Utilisateurs',\n\t\t'USER_TITLE_DELETE': 'Suppression d\\'un utilisateur',\n\t\t'USER_TITLE_VIEW': 'Détails d\\'un utilisateur',\n\t\t'USER_TITLE_LIST': 'Liste des utilisateurs',\n\t\t'USER_TITLE_EDIT': 'Editer un utilisateur',\n\t\t'USER_TITLE_NEW': 'Créer un utilisateur',\n\t\t'USER_TITLE_IMPORT_XLS': 'Importer en masse des utilisateurs',\n\t\t'USER_TITLE_EXPORT_XLS': 'Exporter en masse des utilisateurs',\n\n\t\t'USER_FORM_LOGIN': 'Identifiant',\n\t\t'USER_FORM_FIRSTNAME': 'Prénom',\n\t\t'USER_FORM_LASTNAME': 'Nom de famille',\n\t\t'USER_FORM_EMAIL': 'Email',\n\t\t'USER_FORM_LANGUAGE': 'Langue',\n\t\t'USER_FORM_AUTHORITY': 'Rôle',\n\n\t\t'USER_LIST_LOGIN': 'Identifiant',\n\t\t'USER_LIST_MAIL': 'Email',\n\t\t'USER_LIST_LANGUAGE': 'Langue',\n\t\t'USER_LIST_AUTHORITY': 'Rôle'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\terror: {\n\t\t\tuserexists: 'Login name already used!',\n\t\t\temailexists: 'E-mail is already in use!'\n\t\t},\n\t\t'USER_MENU': 'Users',\n\t\t'USER_TITLE_DELETE': 'User delete',\n\t\t'USER_TITLE_VIEW': 'User details',\n\t\t'USER_TITLE_LIST': 'User list',\n\t\t'USER_TITLE_EDIT': 'User edition',\n\t\t'USER_TITLE_NEW': 'User creation',\n\t\t'USER_TITLE_IMPORT_XLS': 'Users mass import',\n\t\t'USER_TITLE_EXPORT_XLS': 'Users mass export',\n\n\t\t'USER_FORM_LOGIN': 'Login',\n\t\t'USER_FORM_FIRSTNAME': 'Firstname',\n\t\t'USER_FORM_LASTNAME': 'Lastname',\n\t\t'USER_FORM_EMAIL': 'Email',\n\t\t'USER_FORM_LANGUAGE': 'Language',\n\t\t'USER_FORM_AUTHORITY': 'Authority',\n\n\t\t'USER_LIST_LOGIN': 'Login',\n\t\t'USER_LIST_MAIL': 'Email',\n\t\t'USER_LIST_LANGUAGE': 'Language',\n\t\t'USER_LIST_AUTHORITY': 'Authority'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app.personal.password', {\n\t\turl: '/password',\n\t\ttemplateUrl: 'adama-web/account/password/password.html',\n\t\tcontroller: 'PasswordCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCOUNT_PASSWORD'\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'ACCOUNT_PASSWORD': 'Modifier mon mot de passe',\n\t\t'ACCOUNT_PASSWORD_TITLE': 'Modifier mon mot de passe',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD': 'Mot de passe',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_PLACEHOLDER': 'Mot de passe ?',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MINLENGTH': 'Le mot de passe doit être composé d\\'au moins 5 caractères.',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MAXLENGTH': 'Le mot de passe doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD': 'Confirmation du mot de passe',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PLACEHOLDER': 'Confirmation du mot de passe ?',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_REQUIRED': 'La confirmation du mot de passe est obligatoire',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MINLENGTH': 'La confirmation du mot de passe doit être composé d\\'au moins 5 caractères.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MAXLENGTH': 'La confirmation du mot de passe doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PATTERN': 'Les mots de passe ne sont pas égaux.',\n\t\t'ACCOUNT_PASSWORD_SUBMIT': 'Enregistrer',\n\t\t'ACCOUNT_PASSWORD_SAVE_SUCCESS': 'Le mot de passe a été changé avec succès.',\n\t\t'ACCOUNT_PASSWORD_SAVE_ERROR': 'Le mot de passe n\\'a pu être changé.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'ACCOUNT_PASSWORD': 'Change my password',\n\t\t'ACCOUNT_PASSWORD_TITLE': 'Change my password',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD': 'Password',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_PLACEHOLDER': 'Password ?',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_REQUIRED': 'Your password is required.',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MINLENGTH': 'Your password is required to be at least 5 characters.',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MAXLENGTH': 'Your password cannot be longer than 50 characters.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD': 'Password confirmation',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PLACEHOLDER': 'Password confirmation ?',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_REQUIRED': 'Your confirmation password is required.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MINLENGTH': 'Your confirmation password is required to be at least 5 characters.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MAXLENGTH': 'Your confirmation password cannot be longer than 50 characters.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PATTERN': 'Password and confirmation do not match.',\n\t\t'ACCOUNT_PASSWORD_SUBMIT': 'Save',\n\t\t'ACCOUNT_PASSWORD_SAVE_SUCCESS': 'Password successfully changed.',\n\t\t'ACCOUNT_PASSWORD_SAVE_ERROR': 'Password could not be changed.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('PasswordCtrl', [\"Principal\", \"AlertService\", function(Principal, AlertService) {\n\tvar ctrl = this;\n\tPrincipal.identity().then(function(account) {\n\t\tctrl.account = account;\n\t});\n\tctrl.changePassword = function() {\n\t\tPrincipal.changePassword(ctrl.password).then(function() {\n\t\t\tAlertService.success('ACCOUNT_PASSWORD_SAVE_SUCCESS');\n\t\t}).catch(function() {\n\t\t\tAlertService.error('ACCOUNT_PASSWORD_SAVE_ERROR');\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app.personal.settings', {\n\t\turl: '/settings',\n\t\ttemplateUrl: 'adama-web/account/settings/settings.html',\n\t\tcontroller: 'SettingsCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCOUNT_SETTINGS'\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'ACCOUNT_SETTINGS': 'Mon profil',\n\t\t'ACCOUNT_SETTINGS_TITLE': 'Mon profil',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME': 'Prénom',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_PLACEHOLDER': 'Prénom ?',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_REQUIRED': 'Votre prénom est obligatoire.',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_MAXLENGTH': 'Votre prénom doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME': 'Nom de famille',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_PLACEHOLDER': 'Nom de famille ?',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_REQUIRED': 'Votre nom de famille est obligatoire.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_MAXLENGTH': 'Votre nom de famille doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_SETTINGS_EMAIL': 'Email',\n\t\t'ACCOUNT_SETTINGS_EMAIL_PLACEHOLDER': 'Email ?',\n\t\t'ACCOUNT_SETTINGS_EMAIL_REQUIRED': 'Votre email est obligatoire.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_EMAIL': 'Votre email est invalide.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_MAXLENGTH': 'Votre email doit être composé d\\'au plus 100 caractères.',\n\t\t'ACCOUNT_SETTINGS_LANGUAGE': 'Langue',\n\t\t'ACCOUNT_SETTINGS_SUBMIT': 'Enregistrer',\n\t\t'ACCOUNT_SETTINGS_SAVE_SUCCESS': 'Enregistrement du profil avec succès.',\n\t\t'ACCOUNT_SETTINGS_SAVE_ERROR': 'Impossible d\\'enregistrer le profil.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'ACCOUNT_SETTINGS': 'My profile',\n\t\t'ACCOUNT_SETTINGS_TITLE': 'My profile',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME': 'First name',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_PLACEHOLDER': 'First name ?',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_REQUIRED': 'Your first name is required.',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_MAXLENGTH': 'Your first name cannot be longer than 50 characters.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME': 'Last name',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_PLACEHOLDER': 'Last name ?',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_REQUIRED': 'Your last name is required.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_MAXLENGTH': 'Your last name cannot be longer than 50 characters.',\n\t\t'ACCOUNT_SETTINGS_EMAIL': 'Email',\n\t\t'ACCOUNT_SETTINGS_EMAIL_PLACEHOLDER': 'Email ?',\n\t\t'ACCOUNT_SETTINGS_EMAIL_REQUIRED': 'Your e-mail is required.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_EMAIL': 'Your e-mail is invalid.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_MAXLENGTH': 'Your e-mail cannot be longer than 100 characters.',\n\t\t'ACCOUNT_SETTINGS_LANGUAGE': 'Language',\n\t\t'ACCOUNT_SETTINGS_SUBMIT': 'Save',\n\t\t'ACCOUNT_SETTINGS_SAVE_SUCCESS': 'Profile successfully saved.',\n\t\t'ACCOUNT_SETTINGS_SAVE_ERROR': 'Profile could not be saved.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('SettingsCtrl', [\"Principal\", \"language\", \"AlertService\", \"$translate\", function(Principal, language, AlertService, $translate) {\n\tvar ctrl = this;\n\tvar copyAccount = function(account) {\n\t\t// Store the \"settings account\" in a separate variable, and not in the\n\t\t// shared \"account\" variable.\n\t\treturn {\n\t\t\tactivated: account.activated,\n\t\t\temail: account.email,\n\t\t\tfirstName: account.firstName,\n\t\t\tlangKey: account.langKey,\n\t\t\tlastName: account.lastName,\n\t\t\tlogin: account.login\n\t\t};\n\t};\n\tPrincipal.identity().then(function(account) {\n\t\tctrl.settingsAccount = copyAccount(account);\n\t});\n\tctrl.save = function() {\n\t\tPrincipal.updateAccount(ctrl.settingsAccount).then(function() {\n\t\t\treturn Principal.identity(true).then(function(account) {\n\t\t\t\tctrl.settingsAccount = copyAccount(account);\n\t\t\t\tlanguage.getCurrent().then(function(current) {\n\t\t\t\t\tif (ctrl.settingsAccount.langKey !== current) {\n\t\t\t\t\t\t$translate.use(ctrl.settingsAccount.langKey);\n\t\t\t\t\t}\n\t\t\t\t\tAlertService.success('ACCOUNT_SETTINGS_SAVE_SUCCESS');\n\t\t\t\t});\n\t\t\t});\n\t\t}).catch(function() {\n\t\t\tAlertService.error('ACCOUNT_SETTINGS_SAVE_ERROR');\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').component('arkFooter', {\n\ttemplateUrl: 'adama-web/ark/ark-footer/ark-footer.html'\n});\n","'use strict';\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'TOGGLE_NAVIGATION': 'Navigation',\n\t\t'USERINFO_PROFILE': 'Profil',\n\t\t'USERINFO_PASSWORD': 'Mot de passe',\n\t\t'USERINFO_SIGNOUT': 'Déconnection'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'TOGGLE_NAVIGATION': 'Toggle navigation',\n\t\t'USERINFO_PROFILE': 'Profile',\n\t\t'USERINFO_PASSWORD': 'Password',\n\t\t'USERINFO_SIGNOUT': 'Sign out'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').component('arkHeader', {\n\ttemplateUrl: 'adama-web/ark/ark-header/ark-header.html'\n});\n","'use strict';\n\nangular.module('adama-web').component('languageSelector', {\n\ttemplateUrl: 'adama-web/ark/language-selector/language-selector.html',\n\tcontroller: [\"$rootScope\", \"$translate\", \"language\", function($rootScope, $translate, language) {\n\t\tvar ctrl = this;\n\t\tctrl.changeLanguage = function(key) {\n\t\t\t$translate.use(key);\n\t\t};\n\t\tvar updateCurrentLanguage = function() {\n\t\t\tctrl.currentLanguage = $translate.use();\n\t\t\tif (ctrl.currentLanguage.indexOf('en') === 0) {\n\t\t\t\tctrl.currentLanguage = 'us';\n\t\t\t}\n\t\t};\n\t\t$rootScope.$on('$translateChangeSuccess', function() {\n\t\t\tupdateCurrentLanguage();\n\t\t});\n\t\tupdateCurrentLanguage();\n\t\tlanguage.getSelectorData().then(function(data) {\n\t\t\tctrl.languages = data;\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').component('mainNavigation', {\n\ttemplateUrl: 'adama-web/ark/menu/main-navigation.html',\n\tcontroller: [\"$rootScope\", \"$filter\", \"menuService\", function($rootScope, $filter, menuService) {\n\t\tvar ctrl = this;\n\t\tvar addMenuEntry, addMenuEntries;\n\t\taddMenuEntry = function(input, item) {\n\t\t\tvar copy = angular.copy(item);\n\t\t\tcopy.subItems = [];\n\t\t\taddMenuEntries(copy.subItems, item.subItems);\n\t\t\tcopy.label = $filter('translate')(copy.label);\n\t\t\tinput.push(copy);\n\t\t};\n\t\taddMenuEntries = function(input, menuEntries) {\n\t\t\tvar i, l, menuEntry;\n\t\t\tif (menuEntries && menuEntries.length) {\n\t\t\t\tfor (i = 0, l = menuEntries.length; i < l; i++) {\n\t\t\t\t\tmenuEntry = menuEntries[i];\n\t\t\t\t\taddMenuEntry(input, menuEntry);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tvar updateMenuEntries = function() {\n\t\t\tctrl.menuItems = [];\n\t\t\tvar items = menuService.getItems();\n\t\t\taddMenuEntries(ctrl.menuItems, items);\n\t\t};\n\t\tupdateMenuEntries();\n\t\t$rootScope.$on('$translateChangeSuccess', function() {\n\t\t\tupdateMenuEntries();\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').provider('menuService', function() {\n\tvar menuItems = [];\n\n\tthis.addItem = function(newItem) {\n\t\tif (newItem.position !== 'right') {\n\t\t\tnewItem.position = 'left';\n\t\t}\n\t\tmenuItems.push(newItem);\n\t};\n\n\tthis.$get = function() {\n\t\tvar api = {};\n\t\tapi.getItems = function() {\n\t\t\treturn menuItems;\n\t\t};\n\t\treturn api;\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').component('selectAll', {\n\ttemplateUrl: 'adama-web/ark/select-all/select-all.html',\n\tbindings: {\n\t\tentityList: '<'\n\t},\n\tcontroller: function() {\n\t\tvar ctrl = this;\n\t\tctrl.isAllChecked = false;\n\t\tctrl.checkAll = function() {\n\t\t\tctrl.isAllChecked = !ctrl.isAllChecked;\n\t\t\tangular.forEach(ctrl.entityList, function(entity) {\n\t\t\t\tentity.isSelected = ctrl.isAllChecked;\n\t\t\t});\n\t\t};\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').component('userInfo', {\n\ttemplateUrl: 'adama-web/ark/user-info/user-info.html',\n\tcontroller: [\"$rootScope\", \"$state\", \"Auth\", function($rootScope, $state, Auth) {\n\t\tvar ctrl = this;\n\t\tctrl.signout = function() {\n\t\t\tAuth.logout();\n\t\t\t$state.go('auth.signin');\n\t\t};\n\t\t$rootScope.$on('auth.updateAccount', function(event, data) {\n\t\t\tctrl.account = data.account;\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').component('viewAttribute', {\n\ttemplateUrl: 'adama-web/ark/view-attribute/view-attribute.html',\n\ttransclude: true,\n\tbindings: {\n\t\tlabelKey: '@',\n\t\tvalue: '<',\n\t\tvalueKey: '@value'\n\t},\n\tcontroller: function() {}\n});\n"],"sourceRoot":"/source/"}