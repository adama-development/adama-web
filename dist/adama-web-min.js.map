{"version":3,"sources":["app.js","account/app.js","auth/accessDenied.controller.js","auth/app.js","auth/recoverPassword.controller.js","auth/signin.controller.js","crud/app.js","crud/btn-create.component.js","crud/crud-action-dropdown.component.js","crud/crud-delete.controller.js","crud/crud-edit.controller.js","crud/crud-export-xls.controller.js","crud/crud-import-xls.controller.js","crud/crud-list.controller.js","crud/crud-search-field.component.js","crud/crud-view.controller.js","crud/modal-btn-back-to-list.directive.js","crud/modal-btn-cancel.directive.js","crud/modal-btn-confirm-delete.directive.js","crud/modal-btn-confirm-edit.directive.js","crud/modal-btn-confirm-export-xls.directive.js","crud/modal-btn-confirm-import-xls.directive.js","datasources/authorities.datasource.js","datasources/language.datasource.js","datasources/principal-identity.datasource.js","directives/layoutFix.directive.js","directives/lazyControl.directive.js","filters/min.filter.js","jhipster/app.js","jhipster/jhipster-constant.service.js","jhipster/jhipster-resource-config.service.js","resources/user.resource.js","services/appGlobal.service.js","services/language.provider.js","services/pdf.service.js","user/app.js","account/password/app.js","account/password/password.controller.js","account/settings/app.js","account/settings/settings.controller.js","ark/ark-footer/ark-footer.component.js","ark/ark-header/app.js","ark/ark-header/ark-header.component.js","ark/language-selector/language-selector.component.js","ark/menu/main-navigation.component.js","ark/menu/menu.provider.js","ark/select-all/select-all.component.js","ark/user-info/user-info.component.js","ark/view-attribute/view-attribute.component.js","jhipster/components/alert/alert.directive.js","jhipster/components/alert/alert.service.js","jhipster/components/auth/auth.service.js","jhipster/components/auth/authority.directive.js","jhipster/components/auth/principal.service.js","jhipster/components/interceptor/auth.interceptor.js","jhipster/components/interceptor/errorhandler.interceptor.js","jhipster/components/interceptor/notification.interceptor.js","jhipster/components/util/base64.service.js","jhipster/components/util/parse-links.service.js","jhipster/components/auth/provider/auth.xauth.service.js","jhipster/components/auth/services/account.service.js","jhipster/components/auth/services/password.service.js"],"names":["angular","module","config","$urlRouterProvider","otherwise","run","$rootScope","additionalBodyClass","$on","event","toState","name","indexOf","appGlobal","data","pageTitle","setPageTitle","$translateProvider","useSanitizeValueStrategy","useLocalStorage","registerAvailableLanguageKeys","en_*","fr_*","determinePreferredLanguage","$stateProvider","state","abstract","url","template","resolve","authorize","Auth","ngTableDefaults","settings","extend","counts","params","page","count","translations","MENU_CATEGORY_USERS","PAGER_RESULT","FLAG_EN","FLAG_CN","FLAG_FR","FILEUPLOAD_DROPZONE_LABEL","FILEUPLOAD_DROPZONE_LABEL_DROP","FILEUPLOAD_RESET","controller","templateUrl","controllerAs","authorities","SIGNIN","SIGNIN_INTRO","SIGNIN_FORGET_PASSWORD","SIGNIN_USERNAME","SIGNIN_USERNAME_REQUIRED","SIGNIN_PASSWORD","SIGNIN_PASSWORD_REQUIRED","SIGNIN_SUBMIT","SIGNIN_ERROR","RECOVER","RECOVER_INTRO","RECOVER_MAIL","RECOVER_MAIL_REQUIRED","RECOVER_MAIL_EMAIL","RECOVER_SUBMIT","RECOVER_BACK_TO_LOGIN","RECOVER_SUCCESS","RECOVER_ERROR","RECOVER_ERROR_EMAIL_NOT_EXIST","ACCESS_DENIED","ACCESS_DENIED_INTRO","ctrl","this","recover","userEmail","recoverSuccess","recoverError","errorEmailNotExists","loading","resetPasswordInit","then","response","status","$state","signin","userName","userPassword","authenticationError","login","username","password","previousStateName","go","back","CRUD_BACK_TO_LIST","CRUD_CANCEL","CRUD_CONFIRM_DELETE","CRUD_CONFIRM_EDIT","CRUD_CONFIRM_EXPORT","CRUD_CONFIRM_IMPORT","CRUD_CONFIRM_SAVE","CRUD_DELETE_MESSAGE","CRUD_DELETE_SUCCESS","CRUD_DELETE_ERROR","CRUD_EXPORT_XLS_MESSAGE","CRUD_EXPORT_XLS_SUCCESS","CRUD_EXPORT_XLS_ERROR","CRUD_IMPORT_XLS_MESSAGE","CRUD_IMPORT_XLS_SUCCESS","CRUD_IMPORT_XLS_ERROR","CRUD_NEW","CRUD_MASS_IMPORT","CRUD_MASS_EXPORT","CRUD_EDIT_SUCCESS","CRUD_NEW_SUCCESS","CRUD_SAVE_ERROR","CRUD_FORM_ERROR_REQUIRED","CRUD_FORM_ERROR_MAXLENGTH","CRUD_FORM_ERROR_EMAIL","CRUD_FORM_SEARCH","CRUD_FORM_SEARCH_SUBMIT","CRUD_ACTION_VIEW","CRUD_ACTION_EDIT","CRUD_ACTION_DELETE","component","transclude","bindings","routeMapping","$scope","entity","AlertService","dismiss","$dismiss","confirmDelete","$delete","success","$close","error","EntityGenericResource","isEdition","save","resourceAction","update","$promise","newEntity","confirmExportXls","massExportXls","confirmImportXls","file","massImportXls","NgTableParams","tableParams","total","getData","$defer","sort","sorting","sortValues","equals","key","hasOwnProperty","push","query","size","search","filter","$","entities","$metadata","totalItems","searchValue","reload","directive","restrict","$parse","scope","link","element","attrs","assign","language","getAll","languages","Principal","identity","account","addEvent","AdminLTE","layout","fix","$filter","translateFilter","id","additionalLabelAttributes","labelScreenOnly","labelContainer","type","wrap","after","next","eq","ngModel","replace","attr","addClass","before","prev","html","lazyControlLabelKey","Math","min","toStateParams","isIdentityResolved","toParams","fromState","fromParams","previousStateParams","get","$httpProvider","interceptors","constant","apiBase","appModule","factory","ParseLinks","pdfService","method","isArray","transformResponse","headers","fromJson","links","parse","interceptor","resource","delete","responseType","Accept","transformResponseToPdf","Content-Type","undefined","transformRequest","formData","window","FormData","append","$resource","jHipsterConstant","jHipsterResourceConfig","$translate","api","i18nPageTitle","provider","selectorData","code","labelKey","cssCLass","setLanguages","newLanguages","setSelectorData","newSelectorData","$get","$q","$http","getCurrent","storage","isUndefined","when","getSelectorData","FileSaver","headersGetter","filename","dataBlob","Blob","contentDisposition","substring","length","saveAs","User","openModal","$uibModal","$stateParams","controllerName","templateName","resolveEntity","open","result","onEnter","userexists","emailexists","USER_MENU","USER_TITLE_DELETE","USER_TITLE_VIEW","USER_TITLE_LIST","USER_TITLE_EDIT","USER_TITLE_NEW","USER_TITLE_IMPORT_XLS","USER_TITLE_EXPORT_XLS","USER_FORM_LOGIN","USER_FORM_FIRSTNAME","USER_FORM_LASTNAME","USER_FORM_EMAIL","USER_FORM_LANGUAGE","USER_FORM_AUTHORITIES","USER_LIST_LOGIN","USER_LIST_MAIL","USER_LIST_LANGUAGE","USER_LIST_AUTHORITIES","ACCOUNT_PASSWORD","ACCOUNT_PASSWORD_TITLE","ACCOUNT_PASSWORD_NEWPASSWORD","ACCOUNT_PASSWORD_NEWPASSWORD_PLACEHOLDER","ACCOUNT_PASSWORD_NEWPASSWORD_REQUIRED","ACCOUNT_PASSWORD_NEWPASSWORD_MINLENGTH","ACCOUNT_PASSWORD_NEWPASSWORD_MAXLENGTH","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PLACEHOLDER","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_REQUIRED","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MINLENGTH","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MAXLENGTH","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PATTERN","ACCOUNT_PASSWORD_SUBMIT","ACCOUNT_PASSWORD_SAVE_SUCCESS","ACCOUNT_PASSWORD_SAVE_ERROR","changePassword","ACCOUNT_SETTINGS","ACCOUNT_SETTINGS_TITLE","ACCOUNT_SETTINGS_FIRSTNAME","ACCOUNT_SETTINGS_FIRSTNAME_PLACEHOLDER","ACCOUNT_SETTINGS_FIRSTNAME_REQUIRED","ACCOUNT_SETTINGS_FIRSTNAME_MAXLENGTH","ACCOUNT_SETTINGS_LASTNAME","ACCOUNT_SETTINGS_LASTNAME_PLACEHOLDER","ACCOUNT_SETTINGS_LASTNAME_REQUIRED","ACCOUNT_SETTINGS_LASTNAME_MAXLENGTH","ACCOUNT_SETTINGS_EMAIL","ACCOUNT_SETTINGS_EMAIL_PLACEHOLDER","ACCOUNT_SETTINGS_EMAIL_REQUIRED","ACCOUNT_SETTINGS_EMAIL_EMAIL","ACCOUNT_SETTINGS_EMAIL_MAXLENGTH","ACCOUNT_SETTINGS_LANGUAGE","ACCOUNT_SETTINGS_SUBMIT","ACCOUNT_SETTINGS_SAVE_SUCCESS","ACCOUNT_SETTINGS_SAVE_ERROR","copyAccount","activated","email","firstName","langKey","lastName","settingsAccount","updateAccount","current","use","TOGGLE_NAVIGATION","USERINFO_PROFILE","USERINFO_PASSWORD","USERINFO_SIGNOUT","changeLanguage","updateCurrentLanguage","currentLanguage","menuService","addMenuEntry","addMenuEntries","input","item","copy","subItems","label","menuEntries","i","l","menuEntry","updateMenuEntries","menuItems","items","getItems","addItem","newItem","position","entityList","isAllChecked","checkAll","forEach","isSelected","signout","logout","value","valueKey","alerts","addErrorAlert","message","add","msg","timeout","toast","isToast","scoped","cleanHttpErrorListener","httpResponse","stopPropagation","errorHeader","entityKey","entityName","instant","fieldErrors","fieldError","convertedField","field","fieldName","objectName","JSON","stringify","$timeout","$sce","alertId","clear","closeAlertByIndex","index","thisAlerts","splice","closeAlert","extAlerts","map","e","alertOptions","alert","trustAsHtml","close","addAlert","warning","info","showAsToast","AuthServerProvider","Account","Password","PasswordResetInit","PasswordResetFinish","credentials","callback","cb","noop","deferred","defer","err","reject","bind","promise","authenticate","previousStateNameParams","force","isAuthenticated","hasAnyAuthority","$emit","newPassword","mail","resetPasswordFinish","keyAndPassword","setVisible","removeClass","setHidden","split","defineVisibility","reset","$watch","authority","hasAuthority","_identity","_authenticated","isDefined","_id","$location","localStorageService","request","token","expires","Date","getTime","$injector","responseError","remove","path","alertKey","isString","param","service","keyStr","encode","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","charCodeAt","isNaN","charAt","decode","String","fromCharCode","$window","localStorage","getItem","setItem","removeItem","clearAll","header","Error","parts","p","section","trim","queryString","RegExp","$0","$1","$2","$3","parseInt","Base64","encodeURIComponent","post","set","getToken","hasValidToken"],"mappings":"AAAA,YAEAA,SAAAC,OAAA,aACA,aACA,aACA,YACA,eACA,yBACA,YACA,aACA,qBACA,UACA,cACA,eACA,wBAGAD,QAAAC,OAAA,aAAAC,QAAA,qBAAA,SAAAC,GACAA,EAAAC,UAAA,YAGAJ,QAAAC,OAAA,aAAAI,KAAA,aAAA,SAAAC,GAEAA,EAAAC,oBAAA,eAEAD,EAAAE,IAAA,sBAAA,SAAAC,EAAAC,GACAA,GAAAA,EAAAC,MAAA,IAAAD,EAAAC,KAAAC,QAAA,QACAN,EAAAC,oBAAA,aAEAD,EAAAC,oBAAA,oBAKAP,QAAAC,OAAA,aAAAI,KAAA,aAAA,YAAA,SAAAC,EAAAO,GAEAP,EAAAE,IAAA,sBAAA,SAAAC,EAAAC,GACAA,GAAAA,EAAAI,MAAAJ,EAAAI,KAAAC,WACAF,EAAAG,aAAAN,EAAAI,KAAAC,gBAKAf,QAAAC,OAAA,aAAAC,QAAA,qBAAA,SAAAe,GACAA,EAAAC,yBAAA,oBAEAD,EAAAE,kBAEAF,EAAAG,+BAAA,KAAA,OACAC,OAAA,KACAC,OAAA,OAGAL,EAAAM,gCAGAvB,QAAAC,OAAA,aAAAC,QAAA,iBAAA,SAAAsB,GACAA,EAAAC,MAAA,OACAC,YAAA,EACAC,IAAA,OACAC,SAAA,0RAcAC,SACAC,WAAA,OAAA,SAAAC,GACA,MAAAA,GAAAD,oBAMA9B,QAAAC,OAAA,aAAAI,KAAA,kBAAA,SAAA2B,GACAA,EAAAC,SAAAjC,QAAAkC,UAAAF,EAAAC,UACAE,QAAA,GAAA,GAAA,MAEAH,EAAAI,OAAApC,QAAAkC,UAAAF,EAAAI,QAEAC,KAAA,EAEAC,MAAA,QAIAtC,QAAAC,OAAA,aAAAC,QAAA,qBAAA,SAAAe,GACAA,EAAAsB,aAAA,MACAC,oBAAA,eACAC,aAAA,2EACAC,QAAA,UACAC,QAAA,UACAC,QAAA,WACAC,0BAAA,qGACAC,+BAAA,kCACAC,iBAAA,oEAGA9B,EAAAsB,aAAA,MACAC,oBAAA,QACAC,aAAA,0EACAC,QAAA,UACAC,QAAA,UACAC,QAAA,SACAC,0BAAA,oFACAC,+BAAA,4BACAC,iBAAA,4CChHA/C,QAAAC,OAAA,aAAAC,QAAA,iBAAA,SAAAsB,GACAA,EAAAC,MAAA,gBACAC,YAAA,EACAC,IAAA,YACAC,SAAA,2BCJA5B,QAAAC,OAAA,aAAA+C,WAAA,mBAAA,cCAAhD,QAAAC,OAAA,aAAAC,QAAA,iBAAA,SAAAsB,GACAA,EAAAC,MAAA,QACAC,YAAA,EACAC,IAAA,QACAC,SAAA,wBAKAJ,EAAAC,MAAA,eACAE,IAAA,IACAsB,YAAA,6BACAD,WAAA,aACAE,aAAA,OACApC,MACAC,UAAA,SACAoC,kBAIA3B,EAAAC,MAAA,wBACAE,IAAA,mBACAsB,YAAA,sCACAD,WAAA,sBACAE,aAAA,OACApC,MACAC,UAAA,UACAoC,kBAIA3B,EAAAC,MAAA,qBACAE,IAAA,gBACAsB,YAAA,mCACAD,WAAA,mBACAE,aAAA,OACApC,MACAC,UAAA,gBACAoC,qBAKAnD,QAAAC,OAAA,aAAAC,QAAA,qBAAA,SAAAe,GACAA,EAAAsB,aAAA,MACAa,OAAA,iBACAC,aAAA,8CACAC,uBAAA,mCACAC,gBAAA,cACAC,yBAAA,gCACAC,gBAAA,eACAC,yBAAA,kCACAC,cAAA,sBACAC,aAAA,qEACAC,QAAA,+BACAC,cAAA,0DACAC,aAAA,QACAC,sBAAA,2BACAC,mBAAA,kCACAC,eAAA,6BACAC,sBAAA,6BACAC,gBAAA,iFACAC,cAAA,kDACAC,8BAAA,uBACAC,cAAA,iBACAC,oBAAA,mEAGAvD,EAAAsB,aAAA,MACAa,OAAA,SACAC,aAAA,gCACAC,uBAAA,2BACAC,gBAAA,WACAC,yBAAA,uBACAC,gBAAA,WACAC,yBAAA,uBACAC,cAAA,gBACAC,aAAA,6DACAC,QAAA,mBACAC,cAAA,0CACAC,aAAA,QACAC,sBAAA,oBACAC,mBAAA,0CACAC,eAAA,uBACAC,sBAAA,iBACAC,gBAAA,gEACAC,cAAA,oBACAC,8BAAA,8DACAC,cAAA,gBACAC,oBAAA,8DCzFAxE,QAAAC,OAAA,aAAA+C,WAAA,uBAAA,OAAA,SAAAjB,GACA,GAAA0C,GAAAC,IACAD,GAAAE,QAAA,SAAAC,GACAH,EAAAI,gBAAA,EACAJ,EAAAK,cAAA,EACAL,EAAAM,qBAAA,EACAN,EAAAO,SAAA,EACAjD,EAAAkD,kBAAAL,GAAAM,KAAA,WACAT,EAAAI,gBAAA,IADA9C,SAEA,SAAAoD,GACA,MAAAA,EAAAC,QAAA,kCAAAD,EAAArE,KACA2D,EAAAM,qBAAA,EAEAN,EAAAK,cAAA,IANA/C,WAQA,WACA0C,EAAAO,SAAA,QChBAhF,QAAAC,OAAA,aAAA+C,WAAA,cAAA,aAAA,SAAA,OAAA,SAAA1C,EAAA+E,EAAAtD,GACA,GAAA0C,GAAAC,IACAD,GAAAa,OAAA,SAAAC,EAAAC,GACAf,EAAAgB,qBAAA,EACA1D,EAAA2D,OACAC,SAAAJ,EACAK,SAAAJ,IACAN,KAAA,WACA,gBAAA5E,EAAAuF,kBACAR,EAAAS,GAAA,YAEAxF,EAAAyF,SAPAhE,SASA,WACA0C,EAAAgB,qBAAA,QCdAzF,QAAAC,OAAA,aAAAC,QAAA,qBAAA,SAAAe,GACAA,EAAAsB,aAAA,MACAyD,kBAAA,oBACAC,YAAA,UACAC,oBAAA,2BACAC,kBAAA,SACAC,oBAAA,qBACAC,oBAAA,qBACAC,kBAAA,QACAC,oBAAA,2CACAC,oBAAA,2BACAC,kBAAA,mCACAC,wBAAA,2FACAC,wBAAA,2BACAC,sBAAA,iCACAC,wBAAA,+EACAC,wBAAA,2BACAC,sBAAA,iCACAC,SAAA,UACAC,iBAAA,gBACAC,iBAAA,gBACAC,kBAAA,8BACAC,iBAAA,wBACAC,gBAAA,qCACAC,yBAAA,6BACAC,0BAAA,6DACAC,sBAAA,0BACAC,iBAAA,YACAC,wBAAA,aACAC,iBAAA,UACAC,iBAAA,SACAC,mBAAA,cAGA5G,EAAAsB,aAAA,MACAyD,kBAAA,eACAC,YAAA,SACAC,oBAAA,iBACAC,kBAAA,OACAC,oBAAA,iBACAC,oBAAA,iBACAC,kBAAA,OACAC,oBAAA,oCACAC,oBAAA,sBACAC,kBAAA,+BACAC,wBAAA,uEACAC,wBAAA,sBACAC,sBAAA,+BACAC,wBAAA,gEACAC,wBAAA,sBACAC,sBAAA,+BACAC,SAAA,MACAC,iBAAA,cACAC,iBAAA,cACAC,kBAAA,oBACAC,iBAAA,uBACAC,gBAAA,6BACAC,yBAAA,0BACAC,0BAAA,+DACAC,sBAAA,qBACAC,iBAAA,SACAC,wBAAA,SACAC,iBAAA,eACAC,iBAAA,OACAC,mBAAA,cChEA7H,QAAAC,OAAA,aAAA6H,UAAA,aACA7E,YAAA,iCACA8E,YAAA,ICFA/H,QAAAC,OAAA,aAAA6H,UAAA,sBACAE,UACAC,aAAA,KAEAhF,YAAA,6CCJAjD,QAAAC,OAAA,aAAA+C,WAAA,kBAAA,SAAA,SAAA,eAAA,SAAAkF,EAAAC,EAAAC,GACA,GAAA3D,GAAAC,IACAD,GAAA4D,QAAA,WACAH,EAAAI,YAEA7D,EAAA8D,cAAA,WACAJ,EAAAK,UAAAtD,KAAA,WACAkD,EAAAK,QAAA,uBACAP,EAAAQ,WAFAP,SAGA,WACAC,EAAAO,MAAA,2BCVA3I,QAAAC,OAAA,aAAA+C,WAAA,gBAAA,SAAA,SAAA,wBAAA,eAAA,SAAAkF,EAAAC,EAAAS,EAAAR,GACA,GAAA3D,GAAAC,IACAD,GAAAoE,YAAAV,EACA1D,EAAA0D,OAAAA,EACA1D,EAAA4D,QAAA,WACAH,EAAAI,YAEA7D,EAAAqE,KAAA,WACA,GAAAC,EAEAA,GADAtE,EAAAoE,UACAD,EAAAI,OAEAJ,EAAAE,KAEAC,EAAAtE,EAAA0D,QAAAc,SAAA/D,KAAA,SAAAgE,GACAzE,EAAAoE,UACAT,EAAAK,QAAA,qBAEAL,EAAAK,QAAA,oBAEAP,EAAAQ,OAAAQ,SCpBAlJ,QAAAC,OAAA,aAAA+C,WAAA,qBAAA,SAAA,eAAA,wBAAA,SAAAkF,EAAAE,EAAAQ,GACA,GAAAnE,GAAAC,IACAD,GAAA4D,QAAA,WACAH,EAAAI,YAEA7D,EAAAO,SAAA,EACAP,EAAA0E,iBAAA,WACA1E,EAAAO,SAAA,EACA4D,EAAAQ,gBAAAH,SAAA/D,KAAA,SAAAgE,GACAd,EAAAK,QAAA,2BACAP,EAAAQ,OAAAQ,KAFAN,SAGA,WACAR,EAAAO,MAAA,2BAJAC,WAKA,WACAnE,EAAAO,SAAA,QCdAhF,QAAAC,OAAA,aAAA+C,WAAA,qBAAA,SAAA,eAAA,wBAAA,SAAAkF,EAAAE,EAAAQ,GACA,GAAAnE,GAAAC,IAEAD,GAAA4D,QAAA,WACAH,EAAAI,YAGA7D,EAAAO,SAAA,EACAP,EAAA4E,iBAAA,WACA,GAAAC,GAAA7E,EAAA6E,IACA7E,GAAAO,SAAA,EACA4D,EAAAW,eACAD,KAAAA,IACAL,SAAA/D,KAAA,WACAkD,EAAAK,QAAA,2BACAP,EAAAQ,UACA,WACAN,EAAAO,MAAA,2BANAC,WAOA,WACAnE,EAAAO,SAAA,QCnBAhF,QAAAC,OAAA,aAAA+C,WAAA,gBAAA,wBAAA,gBAAA,SAAA4F,EAAAY,GAEA,GAAA/E,GAAAC,IAGAD,GAAAgF,YAAA,GAAAD,OACAE,MAAA,EACAC,QAAA,SAAAC,EAAAxH,GACA,GAAAyH,GAAAzH,EAAA0H,UACAC,IACA,KAAA/J,QAAAgK,UAAAH,GACA,IAAA,GAAAI,KAAAJ,GACAA,EAAAK,eAAAD,IACAF,EAAAI,KAAAF,EAAA,IAAAJ,EAAAI,GAIArB,GAAAwB,OACA/H,KAAAD,EAAAC,OAAA,EACAgI,KAAAjI,EAAAE,QACAuH,KAAAE,EACAO,OAAAlI,EAAAmI,SAAAC,IACAvB,SAAA/D,KAAA,SAAAuF,GACArI,EAAAsH,MAAAe,EAAAC,UAAAC,YACAf,EAAA/H,QAAA4I,WCxBAzK,QAAAC,OAAA,aAAA6H,UAAA,mBACA7E,YAAA,wCACA+E,UACAyB,YAAA,KAEAzG,WAAA,WACA,GAAAyB,GAAAC,IACAD,GAAA6F,OAAA,WACA7F,EAAAgF,YAAAc,QACAC,EAAA/F,EAAAmG,cAEAnG,EAAAgF,YAAApH,KAAA,GACAoC,EAAAgF,YAAAoB,aCZA7K,QAAAC,OAAA,aAAA+C,WAAA,gBAAA,SAAA,SAAA,SAAAkF,EAAAC,GACA,GAAA1D,GAAAC,IACAD,GAAA0D,OAAAA,EACA1D,EAAA4D,QAAA,WACAH,EAAAI,eCJAtI,QAAAC,OAAA,aAAA6K,UAAA,qBAAA,WACA,OACA7H,YAAA,6CACA8H,SAAA,OCHA/K,QAAAC,OAAA,aAAA6K,UAAA,iBAAA,WACA,OACA7H,YAAA,uCACA8H,SAAA,OCHA/K,QAAAC,OAAA,aAAA6K,UAAA,wBAAA,WACA,OACA7H,YAAA,+CACA8H,SAAA,OCHA/K,QAAAC,OAAA,aAAA6K,UAAA,sBAAA,WACA,OACA7H,YAAA,6CACA8H,SAAA,OCHA/K,QAAAC,OAAA,aAAA6K,UAAA,2BAAA,WACA,OACA7H,YAAA,mDACA8H,SAAA,OCHA/K,QAAAC,OAAA,aAAA6K,UAAA,2BAAA,WACA,OACA7H,YAAA,mDACA8H,SAAA,OCHA/K,QAAAC,OAAA,aAAA6K,UAAA,iBAAA,SAAA,SAAAE,GACA,OACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GACA,GAAAjI,IAAA,aAAA,YAAA,eAAA,gBAAA,cAAA,gBAAA,cAAA,kBACA6H,GAAAI,EAAAtK,MAAAuK,OAAAJ,EAAA9H,QCLAnD,QAAAC,OAAA,aAAA6K,UAAA,cAAA,SAAA,WAAA,SAAAE,EAAAM,GACA,OACAL,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GACAE,EAAAC,SAAArG,KAAA,SAAAsG,GACAR,EAAAI,EAAAtK,MAAAuK,OAAAJ,EAAAO,UCLAxL,QAAAC,OAAA,aAAA6K,UAAA,uBAAA,SAAA,YAAA,SAAAE,EAAAS,GACA,OACAR,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GACAK,EAAAC,WAAAxG,KAAA,SAAAyG,GACAX,EAAAI,EAAAtK,MAAAuK,OAAAJ,EAAAU,UCLA3L,QAAAC,OAAA,aAAA6K,UAAA,aAAA,aAAA,SAAAxK,GACA,OACA2K,OACAW,SAAA,KAEAb,SAAA,IACAG,KAAA,SAAAD,GACAA,EAAAW,UACAtL,EAAAE,IAAA,qBAAA,WACAgK,EAAAqB,SAAAC,OAAAC,QAGAvB,EAAAqB,SAAAC,OAAAC,WCZA/L,QAAAC,OAAA,aAAA6K,UAAA,eAAA,aAAA,UAAA,SAAAxK,EAAA0L,GACA,GAAAC,GAAAD,EAAA,YACA,QACAd,KAAA,SAAAD,EAAAE,EAAAC,GACA,GAAAc,GAAAC,EAAAC,EAAAC,CACA,cAAAjB,EAAAkB,MACAnB,EAAAoB,KAAA,+CACApB,EAAAqB,MAAA,iBACAH,EAAAlB,EAAAsB,OAAAC,GAAA,KAEAR,EAAAd,EAAAuB,QAAAC,QAAA,MAAA,KACAT,EAAA,SAAAD,EAAA,IACAE,EAAAhB,EAAAgB,kBAAA,EACAA,IACAD,GAAA,oBAEAhB,EAAA0B,KAAA,KAAAX,GACAf,EAAA2B,SAAA,gBACA3B,EAAAoB,KAAA,kCACApB,EAAA4B,OAAA,SAAAZ,EAAA,aACAE,EAAAlB,EAAA6B,OAAAN,GAAA,IAEAL,EAAAY,KAAAhB,EAAAb,EAAA8B,sBACA5M,EAAAE,IAAA,0BAAA,WACA6L,EAAAY,KAAAhB,EAAAb,EAAA8B,6BCxBAlN,QAAAC,OAAA,aAAAsK,OAAA,MAAA,WACA,MAAA4C,MAAAC,MCDApN,QAAAC,OAAA,aAAAI,KAAA,aAAA,SAAA,YAAA,OAAA,SAAAC,EAAA+E,EAAAoG,EAAA1J,GACAzB,EAAAE,IAAA,oBAAA,SAAAC,EAAAC,EAAA2M,GACA/M,EAAAI,QAAAA,EACAJ,EAAA+M,cAAAA,EACA5B,EAAA6B,sBACAvL,EAAAD,cAIAxB,EAAAE,IAAA,sBAAA,SAAAC,EAAAC,EAAA6M,EAAAC,EAAAC,GAKA,gBAAA/M,EAAAC,MAAAL,EAAAuF,oBACAvF,EAAAuF,kBAAA2H,EAAA7M,KACAL,EAAAoN,oBAAAD,KAIAnN,EAAAyF,KAAA,WAEA,OAAAV,EAAAsI,IAAArN,EAAAuF,mBACAR,EAAAS,GAAA,YAEAT,EAAAS,GAAAxF,EAAAuF,kBAAAvF,EAAAoN,yBAKA1N,QAAAC,OAAA,aAAAC,QAAA,gBAAA,SAAA0N,GACAA,EAAAC,aAAA1D,KAAA,2BACAyD,EAAAC,aAAA1D,KAAA,0BACAyD,EAAAC,aAAA1D,KAAA,mBACAyD,EAAAC,aAAA1D,KAAA,8BClCAnK,QAAAC,OAAA,aAAA6N,SAAA,oBACAC,QAAA,0BACAC,UAAA,eCFAhO,QAAAC,OAAA,aAAAgO,QAAA,0BAAA,aAAA,aAAA,SAAAC,EAAAC,GACA,OACA/D,OACAgE,OAAA,MACAC,SAAA,EACAC,kBAAA,SAAAxN,EAAAyN,EAAAnJ,GAQA,MAPAtE,GAAAd,QAAAwO,SAAA1N,GACA,MAAAsE,IACAtE,EAAA4J,WACA+D,MAAAP,EAAAQ,MAAAH,EAAA,SACA5D,WAAA4D,EAAA,mBAGAzN,GAEA6N,aACAxJ,SAAA,SAAAA,GAEA,MADAA,GAAAyJ,SAAAlE,UAAAvF,EAAArE,KAAA4J,UACAvF,EAAAyJ,YAIAjB,KACAS,OAAA,OAEAtF,MACAsF,OAAA,QAEApF,QACAoF,OAAA,OAEAS,UACAT,OAAA,SACAhM,QACA8J,GAAA,QAGA9C,eACAgF,OAAA,MACAU,aAAA,cACAP,SACAQ,OAAA,qEAEAT,kBAAAH,EAAAa,wBAEAzF,eACA6E,OAAA,OACAhM,QACAgM,OAAA,cAEAG,SACAU,eAAAC,QAEAC,iBAAA,SAAArO,GACA,GAAAsO,GAAA,GAAAC,QAAAC,SACAhG,EAAAxI,EAAAwI,IAEA,OADA8F,GAAAG,OAAA,OAAAjG,EAAAA,EAAA3I,MACAyO,QCzDApP,QAAAC,OAAA,aAAAgO,QAAA,QAAA,YAAA,mBAAA,yBAAA,SAAAuB,EAAAC,EAAAC,GACA,GAAAxP,GAAAF,QAAAkC,UAAAwN,GACAb,UACAT,OAAA,SACAhM,QACAsD,MAAA,YAIA,OAAA8J,GAAAC,EAAA1B,QAAA,sBAAA7N,MCTAF,QAAAC,OAAA,aAAAgO,QAAA,aAAA,aAAA,aAAA,SAAA3N,EAAAqP,GACA,GAAAC,KAMA,OALAA,GAAA5O,aAAA,SAAAD,GACA4O,EAAA5O,GAAAmE,KAAA,SAAA2K,GACAvP,EAAAS,UAAA8O,KAGAD,KCPA5P,QAAAC,OAAA,aAAA6P,SAAA,WAAA,WACA,GAAAtE,IAAA,KAAA,MACAuE,IACAC,KAAA,KACAC,SAAA,UACAC,SAAA,OAEAF,KAAA,KACAC,SAAA,UACAC,SAAA,MAGAxL,MAAAyL,aAAA,SAAAC,GACA5E,EAAA4E,GAGA1L,KAAA2L,gBAAA,SAAAC,GACAP,EAAAO,GAGA5L,KAAA6L,MAAA,KAAA,QAAA,aAAA,SAAAC,EAAAC,EAAAd,GACA,GAAAC,KAkBA,OAhBAA,GAAAc,WAAA,WACA,GAAApF,GAAAqE,EAAAgB,UAAAhD,IAAA,wBAIA,OAHA3N,SAAA4Q,YAAAtF,KACAA,EAAA,MAEAkF,EAAAK,KAAAvF,IAGAsE,EAAArE,OAAA,WACA,MAAAiF,GAAAK,KAAArF,IAGAoE,EAAAkB,gBAAA,WACA,MAAAN,GAAAK,KAAAd,IAGAH,MCvCA5P,QAAAC,OAAA,aAAAgO,QAAA,cAAA,YAAA,SAAA8C,GACA,GAAAnB,KAmBA,OAjBAA,GAAAZ,uBAAA,SAAAlO,EAAAkQ,EAAA5L,GACA,GAAA,MAAAA,EAAA,CACA,GAIA6L,GAJAC,EAAA,GAAAC,OAAArQ,IACAwL,KAAA,oBAEA8E,EAAAJ,EAAA,sBAEAI,KACAH,EAAAG,EAAAC,UAAA,yBAAAC,SAEAL,IACAA,EAAA,YAEAF,EAAAQ,OAAAL,EAAAD,KAIArB,KCpBA5P,QAAAC,OAAA,aAAAC,QAAA,iBAAA,SAAAsB,GACAA,EAAAC,MAAA,YACAE,IAAA,SACAsB,YAAA,gCACAD,WAAA,eACAE,aAAA,OACArB,SACA+G,uBAAA,OAAA,SAAA4I,GACA,MAAAA,MAGA1Q,MACAC,UAAA,kBACAoC,aAAA,eAAA,gBAIA,IAAAsO,GAAA,SAAApM,EAAAqM,EAAAC,EAAAC,EAAAC,GACA,GAAAC,EACAH,KACAG,GAAA,OAAA,SAAAN,GACA,MAAAA,GAAA7D,KACAjI,MAAAiM,EAAAjM,QACAuD,YAGAyI,EAAAK,MACA9O,YAAA,kBAAA4O,EACAhQ,SACAsG,OAAA2J,EACAlJ,uBAAA,OAAA,SAAA4I,GACA,MAAAA,MAGAxO,WAAA4O,EAAA,aACAI,OAAA9M,KAAA,WACAG,EAAAS,GAAA,QACA+E,QAAA,MAXA6G,SAaA,WACArM,EAAAS,GAAA,OAIAtE,GAAAC,MAAA,iBACAE,IAAA,eACAsQ,SAAA,SAAA,YAAA,eAAA,SAAA5M,EAAAqM,EAAAC,GACAF,EAAApM,EAAAqM,EAAAC,EAAA,eAAA,oBAEA7Q,MACAC,UAAA,kBACAoC,aAAA,eAAA,iBAIA3B,EAAAC,MAAA,mBACAE,IAAA,OACAsQ,SAAA,SAAA,YAAA,SAAA5M,EAAAqM,GACAD,EAAApM,EAAAqM,EAAAxC,OAAA,eAAA,oBAEApO,MACAC,UAAA,iBACAoC,aAAA,eAAA,iBAIA3B,EAAAC,MAAA,iBACAE,IAAA,eACAsQ,SAAA,SAAA,YAAA,eAAA,SAAA5M,EAAAqM,EAAAC,GACAF,EAAApM,EAAAqM,EAAAC,EAAA,eAAA,oBAEA7Q,MACAC,UAAA,kBACAoC,aAAA,eAAA,iBAIA3B,EAAAC,MAAA,mBACAE,IAAA,iBACAsQ,SAAA,SAAA,YAAA,eAAA,SAAA5M,EAAAqM,EAAAC,GACAF,EAAApM,EAAAqM,EAAAC,EAAA,iBAAA,sBAEA7Q,MACAC,UAAA,oBACAoC,aAAA,eAAA,iBAIA3B,EAAAC,MAAA,sBACAE,IAAA,cACAsQ,SAAA,SAAA,YAAA,SAAA5M,EAAAqM,GACAD,EAAApM,EAAAqM,EAAAxC,OAAA,oBAAA,0BAEApO,MACAC,UAAA,wBACAoC,aAAA,eAAA,iBAIA3B,EAAAC,MAAA,sBACAE,IAAA,cACAsQ,SAAA,SAAA,YAAA,SAAA5M,EAAAqM,GACAD,EAAApM,EAAAqM,EAAAxC,OAAA,oBAAA,0BAEApO,MACAC,UAAA,wBACAoC,aAAA,eAAA,oBAKAnD,QAAAC,OAAA,aAAAC,QAAA,qBAAA,SAAAe,GACAA,EAAAsB,aAAA,MACAoG,OACAuJ,WAAA,uBACAC,YAAA,yBAEAC,UAAA,eACAC,kBAAA,+BACAC,gBAAA,2BACAC,gBAAA,yBACAC,gBAAA,wBACAC,eAAA,uBACAC,sBAAA,qCACAC,sBAAA,qCAEAC,gBAAA,cACAC,oBAAA,SACAC,mBAAA,iBACAC,gBAAA,QACAC,mBAAA,SACAC,sBAAA,QAEAC,gBAAA,cACAC,eAAA,QACAC,mBAAA,SACAC,sBAAA,SAGApS,EAAAsB,aAAA,MACAoG,OACAuJ,WAAA,2BACAC,YAAA,6BAEAC,UAAA,QACAC,kBAAA,cACAC,gBAAA,eACAC,gBAAA,YACAC,gBAAA,eACAC,eAAA,gBACAC,sBAAA,oBACAC,sBAAA,oBAEAC,gBAAA,QACAC,oBAAA,YACAC,mBAAA,WACAC,gBAAA,QACAC,mBAAA,WACAC,sBAAA,cAEAC,gBAAA,QACAC,eAAA,QACAC,mBAAA,WACAC,sBAAA,mBCnKArT,QAAAC,OAAA,aAAAC,QAAA,iBAAA,SAAAsB,GACAA,EAAAC,MAAA,yBACAE,IAAA,YACAsB,YAAA,2CACAD,WAAA,eACAE,aAAA,OACApC,MACAC,UAAA,yBAKAf,QAAAC,OAAA,aAAAC,QAAA,qBAAA,SAAAe,GACAA,EAAAsB,aAAA,MACA+Q,iBAAA,4BACAC,uBAAA,4BACAC,6BAAA,eACAC,yCAAA,iBACAC,sCAAA,kCACAC,uCAAA,6DACAC,uCAAA,6DACAC,qCAAA,+BACAC,iDAAA,iCACAC,8CAAA,kDACAC,+CAAA,6EACAC,+CAAA,6EACAC,6CAAA,uCACAC,wBAAA,cACAC,8BAAA,4CACAC,4BAAA,wCAGApT,EAAAsB,aAAA,MACA+Q,iBAAA,qBACAC,uBAAA,qBACAC,6BAAA,WACAC,yCAAA,aACAC,sCAAA,6BACAC,uCAAA,yDACAC,uCAAA,qDACAC,qCAAA,wBACAC,iDAAA,0BACAC,8CAAA,0CACAC,+CAAA,sEACAC,+CAAA,kEACAC,6CAAA,0CACAC,wBAAA,OACAC,8BAAA,iCACAC,4BAAA,sCChDArU,QAAAC,OAAA,aAAA+C,WAAA,gBAAA,OAAA,YAAA,eAAA,SAAAjB,EAAA0J,EAAArD,GACA,GAAA3D,GAAAC,IACA+G,GAAAC,WAAAxG,KAAA,SAAAyG,GACAlH,EAAAkH,QAAAA,IAEAlH,EAAA6P,eAAA,WACAvS,EAAAuS,eAAA7P,EAAAmB,UAAAV,KAAA,WACAkD,EAAAK,QAAA,mCADA1G,SAEA,WACAqG,EAAAO,MAAA,qCCTA3I,QAAAC,OAAA,aAAAC,QAAA,iBAAA,SAAAsB,GACAA,EAAAC,MAAA,yBACAE,IAAA,YACAsB,YAAA,2CACAD,WAAA,eACAE,aAAA,OACApC,MACAC,UAAA,yBAKAf,QAAAC,OAAA,aAAAC,QAAA,qBAAA,SAAAe,GACAA,EAAAsB,aAAA,MACAgS,iBAAA,aACAC,uBAAA,aACAC,2BAAA,SACAC,uCAAA,WACAC,oCAAA,gCACAC,qCAAA,0DACAC,0BAAA,iBACAC,sCAAA,mBACAC,mCAAA,wCACAC,oCAAA,kEACAC,uBAAA,QACAC,mCAAA,UACAC,gCAAA,+BACAC,6BAAA,4BACAC,iCAAA,0DACAC,0BAAA,SACAC,wBAAA,cACAC,8BAAA,wCACAC,4BAAA,wCAGAxU,EAAAsB,aAAA,MACAgS,iBAAA,aACAC,uBAAA,aACAC,2BAAA,aACAC,uCAAA,eACAC,oCAAA,+BACAC,qCAAA,uDACAC,0BAAA,YACAC,sCAAA,cACAC,mCAAA,8BACAC,oCAAA,sDACAC,uBAAA,QACAC,mCAAA,UACAC,gCAAA,2BACAC,6BAAA,0BACAC,iCAAA,oDACAC,0BAAA,WACAC,wBAAA,OACAC,8BAAA,8BACAC,4BAAA,mCCtDAzV,QAAAC,OAAA,aAAA+C,WAAA,gBAAA,YAAA,OAAA,WAAA,eAAA,aAAA,SAAAyI,EAAA1J,EAAAuJ,EAAAlD,EAAAuH,GACA,GAAAlL,GAAAC,KACAgR,EAAA,SAAA/J,GAGA,OACAgK,UAAAhK,EAAAgK,UACAC,MAAAjK,EAAAiK,MACAC,UAAAlK,EAAAkK,UACAC,QAAAnK,EAAAmK,QACAC,SAAApK,EAAAoK,SACArQ,MAAAiG,EAAAjG,OAGA+F,GAAAC,WAAAxG,KAAA,SAAAyG,GACAlH,EAAAuR,gBAAAN,EAAA/J,KAEAlH,EAAAqE,KAAA,WACA/G,EAAAkU,cAAAxR,EAAAuR,iBAAA9Q,KAAA,WACA,MAAAuG,GAAAC,UAAA,GAAAxG,KAAA,SAAAyG,GACAlH,EAAAuR,gBAAAN,EAAA/J,GACAL,EAAAoF,aAAAxL,KAAA,SAAAgR,GACAzR,EAAAuR,gBAAAF,UAAAI,GACAvG,EAAAwG,IAAA1R,EAAAuR,gBAAAF,SAEA1N,EAAAK,QAAA,uCAPA1G,SAUA,WACAqG,EAAAO,MAAA,qCC7BA3I,QAAAC,OAAA,aAAA6H,UAAA,aACA7E,YAAA,6CCDAjD,QAAAC,OAAA,aAAAC,QAAA,qBAAA,SAAAe,GACAA,EAAAsB,aAAA,MACA6T,kBAAA,aACAC,iBAAA,SACAC,kBAAA,eACAC,iBAAA,iBAGAtV,EAAAsB,aAAA,MACA6T,kBAAA,oBACAC,iBAAA,UACAC,kBAAA,WACAC,iBAAA,gBCZAvW,QAAAC,OAAA,aAAA6H,UAAA,aACA7E,YAAA,6CCDAjD,QAAAC,OAAA,aAAA6H,UAAA,oBACA7E,YAAA,yDACAD,YAAA,aAAA,aAAA,WAAA,SAAA1C,EAAAqP,EAAArE,GACA,GAAA7G,GAAAC,IACAD,GAAA+R,eAAA,SAAAvM,GACA0F,EAAAwG,IAAAlM,GAEA,IAAAwM,GAAA,WACAhS,EAAAiS,gBAAA/G,EAAAwG,MACA,IAAA1R,EAAAiS,gBAAA9V,QAAA,QACA6D,EAAAiS,gBAAA,MAGApW,GAAAE,IAAA,0BAAA,WACAiW,MAEAA,IACAnL,EAAAwF,kBAAA5L,KAAA,SAAApE,GACA2D,EAAA+G,UAAA1K,QClBAd,QAAAC,OAAA,aAAA6H,UAAA,kBACA7E,YAAA,0CACAD,YAAA,aAAA,UAAA,cAAA,SAAA1C,EAAA0L,EAAA2K,GACA,GACAC,GAAAC,EADApS,EAAAC,IAEAkS,GAAA,SAAAE,EAAAC,GACA,GAAAC,GAAAhX,QAAAgX,KAAAD,EACAC,GAAAC,YACAJ,EAAAG,EAAAC,SAAAF,EAAAE,UACAD,EAAAE,MAAAlL,EAAA,aAAAgL,EAAAE,OACAJ,EAAA3M,KAAA6M,IAEAH,EAAA,SAAAC,EAAAK,GACA,GAAAC,GAAAC,EAAAC,CACA,IAAAH,GAAAA,EAAA7F,OACA,IAAA8F,EAAA,EAAAC,EAAAF,EAAA7F,OAAA+F,EAAAD,EAAAA,IACAE,EAAAH,EAAAC,GACAR,EAAAE,EAAAQ,GAIA,IAAAC,GAAA,WACA9S,EAAA+S,YACA,IAAAC,GAAAd,EAAAe,UACAb,GAAApS,EAAA+S,UAAAC,GAEAF,KACAjX,EAAAE,IAAA,0BAAA,WACA+W,UC5BAvX,QAAAC,OAAA,aAAA6P,SAAA,cAAA,WACA,GAAA0H,KAEA9S,MAAAiT,QAAA,SAAAC,GACA,UAAAA,EAAAC,WACAD,EAAAC,SAAA,QAEAL,EAAArN,KAAAyN,IAGAlT,KAAA6L,KAAA,WACA,GAAAX,KAIA,OAHAA,GAAA8H,SAAA,WACA,MAAAF,IAEA5H,KCfA5P,QAAAC,OAAA,aAAA6H,UAAA,aACA7E,YAAA,2CACA+E,UACA8P,WAAA,KAEA9U,WAAA,WACA,GAAAyB,GAAAC,IACAD,GAAAsT,cAAA,EACAtT,EAAAuT,SAAA,WACAvT,EAAAsT,cAAAtT,EAAAsT,aACA/X,QAAAiY,QAAAxT,EAAAqT,WAAA,SAAA3P,GACAA,EAAA+P,WAAAzT,EAAAsT,mBCXA/X,QAAAC,OAAA,aAAA6H,UAAA,YACA7E,YAAA,yCACAD,YAAA,aAAA,SAAA,OAAA,SAAA1C,EAAA+E,EAAAtD,GACA,GAAA0C,GAAAC,IACAD,GAAA0T,QAAA,WACApW,EAAAqW,SACA/S,EAAAS,GAAA,gBAEAxF,EAAAE,IAAA,qBAAA,SAAAC,EAAAK,GACA2D,EAAAkH,QAAA7K,EAAA6K,cCTA3L,QAAAC,OAAA,aAAA6H,UAAA,iBACA7E,YAAA,mDACA8E,YAAA,EACAC,UACAiI,SAAA,IACAoI,MAAA,IACAC,SAAA,UAEAtV,WAAA,eCRAhD,QAAAC,OAAA,aACA6K,UAAA,WAAA,eAAA,SAAA1C,GACA,OACA2C,SAAA,IACAnJ,SAAA,0TAQAoB,YAAA,SACA,SAAAkF,GACAA,EAAAqQ,OAAAnQ,EAAAuF,MACAzF,EAAA1H,IAAA,WAAA,WACA0H,EAAAqQ,kBAMAzN,UAAA,gBAAA,eAAA,aAAA,aAAA,SAAA1C,EAAA9H,EAAAqP,GACA,OACA5E,SAAA,IACAnJ,SAAA,4QAMAoB,YAAA,SAAA,mBACA,SAAAkF,EAAAuH,GAEAvH,EAAAqQ,SAEA,IAAAC,GAAA,SAAAC,EAAAxO,EAAAnJ,GACAmJ,EAAAA,GAAA,OAAAA,EAAAA,EAAAwO,EACAvQ,EAAAqQ,OAAApO,KACA/B,EAAAsQ,KACApM,KAAA,SACAqM,IAAA1O,EACA7H,OAAAtB,EACA8X,QAAA,IACAC,MAAAzQ,EAAA0Q,UACAC,QAAA,GAEA7Q,EAAAqQ,UAKAS,EAAA1Y,EAAAE,IAAAiP,EAAAzB,UAAA,aAAA,SAAAvN,EAAAwY,GACA,GAAA7B,EAEA,QADA3W,EAAAyY,kBACAD,EAAA7T,QAEA,IAAA,GACAoT,EAAA,uBAAA,6BACA,MAEA,KAAA,KACA,GAAAW,GAAAF,EAAA1K,QAAA,KAAAkB,EAAAzB,UAAA,UACAoL,EAAAH,EAAA1K,QAAA,KAAAkB,EAAAzB,UAAA,UACA,IAAAmL,EAAA,CACA,GAAAE,GAAA1J,EAAA2J,QAAA,wBAAAF,EACAZ,GAAAW,EAAAA,GACAE,WAAAA,QAEA,IAAAJ,EAAAnY,MAAAmY,EAAAnY,KAAAyY,YACA,IAAAnC,EAAA,EAAAA,EAAA6B,EAAAnY,KAAAyY,YAAAjI,OAAA8F,IAAA,CACA,GAAAoC,GAAAP,EAAAnY,KAAAyY,YAAAnC,GAIAqC,EAAAD,EAAAE,MAAA9M,QAAA,WAAA,MACA+M,EAAAhK,EAAA2J,QAAA7J,EAAAzB,UAAA,IAAAwL,EAAAI,WAAA,IAAAH,EACAjB,GAAA,SAAAmB,EAAA,mBAAA,SAAAH,EAAAf,SACAkB,UAAAA,QAGAV,GAAAnY,MAAAmY,EAAAnY,KAAA2X,QACAD,EAAAS,EAAAnY,KAAA2X,QAAAQ,EAAAnY,KAAA2X,QAAAQ,EAAAnY,MAEA0X,EAAAS,EAAAnY,KAEA,MAEA,SAEA0X,EADAS,EAAAnY,MAAAmY,EAAAnY,KAAA2X,QACAQ,EAAAnY,KAAA2X,QAEAoB,KAAAC,UAAAb,MAKA/Q,GAAA1H,IAAA,WAAA,WACA0O,SAAA8J,GAAA,OAAAA,IACAA,IACA9Q,EAAAqQ,mBCpGAvY,QAAAC,OAAA,aACA6P,SAAA,eAAA,WACA,GAAA+I,IAAA,CAEAnU,MAAA6L,MAAA,WAAA,OAAA,aAAA,SAAAwJ,EAAAC,EAAArK,GAEA,GAAAsK,GAAA,EACA1B,KACAK,EAAA,IAEAE,EAAA,WACA,MAAAD,IAGAqB,EAAA,WACA3B,MAGA5K,EAAA,WACA,MAAA4K,IAGA4B,EAAA,SAAAC,EAAAC,GACA,MAAAA,GAAAC,OAAAF,EAAA,IAGAG,EAAA,SAAArO,EAAAsO,GACA,GAAAH,GAAAG,EAAAA,EAAAjC,CACA,OAAA4B,GAAAE,EAAAI,IAAA,SAAAC,GACA,MAAAA,GAAAxO,KACAtL,QAAAsL,GAAAmO,IAGApM,EAAA,SAAA0M,GACA,GAAAC,IACAtO,KAAAqO,EAAArO,KACAqM,IAAAqB,EAAAa,YAAAF,EAAAhC,KACAzM,GAAAyO,EAAAV,QACArB,QAAA+B,EAAA/B,QACAC,MAAA8B,EAAA9B,MACAhB,SAAA8C,EAAA9C,SAAA8C,EAAA9C,SAAA;AACAkB,OAAA4B,EAAA5B,OACA+B,MAAA,SAAAvC,GACA,MAAAgC,GAAA7V,KAAAwH,GAAAqM,IAMA,OAHAqC,GAAA7B,QACAR,EAAApO,KAAAyQ,GAEAA,GAGAG,EAAA,SAAAJ,EAAAH,GACAG,EAAAV,QAAAA,IACAU,EAAAhC,IAAAhJ,EAAA2J,QAAAqB,EAAAhC,IAAAgC,EAAAvY,OACA,IAAAwY,GAAA3M,EAAA0M,EAMA,OALAA,GAAA/B,SAAA+B,EAAA/B,QAAA,GACAmB,EAAA,WACAQ,EAAAI,EAAAV,QAAAO,IACAG,EAAA/B,SAEAgC,GAGAnS,EAAA,SAAAkQ,EAAAvW,EAAAyV,GACA,MAAAkD,IACAzO,KAAA,UACAqM,IAAAA,EACAvW,OAAAA,EACAwW,QAAAA,EACAC,MAAAA,EACAhB,SAAAA,KAIAlP,EAAA,SAAAgQ,EAAAvW,EAAAyV,GACA,MAAAkD,IACAzO,KAAA,SACAqM,IAAAA,EACAvW,OAAAA,EACAwW,QAAAA,EACAC,MAAAA,EACAhB,SAAAA,KAIAmD,EAAA,SAAArC,EAAAvW,EAAAyV,GACA,MAAAkD,IACAzO,KAAA,UACAqM,IAAAA,EACAvW,OAAAA,EACAwW,QAAAA,EACAC,MAAAA,EACAhB,SAAAA,KAIAoD,EAAA,SAAAtC,EAAAvW,EAAAyV,GACA,MAAAkD,IACAzO,KAAA,OACAqM,IAAAA,EACAvW,OAAAA,EACAwW,QAAAA,EACAC,MAAAA,EACAhB,SAAAA,IAIA,QACA5J,QAAAA,EACA6K,QAAAA,EACAJ,IAAAqC,EACAR,WAAAA,EACAJ,kBAAAA,EACAD,MAAAA,EACAvM,IAAAA,EACAlF,QAAAA,EACAE,MAAAA,EACAsS,KAAAA,EACAD,QAAAA,KAIAtW,KAAAwW,YAAA,SAAApC,GACAD,EAAAC,KC5HA9Y,QAAAC,OAAA,aACAgO,QAAA,QAAA,aAAA,SAAA,KAAA,aAAA,YAAA,qBAAA,UAAA,WAAA,oBAAA,sBAAA,SAAA3N,EAAA+E,EAAAmL,EAAAb,EAAAlE,EAAA0P,EAAAC,EAAAC,EAAAC,EAAAC,GACA,OACA7V,MAAA,SAAA8V,EAAAC,GACA,GAAAC,GAAAD,GAAAzb,QAAA2b,KACAC,EAAApL,EAAAqL,OAiBA,OAfAV,GAAAzV,MAAA8V,GAAAtW,KAAA,SAAApE,GAQA,MANA2K,GAAAC,UAAA,GAAAxG,KAAA,SAAAyG,GAGAgE,EAAAwG,IAAAxK,EAAAmK,SACA8F,EAAA/Z,QAAAf,KAEA4a,MARAP,SASA,SAAAW,GAGA,MAFApX,MAAA0T,SACAwD,EAAAG,OAAAD,GACAJ,EAAAI,IACAE,KAAAtX,OAEAkX,EAAAK,SAGA7D,OAAA,WACA+C,EAAA/C,SACA3M,EAAAyQ,aAAA,MAEA5b,EAAAuF,kBAAAqJ,OACA5O,EAAA6b,wBAAAjN,QAGApN,UAAA,SAAAsa,GACA,MAAA3Q,GAAAC,SAAA0Q,GACAlX,KAAA,WACA,GAAAmX,GAAA5Q,EAAA4Q,iBAEAA,IAAA/b,EAAAI,QAAAC,MAAA,gBAAAL,EAAAI,QAAAC,MACA0E,EAAAS,GAAA,YAEAxF,EAAAI,QAAAI,MAAAR,EAAAI,QAAAI,KAAAqC,aAAAkZ,EAGA/b,EAAAI,QAAAI,MACAR,EAAAI,QAAAI,KAAAqC,aACA7C,EAAAI,QAAAI,KAAAqC,YAAAmO,OAAA,IACA7F,EAAA6Q,gBAAAhc,EAAAI,QAAAI,KAAAqC,eAEAkZ,EAEAhX,EAAAS,GAAA,sBAIAxF,EAAAuF,kBAAAvF,EAAAI,QACAJ,EAAA6b,wBAAA7b,EAAA+M,cAEAhI,EAAAS,GAAA,iBAfAT,EAAAS,GAAA,kBAoBAmQ,cAAA,SAAAtK,EAAA8P,GACA,GAAAC,GAAAD,GAAAzb,QAAA2b,IAEA,OAAAP,GAAAtS,KAAA6C,EACA,WAIA,MAHArL,GAAAic,MAAA,sBACA5Q,QAAAA,IAEA+P,EAAA/P,IAEA,SAAAmQ,GACA,MAAAJ,GAAAI,IACAE,KAAAtX,OAAAuE,UAGAqL,eAAA,SAAAkI,EAAAf,GACA,GAAAC,GAAAD,GAAAzb,QAAA2b,IAEA,OAAAN,GAAAvS,KAAA0T,EAAA,WACA,MAAAd,MACA,SAAAI,GACA,MAAAJ,GAAAI,KACA7S,UAGAhE,kBAAA,SAAAwX,EAAAhB,GACA,GAAAC,GAAAD,GAAAzb,QAAA2b,IAEA,OAAAL,GAAAxS,KAAA2T,EAAA,WACA,MAAAf,MACA,SAAAI,GACA,MAAAJ,GAAAI,KACA7S,UAGAyT,oBAAA,SAAAC,EAAAlB,GACA,GAAAC,GAAAD,GAAAzb,QAAA2b,IAEA,OAAAJ,GAAAzS,KAAA6T,EAAA,WACA,MAAAjB,MACA,SAAAI,GACA,MAAAJ,GAAAI,KACA7S,cCzGAjJ,QAAAC,OAAA,aAAA6K,UAAA,mBAAA,YAAA,SAAAW,GACA,OACAV,SAAA,IACAG,KAAA,SAAAD,EAAAE,EAAAC,GACA,GAAAwR,GAAA,WACAzR,EAAA0R,YAAA,WAEAC,EAAA,WACA3R,EAAA2B,SAAA,WAEA3J,EAAAiI,EAAAkR,gBAAA1P,QAAA,OAAA,IAAAmQ,MAAA,KACAC,EAAA,SAAAC,GACA,GAAAjL,EACAiL,IACAL,IAGA5K,EAAAvG,EAAA6Q,gBAAAnZ,GACA6O,EACA4K,IAEAE,IAIA3Z,GAAAmO,OAAA,IACA0L,GAAA,GAEA/R,EAAAiS,OAAA,WACA,MAAAzR,GAAA4Q,mBACA,WACAW,GAAA,WAKAlS,UAAA,gBAAA,YAAA,SAAAW,GACA,OACAV,SAAA,IACAG,KAAA,SAAAD,EAAAE,EAAAC,GACA,GAAAwR,GAAA,WACAzR,EAAA0R,YAAA,WAEAC,EAAA,WACA3R,EAAA2B,SAAA,WAEAqQ,EAAA/R,EAAAgS,aAAAxQ,QAAA,OAAA,IACAoQ,EAAA,SAAAC,GAEAA,GACAL,IAGAnR,EAAA2R,aAAAD,GAAAjY,KAAA,SAAA8M,GACAA,EACA4K,IAEAE,MAKAK,GAAA7L,OAAA,IACA0L,GAAA,GAEA/R,EAAAiS,OAAA,WACA,MAAAzR,GAAA4Q,mBACA,WACAW,GAAA,WCpEAhd,QAAAC,OAAA,aACAgO,QAAA,aAAA,KAAA,UAAA,SAAAuC,EAAA4K,GACA,GAAAiC,GACAC,GAAA,CAEA,QACAhQ,mBAAA,WACA,MAAAtN,SAAAud,UAAAF,IAEAhB,gBAAA,WACA,MAAAiB,IAEAF,aAAA,SAAAD,GACA,MAAAG,GAIA5Y,KAAAgH,WAAAxG,KAAA,SAAAsY,GACA,MAAAA,GAAAra,aAAA,KAAAqa,EAAAra,YAAAvC,QAAAuc,IACA,WACA,OAAA,IANA3M,EAAAK,MAAA,IASAyL,gBAAA,SAAAnZ,GACA,IAAAma,IAAAD,IAAAA,EAAAla,YACA,OAAA,CAGA,KAAA,GAAAiU,GAAA,EAAAA,EAAAjU,EAAAmO,OAAA8F,IACA,GAAA,KAAAiG,EAAAla,YAAAvC,QAAAuC,EAAAiU,IACA,OAAA,CAIA,QAAA,GAEA8E,aAAA,SAAAxQ,GACA2R,EAAA3R,EACA4R,EAAA,OAAA5R,GAEAA,SAAA,SAAA0Q,GACA,GAAAR,GAAApL,EAAAqL,OASA,OAPAO,MAAA,IACAiB,EAAAnO,QAMAlP,QAAAud,UAAAF,IACAzB,EAAA/Z,QAAAwb,GAEAzB,EAAAK,UAKAb,EAAAzN,MAAA1E,SACA/D,KAAA,SAAAyG,GACA0R,EAAA1R,EAAA7K,KACAwc,GAAA,EACA1B,EAAA/Z,QAAAwb,KAJAjC,SAMA,WACAiC,EAAA,KACAC,GAAA,EACA1B,EAAA/Z,QAAAwb,KAEAzB,EAAAK,cCrEAjc,QAAAC,OAAA,aAAAgO,QAAA,mBAAA,aAAA,KAAA,YAAA,sBAAA,SAAA3N,EAAAkQ,EAAAiN,EAAAC,GACA,OAEAC,QAAA,SAAAzd,GACAA,EAAAqO,QAAArO,EAAAqO,WACA,IAAAqP,GAAAF,EAAA/P,IAAA,QAMA,OAJAiQ,IAAAA,EAAAC,SAAAD,EAAAC,SAAA,GAAAC,OAAAC,YACA7d,EAAAqO,QAAA,gBAAAqP,EAAAA,OAGA1d,OAGA+N,QAAA,0BAAA,aAAA,KAAA,YAAA,sBAAA,SAAA3N,EAAAkQ,EAAAwN,EAAAN,GACA,OACAO,cAAA,SAAA9Y,GAEA,GAAA,MAAAA,EAAAC,SAAA,kBAAAD,EAAArE,KAAA6H,OAAA,iBAAAxD,EAAArE,KAAA6H,OAAA,CACA+U,EAAAQ,OAAA,QACA,IAAAzS,GAAAuS,EAAArQ,IAAA,YACA,IAAAlC,EAAA4Q,kBAAA,CACA,GAAAta,GAAAic,EAAArQ,IAAA,OACA5L,GAAAD,WAAA,IAGA,MAAA0O,GAAAuL,OAAA5W,QC1BAnF,QAAAC,OAAA,aAAAgO,QAAA,2BAAA,KAAA,aAAA,mBAAA,SAAAuC,EAAAlQ,EAAAmP,GACA,OACAwO,cAAA,SAAA9Y,GAIA,MAHA,OAAAA,EAAAC,QAAA,IAAAD,EAAArE,KAAAqd,KAAAvd,QAAA,iBACAN,EAAAic,MAAA9M,EAAAzB,UAAA,aAAA7I,GAEAqL,EAAAuL,OAAA5W,QCNAnF,QAAAC,OAAA,aAAAgO,QAAA,2BAAA,KAAA,eAAA,mBAAA,SAAAuC,EAAApI,EAAAqH,GACA,OACAtK,SAAA,SAAAA,GACA,GAAAiZ,GAAAjZ,EAAAoJ,QAAA,KAAAkB,EAAAzB,UAAA,SAMA,OALAhO,SAAAqe,SAAAD,IACAhW,EAAAK,QAAA2V,GACAE,MAAAnZ,EAAAoJ,QAAA,KAAAkB,EAAAzB,UAAA,aAGA7I,OCRAnF,QAAAC,OAAA,aAAAse,QAAA,SAAA,WACA,GAAAC,GAAA,mEACA9Z,MAAA+Z,OAAA,SAAA3H,GAOA,IANA,GACA4H,GAAAC,EAAAC,EAAAC,EAAAC,EADAC,EAAA,GAEAC,EAAA,GACAC,EAAA,GACA7H,EAAA,EAEAA,EAAAN,EAAAxF,QACAoN,EAAA5H,EAAAoI,WAAA9H,KACAuH,EAAA7H,EAAAoI,WAAA9H,KACA4H,EAAAlI,EAAAoI,WAAA9H,KAEAwH,EAAAF,GAAA,EACAG,GAAA,EAAAH,IAAA,EAAAC,GAAA,EACAG,GAAA,GAAAH,IAAA,EAAAK,GAAA,EACAC,EAAA,GAAAD,EAEAG,MAAAR,GACAG,EAAAG,EAAA,GACAE,MAAAH,KACAC,EAAA,IAGAF,EAAAA,EAAAP,EAAAY,OAAAR,GAAAJ,EAAAY,OAAAP,GAAAL,EAAAY,OAAAN,GAAAN,EAAAY,OAAAH,GACAP,EAAAC,EAAAK,EAAA,GACAJ,EAAAC,EAAAC,EAAAG,EAAA,EAGA,OAAAF,IAGAra,KAAA2a,OAAA,SAAAvI,GACA,GACA4H,GAAAC,EAAAC,EAAAC,EAAAC,EADAC,EAAA,GAEAC,EAAA,GACAC,EAAA,GACA7H,EAAA,CAKA,KAFAN,EAAAA,EAAAlK,QAAA,sBAAA,IAEAwK,EAAAN,EAAAxF,QACAsN,EAAAJ,EAAA5d,QAAAkW,EAAAsI,OAAAhI,MACAyH,EAAAL,EAAA5d,QAAAkW,EAAAsI,OAAAhI,MACA0H,EAAAN,EAAA5d,QAAAkW,EAAAsI,OAAAhI,MACA6H,EAAAT,EAAA5d,QAAAkW,EAAAsI,OAAAhI,MAEAsH,EAAAE,GAAA,EAAAC,GAAA,EACAF,GAAA,GAAAE,IAAA,EAAAC,GAAA,EACAE,GAAA,EAAAF,IAAA,EAAAG,EAEAF,GAAAO,OAAAC,aAAAb,GAEA,KAAAI,IACAC,GAAAO,OAAAC,aAAAZ,IAEA,KAAAM,IACAF,GAAAO,OAAAC,aAAAP,IAGAN,EAAAC,EAAAK,EAAA,GACAJ,EAAAC,EAAAC,EAAAG,EAAA,MAGAhR,QAAA,kBAAA,UAAA,SAAAuR,GACA,OAEA7R,IAAA,SAAA1D,GACA,MAAA4P,MAAAnL,MAAA8Q,EAAAC,aAAAC,QAAAzV,KAGAnB,KAAA,SAAAmB,EAAAnJ,GACA0e,EAAAC,aAAAE,QAAA1V,EAAA4P,KAAAC,UAAAhZ,KAGAod,OAAA,SAAAjU,GACAuV,EAAAC,aAAAG,WAAA3V,IAGA4V,SAAA,WACAL,EAAAC,aAAAvF,aCnFAla,QAAAC,OAAA,aACAse,QAAA,aAAA,WACA7Z,KAAAgK,MAAA,SAAAoR,GACA,GAAA,IAAAA,EAAAxO,OACA,KAAA,IAAAyO,OAAA,mCAIA,IAAAC,GAAAF,EAAA/C,MAAA,KACAtO,IAuBA,OArBAzO,SAAAiY,QAAA+H,EAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAlD,MAAA,IACA,IAAA,IAAAmD,EAAA5O,OACA,KAAA,IAAAyO,OAAA,oCAEA,IAAApe,GAAAue,EAAA,GAAAtT,QAAA,SAAA,MAAAuT,OACAC,IACAze,GAAAiL,QACA,GAAAyT,QAAA,uBAAA,KACA,SAAAC,EAAAC,EAAAC,EAAAC,GACAL,EAAAG,GAAAE,GAGA,IAAApe,GAAA+d,EAAA/d,IACArC,SAAAqe,SAAAhc,KACAA,EAAAqe,SAAAre,GAEA,IAAA1B,GAAAuf,EAAA,GAAAtT,QAAA,aAAA,MAAAuT,MACA1R,GAAA9N,GAAA0B,IAGAoM,KChCAzO,QAAAC,OAAA,aAAAgO,QAAA,sBAAA,QAAA,sBAAA,SAAA,mBAAA,SAAAwC,EAAAiN,EAAAiD,EAAAlR,GACA,OACA/J,MAAA,SAAA8V,GACA,GAAA1a,GAAA,YAAA8f,mBAAApF,EAAA7V,UAAA,aAAAib,mBAAApF,EAAA5V,SACA,OAAA6K,GAAAoQ,KAAApR,EAAA1B,QAAA,mBAAAjN,GACAyN,SACAU,eAAA,oCACAF,OAAA,sBAEAtG,QAAA,SAAAtD,GAEA,MADAuY,GAAAoD,IAAA,QAAA3b,GACAA,KAGAiT,OAAA,WAEAsF,EAAAmC,YAEAkB,SAAA,WACA,MAAArD,GAAA/P,IAAA,UAEAqT,cAAA,WACA,GAAApD,GAAAlZ,KAAAqc,UACA,OAAAnD,IAAAA,EAAAC,SAAAD,EAAAC,SAAA,GAAAC,OAAAC,eCvBA/d,QAAAC,OAAA,aACAgO,QAAA,WAAA,YAAA,mBAAA,SAAAuB,EAAAC,GACA,MAAAD,GAAAC,EAAA1B,QAAA,kBACAJ,KACAS,OAAA,MACAhM,UACAiM,SAAA,EACAM,aACAxJ,SAAA,SAAAA,GAEA,MAAAA,WCVAnF,QAAAC,OAAA,aAAAgO,QAAA,YAAA,YAAA,mBAAA,SAAAuB,EAAAC,GACA,MAAAD,GAAAC,EAAA1B,QAAA,wCAGA/N,QAAAC,OAAA,aAAAgO,QAAA,qBAAA,YAAA,mBAAA,SAAAuB,EAAAC,GACA,MAAAD,GAAAC,EAAA1B,QAAA,4CAGA/N,QAAAC,OAAA,aAAAgO,QAAA,uBAAA,YAAA,mBAAA,SAAAuB,EAAAC,GACA,MAAAD,GAAAC,EAAA1B,QAAA","file":"adama-web-min.js","sourcesContent":["'use strict';\n\nangular.module('adama-web', [ //\n\t'ngSanitize', //\n\t'ngMessages', //\n\t'ui.router', //\n\t'ui.bootstrap', //\n\t'pascalprecht.translate', //\n\t'ngCookies', //\n\t'ngResource', //\n\t'LocalStorageModule', //\n\t'ngTable', //\n\t'ngFileSaver', //\n\t'ngFileUpload', //\n\t'angular-loading-bar' //\n]);\n\nangular.module('adama-web').config([\"$urlRouterProvider\", function($urlRouterProvider) {\n\t$urlRouterProvider.otherwise('/app/');\n}]);\n\nangular.module('adama-web').run([\"$rootScope\", function($rootScope) {\n\t// change body class depending on application main state (app or login)\n\t$rootScope.additionalBodyClass = 'sidebar-mini';\n\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.name && toState.name.indexOf('auth') === 0) {\n\t\t\t$rootScope.additionalBodyClass = 'login-page';\n\t\t} else {\n\t\t\t$rootScope.additionalBodyClass = 'sidebar-mini';\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').run([\"$rootScope\", \"appGlobal\", function($rootScope, appGlobal) {\n\t// change page title depending on current page\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.data && toState.data.pageTitle) {\n\t\t\tappGlobal.setPageTitle(toState.data.pageTitle);\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.useSanitizeValueStrategy('escapeParameters');\n\n\t$translateProvider.useLocalStorage();\n\n\t$translateProvider.registerAvailableLanguageKeys(['en', 'fr'], {\n\t\t'en_*': 'en',\n\t\t'fr_*': 'fr'\n\t});\n\n\t$translateProvider.determinePreferredLanguage();\n}]);\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app', {\n\t\tabstract: true,\n\t\turl: '/app',\n\t\ttemplate: '' + //\n\t\t\t'<div class=\"wrapper\">' + //\n\t\t\t'\t<ark-header></ark-header>' + //\n\t\t\t'\t<aside class=\"main-sidebar\">' + //\n\t\t\t'\t\t<section class=\"sidebar\">' + //\n\t\t\t'\t\t\t<main-navigation></main-navigation>' + //\n\t\t\t'\t\t</section>' + //\n\t\t\t'\t</aside>' + //\n\t\t\t'\t<jh-alert></jh-alert>' + //\n\t\t\t'\t<ui-view></ui-view>' + //\n\t\t\t'\t<ark-footer></ark-footer>' + //\n\t\t\t'\t<layout-fix add-event=\"true\"></layout-fix>' + //\n\t\t\t'</div>' + //\n\t\t\t'',\n\t\tresolve: {\n\t\t\tauthorize: [\"Auth\", function(Auth) {\n\t\t\t\treturn Auth.authorize();\n\t\t\t}]\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').run([\"ngTableDefaults\", function(ngTableDefaults) {\n\tngTableDefaults.settings = angular.extend({}, ngTableDefaults.settings, {\n\t\tcounts: [10, 20, 50]\n\t});\n\tngTableDefaults.params = angular.extend({}, ngTableDefaults.params, {\n\t\t// init : show first page\n\t\tpage: 1,\n\t\t// init : count per page\n\t\tcount: 20\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'MENU_CATEGORY_USERS': 'Utilisateurs',\n\t\t'PAGER_RESULT': '{{ firstItemIdx }}-{{ lastItemIdx | min:total }} sur {{ total }} entrées',\n\t\t'FLAG_EN': 'Anglais',\n\t\t'FLAG_CN': 'Chinois',\n\t\t'FLAG_FR': 'Français',\n\t\t'FILEUPLOAD_DROPZONE_LABEL': 'Déposez un fichier XLS pour le téléverser ou cliquez sur la zone pour sélectionner un fichier XLS.',\n\t\t'FILEUPLOAD_DROPZONE_LABEL_DROP': 'Vous pouvez déposer le fichier.',\n\t\t'FILEUPLOAD_RESET': 'Retirer le fichier sélectionné et faire une nouvelle sélection.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'MENU_CATEGORY_USERS': 'Users',\n\t\t'PAGER_RESULT': '{{ firstItemIdx }}-{{ lastItemIdx | min:total }} on {{ total }} entries',\n\t\t'FLAG_EN': 'English',\n\t\t'FLAG_CN': 'Chinese',\n\t\t'FLAG_FR': 'French',\n\t\t'FILEUPLOAD_DROPZONE_LABEL': 'Drop a XLS file on this area to upload it or click the area to select a XLS file.',\n\t\t'FILEUPLOAD_DROPZONE_LABEL_DROP': 'You can now drop the file',\n\t\t'FILEUPLOAD_RESET': 'Remove selected file and start over.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app.personal', {\n\t\tabstract: true,\n\t\turl: '/personal',\n\t\ttemplate: '<ui-view></ui-view>'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('AccessDeniedCtrl', function() {\n\t// nothing to do\n});\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('auth', {\n\t\tabstract: true,\n\t\turl: '/auth',\n\t\ttemplate: '' + //\n\t\t\t'<ui-view></ui-view>' + //\n\t\t\t''\n\t});\n\n\t$stateProvider.state('auth.signin', {\n\t\turl: '/',\n\t\ttemplateUrl: 'adama-web/auth/signin.html',\n\t\tcontroller: 'SigninCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'SIGNIN',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.recoverPassword', {\n\t\turl: '/recoverPassword',\n\t\ttemplateUrl: 'adama-web/auth/recoverPassword.html',\n\t\tcontroller: 'RecoverPasswordCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'RECOVER',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.accessDenied', {\n\t\turl: '/accessDenied',\n\t\ttemplateUrl: 'adama-web/auth/accessDenied.html',\n\t\tcontroller: 'AccessDeniedCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCESS_DENIED',\n\t\t\tauthorities: []\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'SIGNIN': 'Identification',\n\t\t'SIGNIN_INTRO': 'Identifiez-vous pour démarrer votre session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'J\\'ai oublié mon mot de passe ...',\n\t\t'SIGNIN_USERNAME': 'Identifiant',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'L\\'identifiant est obligatoire',\n\t\t'SIGNIN_PASSWORD': 'Mot de passe',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'SIGNIN_SUBMIT': 'Démarrer la session',\n\t\t'SIGNIN_ERROR': 'Erreur d\\'authentification : identifiant ou mot de passe incorrect.',\n\t\t'RECOVER': 'Récupération de mot de passe',\n\t\t'RECOVER_INTRO': 'Saisissez votre email pour récupérer votre mot de passe',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'L\\'email est tobligatoire',\n\t\t'RECOVER_MAIL_EMAIL': 'L\\'email n\\'est pas au bon format',\n\t\t'RECOVER_SUBMIT': 'Récupérer mon mot de passe',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Retour à l\\'identificaition',\n\t\t'RECOVER_SUCCESS': 'Consultez votre email pour connaître comment réinitialiser votre mot de passe.',\n\t\t'RECOVER_ERROR': 'Erreur lors de la récupération du mot de passe.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'L\\'email n\\'existe pas',\n\t\t'ACCESS_DENIED': 'Accès interdit',\n\t\t'ACCESS_DENIED_INTRO': 'Vous n\\'avez pas suffisamment de droits d\\'accéder à cette page.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'SIGNIN': 'Signin',\n\t\t'SIGNIN_INTRO': 'Sign in to start your session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'I forgot my password ...',\n\t\t'SIGNIN_USERNAME': 'Username',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'Username is required',\n\t\t'SIGNIN_PASSWORD': 'Password',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Password is required',\n\t\t'SIGNIN_SUBMIT': 'Start session',\n\t\t'SIGNIN_ERROR': 'Authentication error : Username or password are incorrect.',\n\t\t'RECOVER': 'Recover password',\n\t\t'RECOVER_INTRO': 'Set your email to recover your password',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'Email is required',\n\t\t'RECOVER_MAIL_EMAIL': 'Email does not respect the right format',\n\t\t'RECOVER_SUBMIT': 'Retrieve my password',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Back to signin',\n\t\t'RECOVER_SUCCESS': 'Check your e-mails for details on how to reset your password.',\n\t\t'RECOVER_ERROR': 'Recovering error.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'E-Mail address isn\\'t registered! Please check and try again',\n\t\t'ACCESS_DENIED': 'Access denied',\n\t\t'ACCESS_DENIED_INTRO': 'You do not have enough privileges to access this page.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('RecoverPasswordCtrl', [\"Auth\", function(Auth) {\n\tvar ctrl = this;\n\tctrl.recover = function(userEmail) {\n\t\tctrl.recoverSuccess = false;\n\t\tctrl.recoverError = false;\n\t\tctrl.errorEmailNotExists = false;\n\t\tctrl.loading = true;\n\t\tAuth.resetPasswordInit(userEmail).then(function() {\n\t\t\tctrl.recoverSuccess = true;\n\t\t}).catch(function(response) {\n\t\t\tif (response.status === 400 && response.data === 'e-mail address not registered') {\n\t\t\t\tctrl.errorEmailNotExists = true;\n\t\t\t} else {\n\t\t\t\tctrl.recoverError = true;\n\t\t\t}\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('SigninCtrl', [\"$rootScope\", \"$state\", \"Auth\", function($rootScope, $state, Auth) {\n\tvar ctrl = this;\n\tctrl.signin = function(userName, userPassword) {\n\t\tctrl.authenticationError = false;\n\t\tAuth.login({\n\t\t\tusername: userName,\n\t\t\tpassword: userPassword\n\t\t}).then(function() {\n\t\t\tif ($rootScope.previousStateName === 'auth.signin') {\n\t\t\t\t$state.go('app.main');\n\t\t\t} else {\n\t\t\t\t$rootScope.back();\n\t\t\t}\n\t\t}).catch(function() {\n\t\t\tctrl.authenticationError = true;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'CRUD_BACK_TO_LIST': 'Retour à la liste',\n\t\t'CRUD_CANCEL': 'Annuler',\n\t\t'CRUD_CONFIRM_DELETE': 'Confirmer la suppression',\n\t\t'CRUD_CONFIRM_EDIT': 'Editer',\n\t\t'CRUD_CONFIRM_EXPORT': 'Confirmer l\\'export',\n\t\t'CRUD_CONFIRM_IMPORT': 'Confirmer l\\'import',\n\t\t'CRUD_CONFIRM_SAVE': 'Créer',\n\t\t'CRUD_DELETE_MESSAGE': 'Etes-vous certain de vouloir supprimer ?',\n\t\t'CRUD_DELETE_SUCCESS': 'Suppression avec succès.',\n\t\t'CRUD_DELETE_ERROR': 'Erreur, impossible de supprimer.',\n\t\t'CRUD_EXPORT_XLS_MESSAGE': 'Vous vous apprétez à exporter toutes les données dans une feuille de calcul Excel (XLS).',\n\t\t'CRUD_EXPORT_XLS_SUCCESS': 'Exportation avec succès.',\n\t\t'CRUD_EXPORT_XLS_ERROR': 'Erreur, impossible d\\'exporter.',\n\t\t'CRUD_IMPORT_XLS_MESSAGE': 'Sélectionnez un fichier Excel puis validez pour un import massif de données.',\n\t\t'CRUD_IMPORT_XLS_SUCCESS': 'Importation avec succès.',\n\t\t'CRUD_IMPORT_XLS_ERROR': 'Erreur, impossible d\\'importer.',\n\t\t'CRUD_NEW': 'Nouveau',\n\t\t'CRUD_MASS_IMPORT': 'Import massif',\n\t\t'CRUD_MASS_EXPORT': 'Export massif',\n\t\t'CRUD_EDIT_SUCCESS': 'Enregistrement avec succès.',\n\t\t'CRUD_NEW_SUCCESS': 'Création avec succès.',\n\t\t'CRUD_SAVE_ERROR': 'Erreur, impossible de sauvegarder.',\n\t\t'CRUD_FORM_ERROR_REQUIRED': 'Le champs est obligatoire.',\n\t\t'CRUD_FORM_ERROR_MAXLENGTH': 'Le champs ne doit pas dépasser {{ maxlength }} caractères.',\n\t\t'CRUD_FORM_ERROR_EMAIL': 'Le format est invalide.',\n\t\t'CRUD_FORM_SEARCH': 'Recherche',\n\t\t'CRUD_FORM_SEARCH_SUBMIT': 'Rechercher',\n\t\t'CRUD_ACTION_VIEW': 'Détails',\n\t\t'CRUD_ACTION_EDIT': 'Editer',\n\t\t'CRUD_ACTION_DELETE': 'Supprimer'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'CRUD_BACK_TO_LIST': 'Back to list',\n\t\t'CRUD_CANCEL': 'Cancel',\n\t\t'CRUD_CONFIRM_DELETE': 'Confirm delete',\n\t\t'CRUD_CONFIRM_EDIT': 'Edit',\n\t\t'CRUD_CONFIRM_EXPORT': 'Confirm export',\n\t\t'CRUD_CONFIRM_IMPORT': 'Confirm import',\n\t\t'CRUD_CONFIRM_SAVE': 'Save',\n\t\t'CRUD_DELETE_MESSAGE': 'Are you sure you want to delete ?',\n\t\t'CRUD_DELETE_SUCCESS': 'Delete successfull.',\n\t\t'CRUD_DELETE_ERROR': 'Error, impossible to delete.',\n\t\t'CRUD_EXPORT_XLS_MESSAGE': 'You\\'re about to export all the data into an Excel spreadsheet (XLS).',\n\t\t'CRUD_EXPORT_XLS_SUCCESS': 'Export successfull.',\n\t\t'CRUD_EXPORT_XLS_ERROR': 'Error, impossible to export.',\n\t\t'CRUD_IMPORT_XLS_MESSAGE': 'Select an Excel file and submit in order to mass import data.',\n\t\t'CRUD_IMPORT_XLS_SUCCESS': 'Import successfull.',\n\t\t'CRUD_IMPORT_XLS_ERROR': 'Error, impossible to import.',\n\t\t'CRUD_NEW': 'New',\n\t\t'CRUD_MASS_IMPORT': 'Mass import',\n\t\t'CRUD_MASS_EXPORT': 'Mass export',\n\t\t'CRUD_EDIT_SUCCESS': 'Save successfull.',\n\t\t'CRUD_NEW_SUCCESS': 'Creation successful.',\n\t\t'CRUD_SAVE_ERROR': 'Error, impossible to save.',\n\t\t'CRUD_FORM_ERROR_REQUIRED': 'This field is required.',\n\t\t'CRUD_FORM_ERROR_MAXLENGTH': 'This field cannot be longer than {{ maxlength }} characters.',\n\t\t'CRUD_FORM_ERROR_EMAIL': 'Format is invalid.',\n\t\t'CRUD_FORM_SEARCH': 'Search',\n\t\t'CRUD_FORM_SEARCH_SUBMIT': 'Search',\n\t\t'CRUD_ACTION_VIEW': 'View details',\n\t\t'CRUD_ACTION_EDIT': 'Edit',\n\t\t'CRUD_ACTION_DELETE': 'Delete'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').component('btnCreate', {\n\ttemplateUrl: 'adama-web/crud/btn-create.html',\n\ttransclude: true\n});\n","'use strict';\n\nangular.module('adama-web').component('crudActionDropdown', {\n\tbindings: {\n\t\trouteMapping: '<'\n\t},\n\ttemplateUrl: 'adama-web/crud/crud-action-dropdown.html'\n});\n","'use strict';\n\nangular.module('adama-web').controller('CrudDeleteCtrl', [\"$scope\", \"entity\", \"AlertService\", function($scope, entity, AlertService) {\n\tvar ctrl = this;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\tctrl.confirmDelete = function() {\n\t\tentity.$delete().then(function() {\n\t\t\tAlertService.success('CRUD_DELETE_SUCCESS');\n\t\t\t$scope.$close();\n\t\t}).catch(function() {\n\t\t\tAlertService.error('CRUD_DELETE_ERROR');\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudEditCtrl', [\"$scope\", \"entity\", \"EntityGenericResource\", \"AlertService\", function($scope, entity, EntityGenericResource, AlertService) {\n\tvar ctrl = this;\n\tctrl.isEdition = !!entity;\n\tctrl.entity = entity;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\tctrl.save = function() {\n\t\tvar resourceAction;\n\t\tif (ctrl.isEdition) {\n\t\t\tresourceAction = EntityGenericResource.update;\n\t\t} else {\n\t\t\tresourceAction = EntityGenericResource.save;\n\t\t}\n\t\tresourceAction(ctrl.entity).$promise.then(function(newEntity) {\n\t\t\tif (ctrl.isEdition) {\n\t\t\t\tAlertService.success('CRUD_EDIT_SUCCESS');\n\t\t\t} else {\n\t\t\t\tAlertService.success('CRUD_NEW_SUCCESS');\n\t\t\t}\n\t\t\t$scope.$close(newEntity);\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudExportXlsCtrl', [\"$scope\", \"AlertService\", \"EntityGenericResource\", function($scope, AlertService, EntityGenericResource) {\n\tvar ctrl = this;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\tctrl.loading = false;\n\tctrl.confirmExportXls = function() {\n\t\tctrl.loading = true;\n\t\tEntityGenericResource.massExportXls().$promise.then(function(newEntity) {\n\t\t\tAlertService.success('CRUD_EXPORT_XLS_SUCCESS');\n\t\t\t$scope.$close(newEntity);\n\t\t}).catch(function() {\n\t\t\tAlertService.error('CRUD_EXPORT_XLS_ERROR');\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudImportXlsCtrl', [\"$scope\", \"AlertService\", \"EntityGenericResource\", function($scope, AlertService, EntityGenericResource) {\n\tvar ctrl = this;\n\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\n\tctrl.loading = false;\n\tctrl.confirmImportXls = function() {\n\t\tvar file = ctrl.file;\n\t\tctrl.loading = true;\n\t\tEntityGenericResource.massImportXls({\n\t\t\tfile: file\n\t\t}).$promise.then(function() {\n\t\t\tAlertService.success('CRUD_IMPORT_XLS_SUCCESS');\n\t\t\t$scope.$close();\n\t\t}, function() {\n\t\t\tAlertService.error('CRUD_IMPORT_XLS_ERROR');\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudListCtrl', [\"EntityGenericResource\", \"NgTableParams\", function(EntityGenericResource, NgTableParams) {\n\t// TODO filter search results\n\tvar ctrl = this;\n\n\t// search data\n\tctrl.tableParams = new NgTableParams({}, {\n\t\ttotal: 0,\n\t\tgetData: function($defer, params) {\n\t\t\tvar sort = params.sorting();\n\t\t\tvar sortValues = [];\n\t\t\tif (!angular.equals({}, sort)) {\n\t\t\t\tfor (var key in sort) {\n\t\t\t\t\tif (sort.hasOwnProperty(key)) {\n\t\t\t\t\t\tsortValues.push(key + ',' + sort[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tEntityGenericResource.query({\n\t\t\t\tpage: params.page() - 1,\n\t\t\t\tsize: params.count(),\n\t\t\t\tsort: sortValues,\n\t\t\t\tsearch: params.filter().$\n\t\t\t}).$promise.then(function(entities) {\n\t\t\t\tparams.total(entities.$metadata.totalItems);\n\t\t\t\t$defer.resolve(entities);\n\t\t\t});\n\t\t}\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').component('crudSearchField', {\n\ttemplateUrl: 'adama-web/crud/crud-search-field.html',\n\tbindings: {\n\t\ttableParams: '<'\n\t},\n\tcontroller: function() {\n\t\tvar ctrl = this;\n\t\tctrl.search = function() {\n\t\t\tctrl.tableParams.filter({\n\t\t\t\t$: ctrl.searchValue\n\t\t\t});\n\t\t\tctrl.tableParams.page(1);\n\t\t\tctrl.tableParams.reload();\n\t\t};\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').controller('CrudViewCtrl', [\"$scope\", \"entity\", function($scope, entity) {\n\tvar ctrl = this;\n\tctrl.entity = entity;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnBackToList', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-back-to-list.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnCancel', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-cancel.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmDelete', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-confirm-delete.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmEdit', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-confirm-edit.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmExportXls', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-confirm-export-xls.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmImportXls', function() {\n\treturn {\n\t\ttemplateUrl: 'adama-web/crud/modal-btn-confirm-import-xls.html',\n\t\trestrict: 'E'\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').directive('dsAuthorities', [\"$parse\", function($parse) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar authorities = ['ROLE_ADMIN', 'ROLE_USER', 'ROLE_MANAGER', 'ROLE_WORKSHOP', 'ROLE_CUTTER', 'ROLE_SHIPPING', 'ROLE_OFFICE', 'ROLE_PRESTASHOP'];\n\t\t\t$parse(attrs.data).assign(scope, authorities);\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('dsLanguage', [\"$parse\", \"language\", function($parse, language) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tlanguage.getAll().then(function(languages) {\n\t\t\t\t$parse(attrs.data).assign(scope, languages);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('dsPrincipalIdentity', [\"$parse\", \"Principal\", function($parse, Principal) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tPrincipal.identity().then(function(account) {\n\t\t\t\t$parse(attrs.data).assign(scope, account);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('layoutFix', [\"$rootScope\", function($rootScope) {\n\treturn {\n\t\tscope: {\n\t\t\taddEvent: '='\n\t\t},\n\t\trestrict: 'E',\n\t\tlink: function postLink(scope) {\n\t\t\tif (scope.addEvent) {\n\t\t\t\t$rootScope.$on('$viewContentLoaded', function() {\n\t\t\t\t\t$.AdminLTE.layout.fix();\n\t\t\t\t});\n\t\t\t}\n\t\t\t$.AdminLTE.layout.fix();\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('lazyControl', [\"$rootScope\", \"$filter\", function($rootScope, $filter) {\n\tvar translateFilter = $filter('translate');\n\treturn {\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tvar id, additionalLabelAttributes, labelScreenOnly, labelContainer;\n\t\t\tif (attrs.type === 'checkbox') {\n\t\t\t\telement.wrap('<div class=\"checkbox\"><label></label></div>');\n\t\t\t\telement.after('<span></span>');\n\t\t\t\tlabelContainer = element.next().eq(0);\n\t\t\t} else {\n\t\t\t\tid = attrs.ngModel.replace(/\\./g, '_');\n\t\t\t\tadditionalLabelAttributes = ' for=\"' + id + '\"';\n\t\t\t\tlabelScreenOnly = attrs.labelScreenOnly || false;\n\t\t\t\tif (labelScreenOnly) {\n\t\t\t\t\tadditionalLabelAttributes += ' class=\"sr-only\"';\n\t\t\t\t}\n\t\t\t\telement.attr('id', id);\n\t\t\t\telement.addClass('form-control');\n\t\t\t\telement.wrap('<div class=\"form-group\"></div>');\n\t\t\t\telement.before('<label' + additionalLabelAttributes + '></label>');\n\t\t\t\tlabelContainer = element.prev().eq(0);\n\t\t\t}\n\t\t\tlabelContainer.html(translateFilter(attrs.lazyControlLabelKey));\n\t\t\t$rootScope.$on('$translateChangeSuccess', function() {\n\t\t\t\tlabelContainer.html(translateFilter(attrs.lazyControlLabelKey));\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').filter('min', function() {\n\treturn Math.min;\n});\n","'use strict';\n\nangular.module('adama-web').run([\"$rootScope\", \"$state\", \"Principal\", \"Auth\", function($rootScope, $state, Principal, Auth) {\n\t$rootScope.$on('$stateChangeStart', function(event, toState, toStateParams) {\n\t\t$rootScope.toState = toState;\n\t\t$rootScope.toStateParams = toStateParams;\n\t\tif (Principal.isIdentityResolved()) {\n\t\t\tAuth.authorize();\n\t\t}\n\t});\n\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n\t\t// Remember previous state unless we've been redirected to login or we've just\n\t\t// reset the state memory after logout. If we're redirected to login, our\n\t\t// previousState is already set in the authExpiredInterceptor. If we're going\n\t\t// to login directly, we don't want to be sent to some previous state anyway\n\t\tif (toState.name !== 'auth.signin' && $rootScope.previousStateName) {\n\t\t\t$rootScope.previousStateName = fromState.name;\n\t\t\t$rootScope.previousStateParams = fromParams;\n\t\t}\n\t});\n\n\t$rootScope.back = function() {\n\t\t// If previous state is 'activate' or do not exist go to 'home'\n\t\tif ($state.get($rootScope.previousStateName) === null) {\n\t\t\t$state.go('app.main');\n\t\t} else {\n\t\t\t$state.go($rootScope.previousStateName, $rootScope.previousStateParams);\n\t\t}\n\t};\n}]);\n\nangular.module('adama-web').config([\"$httpProvider\", function($httpProvider) {\n\t$httpProvider.interceptors.push('errorHandlerInterceptor');\n\t$httpProvider.interceptors.push('authExpiredInterceptor');\n\t$httpProvider.interceptors.push('authInterceptor');\n\t$httpProvider.interceptors.push('notificationInterceptor');\n}]);\n","'use strict';\n\nangular.module('adama-web').constant('jHipsterConstant', {\n\tapiBase: 'http://localhost:13337/',\n\tappModule: 'mySuperApp'\n});\n","'use strict';\n\nangular.module('adama-web').factory('jHipsterResourceConfig', [\"ParseLinks\", \"pdfService\", function(ParseLinks, pdfService) {\n\treturn {\n\t\t'query': {\n\t\t\tmethod: 'GET',\n\t\t\tisArray: true,\n\t\t\ttransformResponse: function(data, headers, status) {\n\t\t\t\tdata = angular.fromJson(data);\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tdata.$metadata = {\n\t\t\t\t\t\tlinks: ParseLinks.parse(headers('link')),\n\t\t\t\t\t\ttotalItems: headers('X-Total-Count')\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t},\n\t\t\tinterceptor: {\n\t\t\t\tresponse: function(response) {\n\t\t\t\t\tresponse.resource.$metadata = response.data.$metadata;\n\t\t\t\t\treturn response.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'get': {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\t'save': {\n\t\t\tmethod: 'POST'\n\t\t},\n\t\t'update': {\n\t\t\tmethod: 'PUT'\n\t\t},\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tid: '@id'\n\t\t\t}\n\t\t},\n\t\t'massExportXls': {\n\t\t\tmethod: 'GET',\n\t\t\tresponseType: 'arraybuffer',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n\t\t\t},\n\t\t\ttransformResponse: pdfService.transformResponseToPdf\n\t\t},\n\t\t'massImportXls': {\n\t\t\tmethod: 'POST',\n\t\t\tparams: {\n\t\t\t\tmethod: 'import-xls'\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\t'Content-Type': undefined\n\t\t\t},\n\t\t\ttransformRequest: function(data) {\n\t\t\t\tvar formData = new window.FormData();\n\t\t\t\tvar file = data.file;\n\t\t\t\tformData.append('file', file, file.name);\n\t\t\t\treturn formData;\n\t\t\t}\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('User', [\"$resource\", \"jHipsterConstant\", \"jHipsterResourceConfig\", function($resource, jHipsterConstant, jHipsterResourceConfig) {\n\tvar config = angular.extend({}, jHipsterResourceConfig, {\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tlogin: '@login'\n\t\t\t}\n\t\t}\n\t});\n\treturn $resource(jHipsterConstant.apiBase + 'api/users/:login', {}, config);\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('appGlobal', [\"$rootScope\", \"$translate\", function($rootScope, $translate) {\n\tvar api = {};\n\tapi.setPageTitle = function(pageTitle) {\n\t\t$translate(pageTitle).then(function(i18nPageTitle) {\n\t\t\t$rootScope.pageTitle = i18nPageTitle;\n\t\t});\n\t};\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').provider('language', function() {\n\tvar languages = ['en', 'fr'];\n\tvar selectorData = [{\n\t\tcode: 'en',\n\t\tlabelKey: 'FLAG_EN',\n\t\tcssCLass: 'us'\n\t}, {\n\t\tcode: 'fr',\n\t\tlabelKey: 'FLAG_FR',\n\t\tcssCLass: 'fr'\n\t}];\n\n\tthis.setLanguages = function(newLanguages) {\n\t\tlanguages = newLanguages;\n\t};\n\n\tthis.setSelectorData = function(newSelectorData) {\n\t\tselectorData = newSelectorData;\n\t};\n\n\tthis.$get = [\"$q\", \"$http\", \"$translate\", function($q, $http, $translate) {\n\t\tvar api = {};\n\n\t\tapi.getCurrent = function() {\n\t\t\tvar language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\t\t\tif (angular.isUndefined(language)) {\n\t\t\t\tlanguage = 'en';\n\t\t\t}\n\t\t\treturn $q.when(language);\n\t\t};\n\n\t\tapi.getAll = function() {\n\t\t\treturn $q.when(languages);\n\t\t};\n\n\t\tapi.getSelectorData = function() {\n\t\t\treturn $q.when(selectorData);\n\t\t};\n\n\t\treturn api;\n\t}];\n});\n","'use strict';\n\nangular.module('adama-web').factory('pdfService', [\"FileSaver\", function(FileSaver) {\n\tvar api = {};\n\n\tapi.transformResponseToPdf = function(data, headersGetter, status) {\n\t\tif (status === 200) {\n\t\t\tvar dataBlob = new Blob([data], {\n\t\t\t\ttype: 'application/pdf'\n\t\t\t});\n\t\t\tvar contentDisposition = headersGetter('Content-Disposition');\n\t\t\tvar filename;\n\t\t\tif (contentDisposition) {\n\t\t\t\tfilename = contentDisposition.substring('attachment;filename = '.length);\n\t\t\t}\n\t\t\tif (!filename) {\n\t\t\t\tfilename = 'file.pdf';\n\t\t\t}\n\t\t\tFileSaver.saveAs(dataBlob, filename);\n\t\t}\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app.user', {\n\t\turl: '/users',\n\t\ttemplateUrl: 'adama-web/user/user-list.html',\n\t\tcontroller: 'CrudListCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tresolve: {\n\t\t\tEntityGenericResource: [\"User\", function(User) {\n\t\t\t\treturn User;\n\t\t\t}]\n\t\t},\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_LIST',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\tvar openModal = function($state, $uibModal, $stateParams, controllerName, templateName) {\n\t\tvar resolveEntity;\n\t\tif ($stateParams) {\n\t\t\tresolveEntity = /* @ngInject */ [\"User\", function(User) {\n\t\t\t\treturn User.get({\n\t\t\t\t\tlogin: $stateParams.login\n\t\t\t\t}).$promise;\n\t\t\t}];\n\t\t}\n\t\t$uibModal.open({\n\t\t\ttemplateUrl: 'adama-web/user/' + templateName,\n\t\t\tresolve: {\n\t\t\t\tentity: resolveEntity,\n\t\t\t\tEntityGenericResource: [\"User\", function(User) {\n\t\t\t\t\treturn User;\n\t\t\t\t}]\n\t\t\t},\n\t\t\tcontroller: controllerName + ' as ctrl'\n\t\t}).result.then(function() {\n\t\t\t$state.go('^', {}, {\n\t\t\t\treload: true\n\t\t\t});\n\t\t}).catch(function() {\n\t\t\t$state.go('^');\n\t\t});\n\t};\n\n\t$stateProvider.state('app.user.edit', {\n\t\turl: '/edit/:login',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"$stateParams\", function($state, $uibModal, $stateParams) {\n\t\t\topenModal($state, $uibModal, $stateParams, 'CrudEditCtrl', 'user-edit.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_EDIT',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.create', {\n\t\turl: '/new',\n\t\tonEnter: [\"$state\", \"$uibModal\", function($state, $uibModal) {\n\t\t\topenModal($state, $uibModal, undefined, 'CrudEditCtrl', 'user-edit.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_NEW',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.view', {\n\t\turl: '/view/:login',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"$stateParams\", function($state, $uibModal, $stateParams) {\n\t\t\topenModal($state, $uibModal, $stateParams, 'CrudViewCtrl', 'user-view.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_VIEW',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.delete', {\n\t\turl: '/delete/:login',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"$stateParams\", function($state, $uibModal, $stateParams) {\n\t\t\topenModal($state, $uibModal, $stateParams, 'CrudDeleteCtrl', 'user-delete.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_DELETE',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.importXls', {\n\t\turl: '/import-xls',\n\t\tonEnter: [\"$state\", \"$uibModal\", function($state, $uibModal) {\n\t\t\topenModal($state, $uibModal, undefined, 'CrudImportXlsCtrl', 'user-import-xls.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_IMPORT_XLS',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.exportXls', {\n\t\turl: '/export-xls',\n\t\tonEnter: [\"$state\", \"$uibModal\", function($state, $uibModal) {\n\t\t\topenModal($state, $uibModal, undefined, 'CrudExportXlsCtrl', 'user-export-xls.html');\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_EXPORT_XLS',\n\t\t\tauthorities: ['ROLE_MANAGER', 'ROLE_ADMIN']\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\terror: {\n\t\t\tuserexists: 'Login déjà utilisé !',\n\t\t\temailexists: 'E-mail déjà utilisé !'\n\t\t},\n\t\t'USER_MENU': 'Utilisateurs',\n\t\t'USER_TITLE_DELETE': 'Suppression d\\'un utilisateur',\n\t\t'USER_TITLE_VIEW': 'Détails d\\'un utilisateur',\n\t\t'USER_TITLE_LIST': 'Liste des utilisateurs',\n\t\t'USER_TITLE_EDIT': 'Editer un utilisateur',\n\t\t'USER_TITLE_NEW': 'Créer un utilisateur',\n\t\t'USER_TITLE_IMPORT_XLS': 'Importer en masse des utilisateurs',\n\t\t'USER_TITLE_EXPORT_XLS': 'Exporter en masse des utilisateurs',\n\n\t\t'USER_FORM_LOGIN': 'Identifiant',\n\t\t'USER_FORM_FIRSTNAME': 'Prénom',\n\t\t'USER_FORM_LASTNAME': 'Nom de famille',\n\t\t'USER_FORM_EMAIL': 'Email',\n\t\t'USER_FORM_LANGUAGE': 'Langue',\n\t\t'USER_FORM_AUTHORITIES': 'Rôles',\n\n\t\t'USER_LIST_LOGIN': 'Identifiant',\n\t\t'USER_LIST_MAIL': 'Email',\n\t\t'USER_LIST_LANGUAGE': 'Langue',\n\t\t'USER_LIST_AUTHORITIES': 'Rôle'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\terror: {\n\t\t\tuserexists: 'Login name already used!',\n\t\t\temailexists: 'E-mail is already in use!'\n\t\t},\n\t\t'USER_MENU': 'Users',\n\t\t'USER_TITLE_DELETE': 'User delete',\n\t\t'USER_TITLE_VIEW': 'User details',\n\t\t'USER_TITLE_LIST': 'User list',\n\t\t'USER_TITLE_EDIT': 'User edition',\n\t\t'USER_TITLE_NEW': 'User creation',\n\t\t'USER_TITLE_IMPORT_XLS': 'Users mass import',\n\t\t'USER_TITLE_EXPORT_XLS': 'Users mass export',\n\n\t\t'USER_FORM_LOGIN': 'Login',\n\t\t'USER_FORM_FIRSTNAME': 'Firstname',\n\t\t'USER_FORM_LASTNAME': 'Lastname',\n\t\t'USER_FORM_EMAIL': 'Email',\n\t\t'USER_FORM_LANGUAGE': 'Language',\n\t\t'USER_FORM_AUTHORITIES': 'Authorities',\n\n\t\t'USER_LIST_LOGIN': 'Login',\n\t\t'USER_LIST_MAIL': 'Email',\n\t\t'USER_LIST_LANGUAGE': 'Language',\n\t\t'USER_LIST_AUTHORITIES': 'Authorities'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app.personal.password', {\n\t\turl: '/password',\n\t\ttemplateUrl: 'adama-web/account/password/password.html',\n\t\tcontroller: 'PasswordCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCOUNT_PASSWORD'\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'ACCOUNT_PASSWORD': 'Modifier mon mot de passe',\n\t\t'ACCOUNT_PASSWORD_TITLE': 'Modifier mon mot de passe',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD': 'Mot de passe',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_PLACEHOLDER': 'Mot de passe ?',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MINLENGTH': 'Le mot de passe doit être composé d\\'au moins 5 caractères.',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MAXLENGTH': 'Le mot de passe doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD': 'Confirmation du mot de passe',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PLACEHOLDER': 'Confirmation du mot de passe ?',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_REQUIRED': 'La confirmation du mot de passe est obligatoire',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MINLENGTH': 'La confirmation du mot de passe doit être composé d\\'au moins 5 caractères.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MAXLENGTH': 'La confirmation du mot de passe doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PATTERN': 'Les mots de passe ne sont pas égaux.',\n\t\t'ACCOUNT_PASSWORD_SUBMIT': 'Enregistrer',\n\t\t'ACCOUNT_PASSWORD_SAVE_SUCCESS': 'Le mot de passe a été changé avec succès.',\n\t\t'ACCOUNT_PASSWORD_SAVE_ERROR': 'Le mot de passe n\\'a pu être changé.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'ACCOUNT_PASSWORD': 'Change my password',\n\t\t'ACCOUNT_PASSWORD_TITLE': 'Change my password',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD': 'Password',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_PLACEHOLDER': 'Password ?',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_REQUIRED': 'Your password is required.',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MINLENGTH': 'Your password is required to be at least 5 characters.',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MAXLENGTH': 'Your password cannot be longer than 50 characters.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD': 'Password confirmation',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PLACEHOLDER': 'Password confirmation ?',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_REQUIRED': 'Your confirmation password is required.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MINLENGTH': 'Your confirmation password is required to be at least 5 characters.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MAXLENGTH': 'Your confirmation password cannot be longer than 50 characters.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PATTERN': 'Password and confirmation do not match.',\n\t\t'ACCOUNT_PASSWORD_SUBMIT': 'Save',\n\t\t'ACCOUNT_PASSWORD_SAVE_SUCCESS': 'Password successfully changed.',\n\t\t'ACCOUNT_PASSWORD_SAVE_ERROR': 'Password could not be changed.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('PasswordCtrl', [\"Auth\", \"Principal\", \"AlertService\", function(Auth, Principal, AlertService) {\n\tvar ctrl = this;\n\tPrincipal.identity().then(function(account) {\n\t\tctrl.account = account;\n\t});\n\tctrl.changePassword = function() {\n\t\tAuth.changePassword(ctrl.password).then(function() {\n\t\t\tAlertService.success('ACCOUNT_PASSWORD_SAVE_SUCCESS');\n\t\t}).catch(function() {\n\t\t\tAlertService.error('ACCOUNT_PASSWORD_SAVE_ERROR');\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app.personal.settings', {\n\t\turl: '/settings',\n\t\ttemplateUrl: 'adama-web/account/settings/settings.html',\n\t\tcontroller: 'SettingsCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCOUNT_SETTINGS'\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'ACCOUNT_SETTINGS': 'Mon profil',\n\t\t'ACCOUNT_SETTINGS_TITLE': 'Mon profil',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME': 'Prénom',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_PLACEHOLDER': 'Prénom ?',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_REQUIRED': 'Votre prénom est obligatoire.',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_MAXLENGTH': 'Votre prénom doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME': 'Nom de famille',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_PLACEHOLDER': 'Nom de famille ?',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_REQUIRED': 'Votre nom de famille est obligatoire.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_MAXLENGTH': 'Votre nom de famille doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_SETTINGS_EMAIL': 'Email',\n\t\t'ACCOUNT_SETTINGS_EMAIL_PLACEHOLDER': 'Email ?',\n\t\t'ACCOUNT_SETTINGS_EMAIL_REQUIRED': 'Votre email est obligatoire.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_EMAIL': 'Votre email est invalide.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_MAXLENGTH': 'Votre email doit être composé d\\'au plus 100 caractères.',\n\t\t'ACCOUNT_SETTINGS_LANGUAGE': 'Langue',\n\t\t'ACCOUNT_SETTINGS_SUBMIT': 'Enregistrer',\n\t\t'ACCOUNT_SETTINGS_SAVE_SUCCESS': 'Enregistrement du profil avec succès.',\n\t\t'ACCOUNT_SETTINGS_SAVE_ERROR': 'Impossible d\\'enregistrer le profil.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'ACCOUNT_SETTINGS': 'My profile',\n\t\t'ACCOUNT_SETTINGS_TITLE': 'My profile',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME': 'First name',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_PLACEHOLDER': 'First name ?',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_REQUIRED': 'Your first name is required.',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_MAXLENGTH': 'Your first name cannot be longer than 50 characters.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME': 'Last name',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_PLACEHOLDER': 'Last name ?',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_REQUIRED': 'Your last name is required.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_MAXLENGTH': 'Your last name cannot be longer than 50 characters.',\n\t\t'ACCOUNT_SETTINGS_EMAIL': 'Email',\n\t\t'ACCOUNT_SETTINGS_EMAIL_PLACEHOLDER': 'Email ?',\n\t\t'ACCOUNT_SETTINGS_EMAIL_REQUIRED': 'Your e-mail is required.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_EMAIL': 'Your e-mail is invalid.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_MAXLENGTH': 'Your e-mail cannot be longer than 100 characters.',\n\t\t'ACCOUNT_SETTINGS_LANGUAGE': 'Language',\n\t\t'ACCOUNT_SETTINGS_SUBMIT': 'Save',\n\t\t'ACCOUNT_SETTINGS_SAVE_SUCCESS': 'Profile successfully saved.',\n\t\t'ACCOUNT_SETTINGS_SAVE_ERROR': 'Profile could not be saved.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('SettingsCtrl', [\"Principal\", \"Auth\", \"language\", \"AlertService\", \"$translate\", function(Principal, Auth, language, AlertService, $translate) {\n\tvar ctrl = this;\n\tvar copyAccount = function(account) {\n\t\t// Store the \"settings account\" in a separate variable, and not in the\n\t\t// shared \"account\" variable.\n\t\treturn {\n\t\t\tactivated: account.activated,\n\t\t\temail: account.email,\n\t\t\tfirstName: account.firstName,\n\t\t\tlangKey: account.langKey,\n\t\t\tlastName: account.lastName,\n\t\t\tlogin: account.login\n\t\t};\n\t};\n\tPrincipal.identity().then(function(account) {\n\t\tctrl.settingsAccount = copyAccount(account);\n\t});\n\tctrl.save = function() {\n\t\tAuth.updateAccount(ctrl.settingsAccount).then(function() {\n\t\t\treturn Principal.identity(true).then(function(account) {\n\t\t\t\tctrl.settingsAccount = copyAccount(account);\n\t\t\t\tlanguage.getCurrent().then(function(current) {\n\t\t\t\t\tif (ctrl.settingsAccount.langKey !== current) {\n\t\t\t\t\t\t$translate.use(ctrl.settingsAccount.langKey);\n\t\t\t\t\t}\n\t\t\t\t\tAlertService.success('ACCOUNT_SETTINGS_SAVE_SUCCESS');\n\t\t\t\t});\n\t\t\t});\n\t\t}).catch(function() {\n\t\t\tAlertService.error('ACCOUNT_SETTINGS_SAVE_ERROR');\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').component('arkFooter', {\n\ttemplateUrl: 'adama-web/ark/ark-footer/ark-footer.html'\n});\n","'use strict';\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'TOGGLE_NAVIGATION': 'Navigation',\n\t\t'USERINFO_PROFILE': 'Profil',\n\t\t'USERINFO_PASSWORD': 'Mot de passe',\n\t\t'USERINFO_SIGNOUT': 'Déconnection'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'TOGGLE_NAVIGATION': 'Toggle navigation',\n\t\t'USERINFO_PROFILE': 'Profile',\n\t\t'USERINFO_PASSWORD': 'Password',\n\t\t'USERINFO_SIGNOUT': 'Sign out'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').component('arkHeader', {\n\ttemplateUrl: 'adama-web/ark/ark-header/ark-header.html'\n});\n","'use strict';\n\nangular.module('adama-web').component('languageSelector', {\n\ttemplateUrl: 'adama-web/ark/language-selector/language-selector.html',\n\tcontroller: [\"$rootScope\", \"$translate\", \"language\", function($rootScope, $translate, language) {\n\t\tvar ctrl = this;\n\t\tctrl.changeLanguage = function(key) {\n\t\t\t$translate.use(key);\n\t\t};\n\t\tvar updateCurrentLanguage = function() {\n\t\t\tctrl.currentLanguage = $translate.use();\n\t\t\tif (ctrl.currentLanguage.indexOf('en') === 0) {\n\t\t\t\tctrl.currentLanguage = 'us';\n\t\t\t}\n\t\t};\n\t\t$rootScope.$on('$translateChangeSuccess', function() {\n\t\t\tupdateCurrentLanguage();\n\t\t});\n\t\tupdateCurrentLanguage();\n\t\tlanguage.getSelectorData().then(function(data) {\n\t\t\tctrl.languages = data;\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').component('mainNavigation', {\n\ttemplateUrl: 'adama-web/ark/menu/main-navigation.html',\n\tcontroller: [\"$rootScope\", \"$filter\", \"menuService\", function($rootScope, $filter, menuService) {\n\t\tvar ctrl = this;\n\t\tvar addMenuEntry, addMenuEntries;\n\t\taddMenuEntry = function(input, item) {\n\t\t\tvar copy = angular.copy(item);\n\t\t\tcopy.subItems = [];\n\t\t\taddMenuEntries(copy.subItems, item.subItems);\n\t\t\tcopy.label = $filter('translate')(copy.label);\n\t\t\tinput.push(copy);\n\t\t};\n\t\taddMenuEntries = function(input, menuEntries) {\n\t\t\tvar i, l, menuEntry;\n\t\t\tif (menuEntries && menuEntries.length) {\n\t\t\t\tfor (i = 0, l = menuEntries.length; i < l; i++) {\n\t\t\t\t\tmenuEntry = menuEntries[i];\n\t\t\t\t\taddMenuEntry(input, menuEntry);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tvar updateMenuEntries = function() {\n\t\t\tctrl.menuItems = [];\n\t\t\tvar items = menuService.getItems();\n\t\t\taddMenuEntries(ctrl.menuItems, items);\n\t\t};\n\t\tupdateMenuEntries();\n\t\t$rootScope.$on('$translateChangeSuccess', function() {\n\t\t\tupdateMenuEntries();\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').provider('menuService', function() {\n\tvar menuItems = [];\n\n\tthis.addItem = function(newItem) {\n\t\tif (newItem.position !== 'right') {\n\t\t\tnewItem.position = 'left';\n\t\t}\n\t\tmenuItems.push(newItem);\n\t};\n\n\tthis.$get = function() {\n\t\tvar api = {};\n\t\tapi.getItems = function() {\n\t\t\treturn menuItems;\n\t\t};\n\t\treturn api;\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').component('selectAll', {\n\ttemplateUrl: 'adama-web/ark/select-all/select-all.html',\n\tbindings: {\n\t\tentityList: '<'\n\t},\n\tcontroller: function() {\n\t\tvar ctrl = this;\n\t\tctrl.isAllChecked = false;\n\t\tctrl.checkAll = function() {\n\t\t\tctrl.isAllChecked = !ctrl.isAllChecked;\n\t\t\tangular.forEach(ctrl.entityList, function(entity) {\n\t\t\t\tentity.isSelected = ctrl.isAllChecked;\n\t\t\t});\n\t\t};\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').component('userInfo', {\n\ttemplateUrl: 'adama-web/ark/user-info/user-info.html',\n\tcontroller: [\"$rootScope\", \"$state\", \"Auth\", function($rootScope, $state, Auth) {\n\t\tvar ctrl = this;\n\t\tctrl.signout = function() {\n\t\t\tAuth.logout();\n\t\t\t$state.go('auth.signin');\n\t\t};\n\t\t$rootScope.$on('auth.updateAccount', function(event, data) {\n\t\t\tctrl.account = data.account;\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').component('viewAttribute', {\n\ttemplateUrl: 'adama-web/ark/view-attribute/view-attribute.html',\n\ttransclude: true,\n\tbindings: {\n\t\tlabelKey: '@',\n\t\tvalue: '<',\n\t\tvalueKey: '@value'\n\t},\n\tcontroller: function() {}\n});\n","'use strict';\n\nangular.module('adama-web')\n\t.directive('jhAlert', [\"AlertService\", function(AlertService) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: '<div class=\"content-wrapper\" ng-cloak ng-if=\"alerts && alerts.length\">' +\n\t\t\t\t'<div class=\"box-body\">' +\n\t\t\t\t'<div ng-repeat=\"alert in alerts\" class=\"alert alert-dismissible\" ng-class=\"\\'alert-\\' + alert.type\">' +\n\t\t\t\t'<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>' +\n\t\t\t\t'{{ alert.msg }}' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>',\n\t\t\tcontroller: ['$scope',\n\t\t\t\tfunction($scope) {\n\t\t\t\t\t$scope.alerts = AlertService.get();\n\t\t\t\t\t$scope.$on('$destroy', function() {\n\t\t\t\t\t\t$scope.alerts = [];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}])\n\t.directive('jhAlertError', [\"AlertService\", \"$rootScope\", \"$translate\", function(AlertService, $rootScope, $translate) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: '<div class=\"alerts\" ng-if=\"alerts && alerts.length\">' +\n\t\t\t\t'<div ng-repeat=\"alert in alerts\" class=\"alert alert-dismissible\" ng-class=\"\\'alert-\\' + alert.type\">' +\n\t\t\t\t'<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>' +\n\t\t\t\t'{{ alert.msg }}' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>',\n\t\t\tcontroller: ['$scope', 'jHipsterConstant',\n\t\t\t\tfunction($scope, jHipsterConstant) {\n\n\t\t\t\t\t$scope.alerts = [];\n\n\t\t\t\t\tvar addErrorAlert = function(message, key, data) {\n\t\t\t\t\t\tkey = key && key !== null ? key : message;\n\t\t\t\t\t\t$scope.alerts.push(\n\t\t\t\t\t\t\tAlertService.add({\n\t\t\t\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\t\t\t\tmsg: key,\n\t\t\t\t\t\t\t\t\tparams: data,\n\t\t\t\t\t\t\t\t\ttimeout: 5000,\n\t\t\t\t\t\t\t\t\ttoast: AlertService.isToast(),\n\t\t\t\t\t\t\t\t\tscoped: true\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t$scope.alerts\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tvar cleanHttpErrorListener = $rootScope.$on(jHipsterConstant.appModule + '.httpError', function(event, httpResponse) {\n\t\t\t\t\t\tvar i;\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tswitch (httpResponse.status) {\n\t\t\t\t\t\t\t// connection refused, server not reachable\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\taddErrorAlert('Server not reachable', 'error.server.not.reachable');\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 400:\n\t\t\t\t\t\t\t\tvar errorHeader = httpResponse.headers('X-' + jHipsterConstant.appModule + '-error');\n\t\t\t\t\t\t\t\tvar entityKey = httpResponse.headers('X-' + jHipsterConstant.appModule + '-params');\n\t\t\t\t\t\t\t\tif (errorHeader) {\n\t\t\t\t\t\t\t\t\tvar entityName = $translate.instant('global.menu.entities.' + entityKey);\n\t\t\t\t\t\t\t\t\taddErrorAlert(errorHeader, errorHeader, {\n\t\t\t\t\t\t\t\t\t\tentityName: entityName\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else if (httpResponse.data && httpResponse.data.fieldErrors) {\n\t\t\t\t\t\t\t\t\tfor (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n\t\t\t\t\t\t\t\t\t\tvar fieldError = httpResponse.data.fieldErrors[i];\n\t\t\t\t\t\t\t\t\t\t// convert 'something[14].other[4].id'\n\t\t\t\t\t\t\t\t\t\t// to 'something[].other[].id' so\n\t\t\t\t\t\t\t\t\t\t// translations can be written to it\n\t\t\t\t\t\t\t\t\t\tvar convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n\t\t\t\t\t\t\t\t\t\tvar fieldName = $translate.instant(jHipsterConstant.appModule + '.' + fieldError.objectName + '.' + convertedField);\n\t\t\t\t\t\t\t\t\t\taddErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {\n\t\t\t\t\t\t\t\t\t\t\tfieldName: fieldName\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (httpResponse.data && httpResponse.data.message) {\n\t\t\t\t\t\t\t\t\taddErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\taddErrorAlert(httpResponse.data);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tif (httpResponse.data && httpResponse.data.message) {\n\t\t\t\t\t\t\t\t\taddErrorAlert(httpResponse.data.message);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\taddErrorAlert(JSON.stringify(httpResponse));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$scope.$on('$destroy', function() {\n\t\t\t\t\t\tif (cleanHttpErrorListener !== undefined && cleanHttpErrorListener !== null) {\n\t\t\t\t\t\t\tcleanHttpErrorListener();\n\t\t\t\t\t\t\t$scope.alerts = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}]);\n","'use strict';\n\nangular.module('adama-web')\n\t.provider('AlertService', function() {\n\t\tvar toast = false;\n\n\t\tthis.$get = ['$timeout', '$sce', '$translate', function($timeout, $sce, $translate) {\n\n\t\t\tvar alertId = 0; // unique id for each alert. Starts from 0.\n\t\t\tvar alerts = [];\n\t\t\tvar timeout = 5000; // default timeout\n\n\t\t\tvar isToast = function() {\n\t\t\t\treturn toast;\n\t\t\t};\n\n\t\t\tvar clear = function() {\n\t\t\t\talerts = [];\n\t\t\t};\n\n\t\t\tvar get = function() {\n\t\t\t\treturn alerts;\n\t\t\t};\n\n\t\t\tvar closeAlertByIndex = function(index, thisAlerts) {\n\t\t\t\treturn thisAlerts.splice(index, 1);\n\t\t\t};\n\n\t\t\tvar closeAlert = function(id, extAlerts) {\n\t\t\t\tvar thisAlerts = extAlerts ? extAlerts : alerts;\n\t\t\t\treturn closeAlertByIndex(thisAlerts.map(function(e) {\n\t\t\t\t\treturn e.id;\n\t\t\t\t}).indexOf(id), thisAlerts);\n\t\t\t};\n\n\t\t\tvar factory = function(alertOptions) {\n\t\t\t\tvar alert = {\n\t\t\t\t\ttype: alertOptions.type,\n\t\t\t\t\tmsg: $sce.trustAsHtml(alertOptions.msg),\n\t\t\t\t\tid: alertOptions.alertId,\n\t\t\t\t\ttimeout: alertOptions.timeout,\n\t\t\t\t\ttoast: alertOptions.toast,\n\t\t\t\t\tposition: alertOptions.position ? alertOptions.position : 'top right',\n\t\t\t\t\tscoped: alertOptions.scoped,\n\t\t\t\t\tclose: function(alerts) {\n\t\t\t\t\t\treturn closeAlert(this.id, alerts);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (!alert.scoped) {\n\t\t\t\t\talerts.push(alert);\n\t\t\t\t}\n\t\t\t\treturn alert;\n\t\t\t};\n\n\t\t\tvar addAlert = function(alertOptions, extAlerts) {\n\t\t\t\talertOptions.alertId = alertId++;\n\t\t\t\talertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n\t\t\t\tvar alert = factory(alertOptions);\n\t\t\t\tif (alertOptions.timeout && alertOptions.timeout > 0) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\tcloseAlert(alertOptions.alertId, extAlerts);\n\t\t\t\t\t}, alertOptions.timeout);\n\t\t\t\t}\n\t\t\t\treturn alert;\n\t\t\t};\n\n\t\t\tvar success = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar error = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'danger',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar warning = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar info = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\tfactory: factory,\n\t\t\t\tisToast: isToast,\n\t\t\t\tadd: addAlert,\n\t\t\t\tcloseAlert: closeAlert,\n\t\t\t\tcloseAlertByIndex: closeAlertByIndex,\n\t\t\t\tclear: clear,\n\t\t\t\tget: get,\n\t\t\t\tsuccess: success,\n\t\t\t\terror: error,\n\t\t\t\tinfo: info,\n\t\t\t\twarning: warning\n\t\t\t};\n\t\t}];\n\n\t\tthis.showAsToast = function(isToast) {\n\t\t\ttoast = isToast;\n\t\t};\n\n\t});\n","'use strict';\n\nangular.module('adama-web')\n\t.factory('Auth', [\"$rootScope\", \"$state\", \"$q\", \"$translate\", \"Principal\", \"AuthServerProvider\", \"Account\", \"Password\", \"PasswordResetInit\", \"PasswordResetFinish\", function Auth($rootScope, $state, $q, $translate, Principal, AuthServerProvider, Account, Password, PasswordResetInit, PasswordResetFinish) {\n\t\treturn {\n\t\t\tlogin: function(credentials, callback) {\n\t\t\t\tvar cb = callback || angular.noop;\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tAuthServerProvider.login(credentials).then(function(data) {\n\t\t\t\t\t// retrieve the logged account information\n\t\t\t\t\tPrincipal.identity(true).then(function(account) {\n\t\t\t\t\t\t// After the login the language will be changed to\n\t\t\t\t\t\t// the language selected by the user during his registration\n\t\t\t\t\t\t$translate.use(account.langKey);\n\t\t\t\t\t\tdeferred.resolve(data);\n\t\t\t\t\t});\n\t\t\t\t\treturn cb();\n\t\t\t\t}).catch(function(err) {\n\t\t\t\t\tthis.logout();\n\t\t\t\t\tdeferred.reject(err);\n\t\t\t\t\treturn cb(err);\n\t\t\t\t}.bind(this));\n\n\t\t\t\treturn deferred.promise;\n\t\t\t},\n\n\t\t\tlogout: function() {\n\t\t\t\tAuthServerProvider.logout();\n\t\t\t\tPrincipal.authenticate(null);\n\t\t\t\t// Reset state memory\n\t\t\t\t$rootScope.previousStateName = undefined;\n\t\t\t\t$rootScope.previousStateNameParams = undefined;\n\t\t\t},\n\n\t\t\tauthorize: function(force) {\n\t\t\t\treturn Principal.identity(force)\n\t\t\t\t\t.then(function() {\n\t\t\t\t\t\tvar isAuthenticated = Principal.isAuthenticated();\n\t\t\t\t\t\t// an authenticated user can't access to login pages\n\t\t\t\t\t\tif (isAuthenticated && $rootScope.toState.name && $rootScope.toState.name === 'auth.signin') {\n\t\t\t\t\t\t\t$state.go('app.main');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((!$rootScope.toState.data || !$rootScope.toState.data.authorities) && !isAuthenticated) {\n\t\t\t\t\t\t\t// user is not signed in but desired state nneds an authenticated user\n\t\t\t\t\t\t\t$state.go('auth.signin');\n\t\t\t\t\t\t} else if ($rootScope.toState.data && //\n\t\t\t\t\t\t\t$rootScope.toState.data.authorities && //\n\t\t\t\t\t\t\t$rootScope.toState.data.authorities.length > 0 && //\n\t\t\t\t\t\t\t!Principal.hasAnyAuthority($rootScope.toState.data.authorities) //\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (isAuthenticated) {\n\t\t\t\t\t\t\t\t// user is signed in but not authorized for desired state\n\t\t\t\t\t\t\t\t$state.go('auth.accessDenied');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// user is not authenticated. stow the state they wanted before you\n\t\t\t\t\t\t\t\t// send them to the signin state, so you can return them when you're done\n\t\t\t\t\t\t\t\t$rootScope.previousStateName = $rootScope.toState;\n\t\t\t\t\t\t\t\t$rootScope.previousStateNameParams = $rootScope.toStateParams;\n\t\t\t\t\t\t\t\t// now, send them to the signin state so they can log in\n\t\t\t\t\t\t\t\t$state.go('auth.signin');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tupdateAccount: function(account, callback) {\n\t\t\t\tvar cb = callback || angular.noop;\n\n\t\t\t\treturn Account.save(account,\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\t$rootScope.$emit('auth.updateAccount', {\n\t\t\t\t\t\t\taccount: account\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn cb(account);\n\t\t\t\t\t},\n\t\t\t\t\tfunction(err) {\n\t\t\t\t\t\treturn cb(err);\n\t\t\t\t\t}.bind(this)).$promise;\n\t\t\t},\n\n\t\t\tchangePassword: function(newPassword, callback) {\n\t\t\t\tvar cb = callback || angular.noop;\n\n\t\t\t\treturn Password.save(newPassword, function() {\n\t\t\t\t\treturn cb();\n\t\t\t\t}, function(err) {\n\t\t\t\t\treturn cb(err);\n\t\t\t\t}).$promise;\n\t\t\t},\n\n\t\t\tresetPasswordInit: function(mail, callback) {\n\t\t\t\tvar cb = callback || angular.noop;\n\n\t\t\t\treturn PasswordResetInit.save(mail, function() {\n\t\t\t\t\treturn cb();\n\t\t\t\t}, function(err) {\n\t\t\t\t\treturn cb(err);\n\t\t\t\t}).$promise;\n\t\t\t},\n\n\t\t\tresetPasswordFinish: function(keyAndPassword, callback) {\n\t\t\t\tvar cb = callback || angular.noop;\n\n\t\t\t\treturn PasswordResetFinish.save(keyAndPassword, function() {\n\t\t\t\t\treturn cb();\n\t\t\t\t}, function(err) {\n\t\t\t\t\treturn cb(err);\n\t\t\t\t}).$promise;\n\t\t\t}\n\t\t};\n\t}]);\n","'use strict';\n\nangular.module('adama-web').directive('hasAnyAuthority', ['Principal', function(Principal) {\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar setVisible = function() {\n\t\t\t\telement.removeClass('hidden');\n\t\t\t};\n\t\t\tvar setHidden = function() {\n\t\t\t\telement.addClass('hidden');\n\t\t\t};\n\t\t\tvar authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\t\t\tvar defineVisibility = function(reset) {\n\t\t\t\tvar result;\n\t\t\t\tif (reset) {\n\t\t\t\t\tsetVisible();\n\t\t\t\t}\n\n\t\t\t\tresult = Principal.hasAnyAuthority(authorities);\n\t\t\t\tif (result) {\n\t\t\t\t\tsetVisible();\n\t\t\t\t} else {\n\t\t\t\t\tsetHidden();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (authorities.length > 0) {\n\t\t\t\tdefineVisibility(true);\n\n\t\t\t\tscope.$watch(function() {\n\t\t\t\t\treturn Principal.isAuthenticated();\n\t\t\t\t}, function() {\n\t\t\t\t\tdefineVisibility(true);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}]).directive('hasAuthority', ['Principal', function(Principal) {\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar setVisible = function() {\n\t\t\t\telement.removeClass('hidden');\n\t\t\t};\n\t\t\tvar setHidden = function() {\n\t\t\t\telement.addClass('hidden');\n\t\t\t};\n\t\t\tvar authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\t\t\tvar defineVisibility = function(reset) {\n\n\t\t\t\tif (reset) {\n\t\t\t\t\tsetVisible();\n\t\t\t\t}\n\n\t\t\t\tPrincipal.hasAuthority(authority).then(function(result) {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tsetVisible();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetHidden();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (authority.length > 0) {\n\t\t\t\tdefineVisibility(true);\n\n\t\t\t\tscope.$watch(function() {\n\t\t\t\t\treturn Principal.isAuthenticated();\n\t\t\t\t}, function() {\n\t\t\t\t\tdefineVisibility(true);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web')\n\t.factory('Principal', [\"$q\", \"Account\", function Principal($q, Account) {\n\t\tvar _identity;\n\t\tvar _authenticated = false;\n\n\t\treturn {\n\t\t\tisIdentityResolved: function() {\n\t\t\t\treturn angular.isDefined(_identity);\n\t\t\t},\n\t\t\tisAuthenticated: function() {\n\t\t\t\treturn _authenticated;\n\t\t\t},\n\t\t\thasAuthority: function(authority) {\n\t\t\t\tif (!_authenticated) {\n\t\t\t\t\treturn $q.when(false);\n\t\t\t\t}\n\n\t\t\t\treturn this.identity().then(function(_id) {\n\t\t\t\t\treturn _id.authorities && _id.authorities.indexOf(authority) !== -1;\n\t\t\t\t}, function() {\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t},\n\t\t\thasAnyAuthority: function(authorities) {\n\t\t\t\tif (!_authenticated || !_identity || !_identity.authorities) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < authorities.length; i++) {\n\t\t\t\t\tif (_identity.authorities.indexOf(authorities[i]) !== -1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tauthenticate: function(identity) {\n\t\t\t\t_identity = identity;\n\t\t\t\t_authenticated = identity !== null;\n\t\t\t},\n\t\t\tidentity: function(force) {\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tif (force === true) {\n\t\t\t\t\t_identity = undefined;\n\t\t\t\t}\n\n\t\t\t\t// check and see if we have retrieved the identity data from the\n\t\t\t\t// server.\n\t\t\t\t// if we have, reuse it by immediately resolving\n\t\t\t\tif (angular.isDefined(_identity)) {\n\t\t\t\t\tdeferred.resolve(_identity);\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\n\t\t\t\t// retrieve the identity data from the server, update the\n\t\t\t\t// identity object, and then resolve.\n\t\t\t\tAccount.get().$promise\n\t\t\t\t\t.then(function(account) {\n\t\t\t\t\t\t_identity = account.data;\n\t\t\t\t\t\t_authenticated = true;\n\t\t\t\t\t\tdeferred.resolve(_identity);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\t_identity = null;\n\t\t\t\t\t\t_authenticated = false;\n\t\t\t\t\t\tdeferred.resolve(_identity);\n\t\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\t\t};\n\t}]);\n","'use strict';\n\nangular.module('adama-web').factory('authInterceptor', [\"$rootScope\", \"$q\", \"$location\", \"localStorageService\", function($rootScope, $q, $location, localStorageService) {\n\treturn {\n\t\t// Add authorization token to headers\n\t\trequest: function(config) {\n\t\t\tconfig.headers = config.headers || {};\n\t\t\tvar token = localStorageService.get('token');\n\n\t\t\tif (token && token.expires && token.expires > new Date().getTime()) {\n\t\t\t\tconfig.headers['x-auth-token'] = token.token;\n\t\t\t}\n\n\t\t\treturn config;\n\t\t}\n\t};\n}]).factory('authExpiredInterceptor', [\"$rootScope\", \"$q\", \"$injector\", \"localStorageService\", function($rootScope, $q, $injector, localStorageService) {\n\treturn {\n\t\tresponseError: function(response) {\n\t\t\t// token has expired\n\t\t\tif (response.status === 401 && (response.data.error === 'invalid_token' || response.data.error === 'Unauthorized')) {\n\t\t\t\tlocalStorageService.remove('token');\n\t\t\t\tvar Principal = $injector.get('Principal');\n\t\t\t\tif (Principal.isAuthenticated()) {\n\t\t\t\t\tvar Auth = $injector.get('Auth');\n\t\t\t\t\tAuth.authorize(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('errorHandlerInterceptor', [\"$q\", \"$rootScope\", \"jHipsterConstant\", function($q, $rootScope, jHipsterConstant) {\n\treturn {\n\t\t'responseError': function(response) {\n\t\t\tif (!(response.status === 401 && response.data.path.indexOf('/api/account') === 0)) {\n\t\t\t\t$rootScope.$emit(jHipsterConstant.appModule + '.httpError', response);\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('notificationInterceptor', [\"$q\", \"AlertService\", \"jHipsterConstant\", function($q, AlertService, jHipsterConstant) {\n\treturn {\n\t\tresponse: function(response) {\n\t\t\tvar alertKey = response.headers('X-' + jHipsterConstant.appModule + '-alert');\n\t\t\tif (angular.isString(alertKey)) {\n\t\t\t\tAlertService.success(alertKey, {\n\t\t\t\t\tparam: response.headers('X-' + jHipsterConstant.appModule + '-params')\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response;\n\t\t}\n\t};\n}]);\n","/*jshint bitwise: false*/\n'use strict';\n\nangular.module('adama-web').service('Base64', function() {\n\tvar keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\tthis.encode = function(input) {\n\t\tvar output = '';\n\t\tvar chr1, chr2, enc1, enc2, enc3;\n\t\tvar chr3 = '';\n\t\tvar enc4 = '';\n\t\tvar i = 0;\n\n\t\twhile (i < input.length) {\n\t\t\tchr1 = input.charCodeAt(i++);\n\t\t\tchr2 = input.charCodeAt(i++);\n\t\t\tchr3 = input.charCodeAt(i++);\n\n\t\t\tenc1 = chr1 >> 2;\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n\t\t\tenc4 = chr3 & 63;\n\n\t\t\tif (isNaN(chr2)) {\n\t\t\t\tenc3 = enc4 = 64;\n\t\t\t} else if (isNaN(chr3)) {\n\t\t\t\tenc4 = 64;\n\t\t\t}\n\n\t\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n\t\t\tchr1 = chr2 = chr3 = '';\n\t\t\tenc1 = enc2 = enc3 = enc4 = '';\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tthis.decode = function(input) {\n\t\tvar output = '';\n\t\tvar chr1, chr2, enc1, enc2, enc3;\n\t\tvar chr3 = '';\n\t\tvar enc4 = '';\n\t\tvar i = 0;\n\n\t\t// remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n\t\twhile (i < input.length) {\n\t\t\tenc1 = keyStr.indexOf(input.charAt(i++));\n\t\t\tenc2 = keyStr.indexOf(input.charAt(i++));\n\t\t\tenc3 = keyStr.indexOf(input.charAt(i++));\n\t\t\tenc4 = keyStr.indexOf(input.charAt(i++));\n\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\n\n\t\t\toutput = output + String.fromCharCode(chr1);\n\n\t\t\tif (enc3 !== 64) {\n\t\t\t\toutput = output + String.fromCharCode(chr2);\n\t\t\t}\n\t\t\tif (enc4 !== 64) {\n\t\t\t\toutput = output + String.fromCharCode(chr3);\n\t\t\t}\n\n\t\t\tchr1 = chr2 = chr3 = '';\n\t\t\tenc1 = enc2 = enc3 = enc4 = '';\n\t\t}\n\t};\n}).factory('StorageService', [\"$window\", function($window) {\n\treturn {\n\n\t\tget: function(key) {\n\t\t\treturn JSON.parse($window.localStorage.getItem(key));\n\t\t},\n\n\t\tsave: function(key, data) {\n\t\t\t$window.localStorage.setItem(key, JSON.stringify(data));\n\t\t},\n\n\t\tremove: function(key) {\n\t\t\t$window.localStorage.removeItem(key);\n\t\t},\n\n\t\tclearAll: function() {\n\t\t\t$window.localStorage.clear();\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web')\n\t.service('ParseLinks', function() {\n\t\tthis.parse = function(header) {\n\t\t\tif (header.length === 0) {\n\t\t\t\tthrow new Error('input must not be of zero length');\n\t\t\t}\n\n\t\t\t// Split parts by comma\n\t\t\tvar parts = header.split(',');\n\t\t\tvar links = {};\n\t\t\t// Parse each part into a named link\n\t\t\tangular.forEach(parts, function(p) {\n\t\t\t\tvar section = p.split(';');\n\t\t\t\tif (section.length !== 2) {\n\t\t\t\t\tthrow new Error('section could not be split on \";\"');\n\t\t\t\t}\n\t\t\t\tvar url = section[0].replace(/<(.*)>/, '$1').trim();\n\t\t\t\tvar queryString = {};\n\t\t\t\turl.replace(\n\t\t\t\t\tnew RegExp('([^?=&]+)(=([^&]*))?', 'g'),\n\t\t\t\t\tfunction($0, $1, $2, $3) {\n\t\t\t\t\t\tqueryString[$1] = $3;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tvar page = queryString.page;\n\t\t\t\tif (angular.isString(page)) {\n\t\t\t\t\tpage = parseInt(page);\n\t\t\t\t}\n\t\t\t\tvar name = section[1].replace(/rel='(.*)'/, '$1').trim();\n\t\t\t\tlinks[name] = page;\n\t\t\t});\n\n\t\t\treturn links;\n\t\t};\n\t});\n","'use strict';\n\nangular.module('adama-web').factory('AuthServerProvider', [\"$http\", \"localStorageService\", \"Base64\", \"jHipsterConstant\", function loginService($http, localStorageService, Base64, jHipsterConstant) {\n\treturn {\n\t\tlogin: function(credentials) {\n\t\t\tvar data = 'username=' + encodeURIComponent(credentials.username) + '&password=' + encodeURIComponent(credentials.password);\n\t\t\treturn $http.post(jHipsterConstant.apiBase + 'api/authenticate', data, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t'Accept': 'application/json'\n\t\t\t\t}\n\t\t\t}).success(function(response) {\n\t\t\t\tlocalStorageService.set('token', response);\n\t\t\t\treturn response;\n\t\t\t});\n\t\t},\n\t\tlogout: function() {\n\t\t\t// Stateless API : No server logout\n\t\t\tlocalStorageService.clearAll();\n\t\t},\n\t\tgetToken: function() {\n\t\t\treturn localStorageService.get('token');\n\t\t},\n\t\thasValidToken: function() {\n\t\t\tvar token = this.getToken();\n\t\t\treturn token && token.expires && token.expires > new Date().getTime();\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web')\n\t.factory('Account', [\"$resource\", \"jHipsterConstant\", function Account($resource, jHipsterConstant) {\n\t\treturn $resource(jHipsterConstant.apiBase + 'api/account', {}, {\n\t\t\t'get': {\n\t\t\t\tmethod: 'GET',\n\t\t\t\tparams: {},\n\t\t\t\tisArray: false,\n\t\t\t\tinterceptor: {\n\t\t\t\t\tresponse: function(response) {\n\t\t\t\t\t\t// expose response\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}]);\n","'use strict';\n\nangular.module('adama-web').factory('Password', [\"$resource\", \"jHipsterConstant\", function($resource, jHipsterConstant) {\n\treturn $resource(jHipsterConstant.apiBase + 'api/account/change_password', {}, {});\n}]);\n\nangular.module('adama-web').factory('PasswordResetInit', [\"$resource\", \"jHipsterConstant\", function($resource, jHipsterConstant) {\n\treturn $resource(jHipsterConstant.apiBase + 'api/account/reset_password/init', {}, {});\n}]);\n\nangular.module('adama-web').factory('PasswordResetFinish', [\"$resource\", \"jHipsterConstant\", function($resource, jHipsterConstant) {\n\treturn $resource(jHipsterConstant.apiBase + 'api/account/reset_password/finish', {}, {});\n}]);\n"],"sourceRoot":"/source/"}