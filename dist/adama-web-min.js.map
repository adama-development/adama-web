{"version":3,"sources":["app.js","app-config.js","alert/adama-alert-error.component.js","alert/adama-alert.component.js","alert/alert.service.js","account/app.js","auth/accessDenied.controller.js","auth/app.js","auth/recoverPassword.controller.js","auth/resetPassword.controller.js","auth/signin.controller.js","binary-file-definition/binary-file-definition.component.js","crud/app.js","crud/btn-confirm-edit.directive.js","crud/btn-create.component.js","crud/crud-action-dropdown.component.js","crud/crud-custom-filter.component.js","crud/crud-delete.controller.js","crud/crud-edit-fullpage.controller.js","crud/crud-edit.controller.js","crud/crud-export-xls.controller.js","crud/crud-import-xls.controller.js","crud/crud-list.controller.js","crud/crud-search-field.component.js","crud/crud-view-fullpage.controller.js","crud/crud-view.controller.js","crud/modal-btn-back-to-list.directive.js","crud/modal-btn-cancel.directive.js","crud/modal-btn-confirm-delete.directive.js","crud/modal-btn-confirm-edit.directive.js","crud/modal-btn-confirm-export-xls.directive.js","crud/modal-btn-confirm-import-xls.directive.js","datasources/authorities.datasource.js","datasources/binary-file-url.datasource.js","datasources/language.datasource.js","datasources/principal-identity.datasource.js","directives/layoutFix.directive.js","directives/lazyControl.directive.js","filters/min.filter.js","has-authority/has-any-authority.directive.js","has-authority/has-authority.directive.js","interceptors/auth-expired.interceptor.js","interceptors/auth.interceptor.js","interceptors/error-handler.interceptor.js","interceptors/notification.interceptor.js","resources/user.resource.js","services/adama-resource-config.service.js","services/adama-token.service.js","services/adama.constant.js","services/auth.backend.service.js","services/auth.service.js","services/base64.service.js","services/binary-file.service.js","services/language.provider.js","services/parse-links.service.js","services/pdf.service.js","services/principal.service.js","user/app.js","account/password/app.js","account/password/password.controller.js","account/settings/app.js","account/settings/settings.controller.js","ark/ark-footer/ark-footer.component.js","ark/ark-header/app.js","ark/ark-header/ark-header.component.js","ark/language-selector/language-selector.component.js","ark/menu/main-navigation.component.js","ark/menu/menu.provider.js","ark/select-all/select-all.component.js","ark/user-info/user-info.component.js","ark/view-attribute/view-attribute.component.js"],"names":["angular","module","config","$urlRouterProvider","otherwise","run","$rootScope","additionalBodyClass","$on","event","toState","name","indexOf","$filter","translateFn","data","pageTitle","$translateProvider","useSanitizeValueStrategy","useLocalStorage","registerAvailableLanguageKeys","en_*","fr_*","determinePreferredLanguage","$stateProvider","state","abstract","url","template","resolve","authorize","Principal","ngTableDefaults","settings","extend","counts","params","page","count","translations","MENU_CATEGORY_USERS","PAGER_RESULT","FLAG_EN","FLAG_CN","FLAG_FR","FILEUPLOAD_DROPZONE_LABEL_MASS_IMPORT","FILEUPLOAD_DROPZONE_LABEL","FILEUPLOAD_DROPZONE_LABEL_DROP","FILEUPLOAD_RESET","FILEUPLOAD_UPLOADING","FILEUPLOAD_ERROR","$state","toStateParams","isAuthenticated","preventDefault","go","isIdentityResolved","toParams","fromState","fromParams","previousStateName","previousStateParams","$httpProvider","interceptors","push","component","templateUrl","adamaConstant","adamaWebToolkitTemplateUrl","adamaAlertError","controller","$scope","$translate","AlertService","ctrl","this","alerts","addErrorAlert","message","key","add","type","msg","timeout","toast","isToast","scoped","cleanHttpErrorListener","httpResponse","i","stopPropagation","status","errorHeader","headers","entityKey","entityName","instant","fieldErrors","length","fieldError","convertedField","field","replace","fieldName","objectName","JSON","stringify","adamaAlert","get","provider","$get","$timeout","$sce","alertId","clear","closeAlertByIndex","index","thisAlerts","splice","closeAlert","id","extAlerts","map","e","factory","alertOptions","alert","trustAsHtml","position","close","addAlert","success","error","warning","info","showAsToast","signin","controllerAs","authorities","recoverPassword","accessDenied","resetPassword","SIGNIN","SIGNIN_INTRO","SIGNIN_FORGET_PASSWORD","SIGNIN_USERNAME","SIGNIN_USERNAME_REQUIRED","SIGNIN_PASSWORD","SIGNIN_PASSWORD_REQUIRED","SIGNIN_SUBMIT","SIGNIN_ERROR","RECOVER","RECOVER_INTRO","RECOVER_MAIL","RECOVER_MAIL_REQUIRED","RECOVER_MAIL_EMAIL","RECOVER_SUBMIT","RECOVER_BACK_TO_LOGIN","RECOVER_SUCCESS","RECOVER_ERROR","RECOVER_ERROR_EMAIL_NOT_EXIST","ACCESS_DENIED","ACCESS_DENIED_INTRO","ACCESS_DENIED_BACK_TO_LOGIN","RESET_PASSWORD","RESET_PASSWORD_INTRO","RESET_PASSWORD_SUBMIT","RESET_PASSWORD_PASSWORD","RESET_PASSWORD_PASSWORD_REQUIRED","RESET_PASSWORD_PASSWORD_MINLENGTH","RESET_PASSWORD_PASSWORD_MAXLENGTH","RESET_PASSWORD_PASSWORD_CONFIRM","RESET_PASSWORD_PASSWORD_CONFIRM_REQUIRED","RESET_PASSWORD_PASSWORD_CONFIRM_MATCH","RESET_PASSWORD_ERROR","RESET_PASSWORD_MESSAGE_FOR_MOBILE_USER","recover","userEmail","recoverSuccess","recoverError","errorEmailNotExists","loading","resetPasswordInit","then","response","$location","resetError","messageForMobileUser","newPassword","resetPasswordFinish","search","console","log","origin","Auth","userName","userPassword","authenticationError","login","username","password","binaryFileDefinition","bindings","afterUploadCallback","filePattern","labelKey","require","ngModel","binaryFileService","isPicture","ongoingUpload","undefined","upload","file","isArray","$setValidity","uploadFile","resp","newFile","$setViewValue","resetFile","CRUD_BACK_TO_LIST","CRUD_CANCEL","CRUD_CONFIRM_DELETE","CRUD_CONFIRM_EDIT","CRUD_CONFIRM_EXPORT","CRUD_CONFIRM_IMPORT","CRUD_CONFIRM_SAVE","CRUD_DELETE_MESSAGE","CRUD_DELETE_SUCCESS","CRUD_DELETE_ERROR","CRUD_EXPORT_XLS_MESSAGE","CRUD_EXPORT_XLS_SUCCESS","CRUD_EXPORT_XLS_ERROR","CRUD_IMPORT_XLS_MESSAGE","CRUD_IMPORT_XLS_SUCCESS","CRUD_IMPORT_XLS_ERROR","CRUD_NEW","CRUD_MASS_IMPORT","CRUD_MASS_EXPORT","CRUD_EDIT_SUCCESS","CRUD_NEW_SUCCESS","CRUD_SAVE_ERROR","CRUD_FORM_ERROR_REQUIRED","CRUD_FORM_ERROR_NUMBER","CRUD_FORM_ERROR_MAXLENGTH","CRUD_FORM_ERROR_EMAIL","CRUD_FORM_SEARCH","CRUD_FORM_SEARCH_SUBMIT","CRUD_ACTION_VIEW","CRUD_ACTION_EDIT","CRUD_ACTION_DELETE","directive","btnConfirmEdit","restrict","btnCreate","transclude","disableCreate","disableMassImport","disableMassExport","disableAdditionnalAction","crudActionDropdown","routeMapping","disableView","disableEdit","disableDelete","crudCustomFilter","tableParams","searchValue","displayFiltered","filter","business","reload","entity","dismiss","$dismiss","confirmDelete","$delete","$close","EntityGenericResource","isEdition","save","resourceAction","update","$promise","newEntity","confirmExportXls","massExportXls","confirmImportXls","massImportXls","NgTableParams","total","getData","sort","sorting","sortValues","equals","hasOwnProperty","requestParams","size","$","query","entities","$metadata","totalItems","crudSearchField","modalBtnBackToList","modalBtnCancel","modalBtnConfirmDelete","modalBtnConfirmEdit","modalBtnConfirmExportXls","modalBtnConfirmImportXls","$parse","scope","link","element","attrs","assign","updateOutput","binaryFileList","output","copy","initUrlForBinaryFiles","$watch","input","language","getAll","languages","identity","account","addEvent","AdminLTE","layout","fix","translateFilter","additionalLabelAttributes","labelScreenOnly","labelContainer","isPlaceholderForced","wrap","after","next","eq","placeholder","attr","addClass","before","prev","initLabelAndPlaceholder","label","lazyControlLabelKey","html","Math","min","setVisible","removeClass","setHidden","hasAnyAuthority","split","defineVisibility","reset","result","authority","hasAuthority","$injector","$q","getHttpService","service","getAdamaTokenService","responseError","apiBase","refreshAndGetToken","reject","request","getToken","token","$emit","alertKey","isString","param","$resource","adamaResourceConfig","method","urlCreatePassword","ParseLinks","pdfService","transformResponse","fromJson","links","parse","parseInt","interceptor","resource","delete","responseType","all","Accept","transformResponseToPdf","Content-Type","transformRequest","formData","window","FormData","append","$http","jwtHelper","localStorageService","api","getPayload","tokenPayload","decodeToken","getUsername","setToken","set","setRefreshToken","isTokenExpired","when","refreshToken","Authorization","refresh_token","newToken","rejection","constant","arkFooter","arkHeader","languageSelector","mainNavigation","selectAll","userInfo","viewAttribute","users","userEdit","userCreate","userView","userDelete","usersImportXls","usersExportXls","userAuthorities","adamaTokenService","credentials","post","logout","authBackendService","deferred","defer","langKey","use","err","promise","authenticate","previousStateNameParams","keyStr","encode","chr1","chr2","enc1","enc2","enc3","chr3","enc4","charCodeAt","isNaN","charAt","decode","String","fromCharCode","Upload","workingList","idList","forEach","binaryFile","urlList","disableProgress","selectorData","code","cssCLass","setLanguages","newLanguages","setSelectorData","newSelectorData","getCurrent","storage","isUndefined","getSelectorData","header","Error","parts","p","section","trim","queryString","RegExp","$0","$1","$2","$3","FileSaver","headersGetter","filename","dataBlob","Blob","contentDisposition","substring","saveAs","_identity","Password","PasswordResetInit","PasswordResetFinish","_authenticated","isDefined","_id","force","location","updateAccount","user","changePassword","mail","urlResetPassword","keyAndPassword","User","openModal","$uibModal","$stateParams","controllerName","resolveEntity","open","onEnter","userexists","emailexists","USER_MENU","USER_TITLE_DELETE","USER_TITLE_VIEW","USER_TITLE_LIST","USER_TITLE_EDIT","USER_TITLE_NEW","USER_TITLE_IMPORT_XLS","USER_TITLE_EXPORT_XLS","USER_FORM_LOGIN","USER_FORM_FIRSTNAME","USER_FORM_LASTNAME","USER_FORM_EMAIL","USER_FORM_LANGUAGE","USER_FORM_AUTHORITY","USER_LIST_LOGIN","USER_LIST_MAIL","USER_LIST_LANGUAGE","USER_LIST_AUTHORITY","ACCOUNT_PASSWORD","ACCOUNT_PASSWORD_TITLE","ACCOUNT_PASSWORD_NEWPASSWORD","ACCOUNT_PASSWORD_NEWPASSWORD_PLACEHOLDER","ACCOUNT_PASSWORD_NEWPASSWORD_REQUIRED","ACCOUNT_PASSWORD_NEWPASSWORD_MINLENGTH","ACCOUNT_PASSWORD_NEWPASSWORD_MAXLENGTH","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PLACEHOLDER","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_REQUIRED","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MINLENGTH","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MAXLENGTH","ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PATTERN","ACCOUNT_PASSWORD_SUBMIT","ACCOUNT_PASSWORD_SAVE_SUCCESS","ACCOUNT_PASSWORD_SAVE_ERROR","ACCOUNT_SETTINGS","ACCOUNT_SETTINGS_TITLE","ACCOUNT_SETTINGS_FIRSTNAME","ACCOUNT_SETTINGS_FIRSTNAME_PLACEHOLDER","ACCOUNT_SETTINGS_FIRSTNAME_REQUIRED","ACCOUNT_SETTINGS_FIRSTNAME_MAXLENGTH","ACCOUNT_SETTINGS_LASTNAME","ACCOUNT_SETTINGS_LASTNAME_PLACEHOLDER","ACCOUNT_SETTINGS_LASTNAME_REQUIRED","ACCOUNT_SETTINGS_LASTNAME_MAXLENGTH","ACCOUNT_SETTINGS_EMAIL","ACCOUNT_SETTINGS_EMAIL_PLACEHOLDER","ACCOUNT_SETTINGS_EMAIL_REQUIRED","ACCOUNT_SETTINGS_EMAIL_EMAIL","ACCOUNT_SETTINGS_EMAIL_MAXLENGTH","ACCOUNT_SETTINGS_LANGUAGE","ACCOUNT_SETTINGS_SUBMIT","ACCOUNT_SETTINGS_SAVE_SUCCESS","ACCOUNT_SETTINGS_SAVE_ERROR","copyAccount","activated","email","firstName","lastName","settingsAccount","current","TOGGLE_NAVIGATION","USERINFO_PROFILE","USERINFO_PASSWORD","USERINFO_SIGNOUT","changeLanguage","updateCurrentLanguage","currentLanguage","menuService","translate","translateLabels","itemList","item","subItems","menuItems","getItems","updateMenuEntries","addItem","newItem","menuItem","badge","value","entityList","isAllChecked","checkAll","isSelected","signout","valueKey"],"mappings":"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","file":"adama-web-min.js","sourcesContent":["'use strict';\n\nangular.module('adama-web', [ //\n\t'ngSanitize', //\n\t'ngMessages', //\n\t'ui.router', //\n\t'ui.bootstrap', //\n\t'pascalprecht.translate', //\n\t'ngCookies', //\n\t'ngResource', //\n\t'LocalStorageModule', //\n\t'ngTable', //\n\t'ngFileSaver', //\n\t'ngFileUpload', //\n\t'angular-jwt', //\n\t'angular-loading-bar' //\n]);\n","'use strict';\n\nangular.module('adama-web').config([\"$urlRouterProvider\", function($urlRouterProvider) {\n\t$urlRouterProvider.otherwise('/app/');\n}]);\n\nangular.module('adama-web').run([\"$rootScope\", function($rootScope) {\n\t// change body class depending on application main state (app or login)\n\t$rootScope.additionalBodyClass = 'sidebar-mini';\n\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.name && toState.name.indexOf('auth') === 0) {\n\t\t\t$rootScope.additionalBodyClass = 'login-page';\n\t\t} else {\n\t\t\t$rootScope.additionalBodyClass = 'sidebar-mini';\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').run([\"$rootScope\", \"$filter\", function($rootScope, $filter) {\n\t// change page title depending on current page\n\tvar translateFn = $filter('translate');\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.data && toState.data.pageTitle) {\n\t\t\t$rootScope.pageTitle = translateFn(toState.data.pageTitle);\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.useSanitizeValueStrategy('escapeParameters');\n\t$translateProvider.useLocalStorage();\n\t$translateProvider.registerAvailableLanguageKeys(['en', 'fr'], {\n\t\t'en_*': 'en',\n\t\t'fr_*': 'fr'\n\t});\n\t$translateProvider.determinePreferredLanguage();\n}]);\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app', {\n\t\tabstract: true,\n\t\turl: '/app',\n\t\ttemplate: '' + //\n\t\t\t'<div class=\"wrapper\">' + //\n\t\t\t'\t<ark-header></ark-header>' + //\n\t\t\t'\t<aside class=\"main-sidebar\">' + //\n\t\t\t'\t\t<section class=\"sidebar\">' + //\n\t\t\t'\t\t\t<main-navigation></main-navigation>' + //\n\t\t\t'\t\t</section>' + //\n\t\t\t'\t</aside>' + //\n\t\t\t'\t<adama-alert></adama-alert>' + //\n\t\t\t'\t<ui-view></ui-view>' + //\n\t\t\t'\t<ark-footer></ark-footer>' + //\n\t\t\t'\t<layout-fix add-event=\"true\"></layout-fix>' + //\n\t\t\t'</div>' + //\n\t\t\t'',\n\t\tresolve: {\n\t\t\tauthorize: [\"Principal\", function(Principal) {\n\t\t\t\treturn Principal.authorize();\n\t\t\t}]\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').run([\"ngTableDefaults\", function(ngTableDefaults) {\n\tngTableDefaults.settings = angular.extend({}, ngTableDefaults.settings, {\n\t\tcounts: [10, 20, 50]\n\t});\n\tngTableDefaults.params = angular.extend({}, ngTableDefaults.params, {\n\t\t// init : show first page\n\t\tpage: 1,\n\t\t// init : count per page\n\t\tcount: 20\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'MENU_CATEGORY_USERS': 'Utilisateurs',\n\t\t'PAGER_RESULT': '{{ firstItemIdx }}-{{ lastItemIdx | min:total }} sur {{ total }} entrées',\n\t\t'FLAG_EN': 'Anglais',\n\t\t'FLAG_CN': 'Chinois',\n\t\t'FLAG_FR': 'Français',\n\t\t'FILEUPLOAD_DROPZONE_LABEL_MASS_IMPORT': 'Déposez un fichier XLS pour le téléverser ou cliquez sur la zone pour sélectionner un fichier XLS.',\n\t\t'FILEUPLOAD_DROPZONE_LABEL': 'Déposez un fichier pour le téléverser ou cliquez sur la zone pour sélectionner un fichier.',\n\t\t'FILEUPLOAD_DROPZONE_LABEL_DROP': 'Vous pouvez déposer le fichier.',\n\t\t'FILEUPLOAD_RESET': 'Retirer le fichier sélectionné et faire une nouvelle sélection.',\n\t\t'FILEUPLOAD_UPLOADING': 'Téléversement en cours',\n\t\t'FILEUPLOAD_ERROR': 'Erreur lors du téléversement'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'MENU_CATEGORY_USERS': 'Users',\n\t\t'PAGER_RESULT': '{{ firstItemIdx }}-{{ lastItemIdx | min:total }} on {{ total }} entries',\n\t\t'FLAG_EN': 'English',\n\t\t'FLAG_CN': 'Chinese',\n\t\t'FLAG_FR': 'French',\n\t\t'FILEUPLOAD_DROPZONE_LABEL_MASS_IMPORT': 'Drop a XLS file on this area to upload it or click the area to select a XLS file.',\n\t\t'FILEUPLOAD_DROPZONE_LABEL': 'Drop a file on this area to upload it or click the area to select a file.',\n\t\t'FILEUPLOAD_DROPZONE_LABEL_DROP': 'You can now drop the file',\n\t\t'FILEUPLOAD_RESET': 'Remove selected file and start over.',\n\t\t'FILEUPLOAD_UPLOADING': 'Uploading ...',\n\t\t'FILEUPLOAD_ERROR': 'Error while uploading'\n\t});\n}]);\n\nangular.module('adama-web').run([\"$rootScope\", \"$state\", \"Principal\", function($rootScope, $state, Principal) {\n\t$rootScope.$on('$stateChangeStart', function(event, toState, toStateParams) {\n\t\tif (Principal.isAuthenticated() && toState.name.indexOf('auth.') === 0 && toState.name !== 'auth.accessDenied') {\n\t\t\tevent.preventDefault();\n\t\t\t$state.go('app.main');\n\t\t} else {\n\t\t\t$rootScope.toState = toState;\n\t\t\t$rootScope.toStateParams = toStateParams;\n\t\t\tif (Principal.isIdentityResolved()) {\n\t\t\t\tPrincipal.authorize();\n\t\t\t}\n\t\t}\n\t});\n\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n\t\t// Remember previous state unless we've been redirected to login or we've just\n\t\t// reset the state memory after logout. If we're redirected to login, our\n\t\t// previousState is already set in the authExpiredInterceptor. If we're going\n\t\t// to login directly, we don't want to be sent to some previous state anyway\n\t\tif (toState.name !== 'auth.signin' && $rootScope.previousStateName) {\n\t\t\t$rootScope.previousStateName = fromState.name;\n\t\t\t$rootScope.previousStateParams = fromParams;\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$httpProvider\", function($httpProvider) {\n\t$httpProvider.interceptors.push('errorHandlerInterceptor');\n\t$httpProvider.interceptors.push('authExpiredInterceptor');\n\t$httpProvider.interceptors.push('authInterceptor');\n\t$httpProvider.interceptors.push('notificationInterceptor');\n}]);\n","'use strict';\n\nangular.module('adama-web').component('adamaAlertError', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.adamaAlertError;\n\t}],\n\tcontroller: [\"$rootScope\", \"$scope\", \"$translate\", \"AlertService\", function($rootScope, $scope, $translate, AlertService) {\n\t\tvar ctrl = this;\n\t\tctrl.alerts = [];\n\n\t\tvar addErrorAlert = function(message, key, data) {\n\t\t\tkey = key && key !== null ? key : message;\n\t\t\tctrl.alerts.push(AlertService.add({\n\t\t\t\ttype: 'danger',\n\t\t\t\tmsg: key,\n\t\t\t\tparams: data,\n\t\t\t\ttimeout: 5000,\n\t\t\t\ttoast: AlertService.isToast(),\n\t\t\t\tscoped: true\n\t\t\t}, ctrl.alerts));\n\t\t};\n\n\t\tvar cleanHttpErrorListener = $rootScope.$on('Adama.httpError', function(event, httpResponse) {\n\t\t\tvar i;\n\t\t\tevent.stopPropagation();\n\t\t\tswitch (httpResponse.status) {\n\t\t\t\t// connection refused, server not reachable\n\t\t\t\tcase 0:\n\t\t\t\t\taddErrorAlert('Server not reachable', 'error.server.not.reachable');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 400:\n\t\t\t\t\tvar errorHeader = httpResponse.headers('X-Adama-error');\n\t\t\t\t\tvar entityKey = httpResponse.headers('X-Adama-params');\n\t\t\t\t\tif (errorHeader) {\n\t\t\t\t\t\tvar entityName = $translate.instant('global.menu.entities.' + entityKey);\n\t\t\t\t\t\taddErrorAlert(errorHeader, errorHeader, {\n\t\t\t\t\t\t\tentityName: entityName\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (httpResponse.data && httpResponse.data.fieldErrors) {\n\t\t\t\t\t\tfor (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n\t\t\t\t\t\t\tvar fieldError = httpResponse.data.fieldErrors[i];\n\t\t\t\t\t\t\t// convert 'something[14].other[4].id'\n\t\t\t\t\t\t\t// to 'something[].other[].id' so\n\t\t\t\t\t\t\t// translations can be written to it\n\t\t\t\t\t\t\tvar convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n\t\t\t\t\t\t\tvar fieldName = $translate.instant('Adama.' + fieldError.objectName + '.' + convertedField);\n\t\t\t\t\t\t\taddErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {\n\t\t\t\t\t\t\t\tfieldName: fieldName\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (httpResponse.data && httpResponse.data.message) {\n\t\t\t\t\t\taddErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddErrorAlert(httpResponse.data);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (httpResponse.data && httpResponse.data.message) {\n\t\t\t\t\t\taddErrorAlert(httpResponse.data.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddErrorAlert(JSON.stringify(httpResponse));\n\t\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tif (!!cleanHttpErrorListener) {\n\t\t\t\tcleanHttpErrorListener();\n\t\t\t\tctrl.alerts = [];\n\t\t\t}\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').component('adamaAlert', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.adamaAlert;\n\t}],\n\tcontroller: [\"AlertService\", function(AlertService) {\n\t\tvar ctrl = this;\n\t\tctrl.alerts = AlertService.get();\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web')\n\t.provider('AlertService', function() {\n\t\tvar toast = false;\n\n\t\tthis.$get = ['$timeout', '$sce', '$translate', function($timeout, $sce, $translate) {\n\n\t\t\tvar alertId = 0; // unique id for each alert. Starts from 0.\n\t\t\tvar alerts = [];\n\t\t\tvar timeout = 5000; // default timeout\n\n\t\t\tvar isToast = function() {\n\t\t\t\treturn toast;\n\t\t\t};\n\n\t\t\tvar clear = function() {\n\t\t\t\talerts = [];\n\t\t\t};\n\n\t\t\tvar get = function() {\n\t\t\t\treturn alerts;\n\t\t\t};\n\n\t\t\tvar closeAlertByIndex = function(index, thisAlerts) {\n\t\t\t\treturn thisAlerts.splice(index, 1);\n\t\t\t};\n\n\t\t\tvar closeAlert = function(id, extAlerts) {\n\t\t\t\tvar thisAlerts = extAlerts ? extAlerts : alerts;\n\t\t\t\treturn closeAlertByIndex(thisAlerts.map(function(e) {\n\t\t\t\t\treturn e.id;\n\t\t\t\t}).indexOf(id), thisAlerts);\n\t\t\t};\n\n\t\t\tvar factory = function(alertOptions) {\n\t\t\t\tvar alert = {\n\t\t\t\t\ttype: alertOptions.type,\n\t\t\t\t\tmsg: $sce.trustAsHtml(alertOptions.msg),\n\t\t\t\t\tid: alertOptions.alertId,\n\t\t\t\t\ttimeout: alertOptions.timeout,\n\t\t\t\t\ttoast: alertOptions.toast,\n\t\t\t\t\tposition: alertOptions.position ? alertOptions.position : 'top right',\n\t\t\t\t\tscoped: alertOptions.scoped,\n\t\t\t\t\tclose: function(alerts) {\n\t\t\t\t\t\treturn closeAlert(this.id, alerts);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (!alert.scoped) {\n\t\t\t\t\talerts.push(alert);\n\t\t\t\t}\n\t\t\t\treturn alert;\n\t\t\t};\n\n\t\t\tvar addAlert = function(alertOptions, extAlerts) {\n\t\t\t\talertOptions.alertId = alertId++;\n\t\t\t\talertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n\t\t\t\tvar alert = factory(alertOptions);\n\t\t\t\tif (alertOptions.timeout && alertOptions.timeout > 0) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\tcloseAlert(alertOptions.alertId, extAlerts);\n\t\t\t\t\t}, alertOptions.timeout);\n\t\t\t\t}\n\t\t\t\treturn alert;\n\t\t\t};\n\n\t\t\tvar success = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar error = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'danger',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar warning = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar info = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\tfactory: factory,\n\t\t\t\tisToast: isToast,\n\t\t\t\tadd: addAlert,\n\t\t\t\tcloseAlert: closeAlert,\n\t\t\t\tcloseAlertByIndex: closeAlertByIndex,\n\t\t\t\tclear: clear,\n\t\t\t\tget: get,\n\t\t\t\tsuccess: success,\n\t\t\t\terror: error,\n\t\t\t\tinfo: info,\n\t\t\t\twarning: warning\n\t\t\t};\n\t\t}];\n\n\t\tthis.showAsToast = function(isToast) {\n\t\t\ttoast = isToast;\n\t\t};\n\n\t});\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", function($stateProvider) {\n\t$stateProvider.state('app.personal', {\n\t\tabstract: true,\n\t\turl: '/personal',\n\t\ttemplate: '<ui-view></ui-view>'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('AccessDeniedCtrl', function() {\n\t// nothing to do\n});\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('auth', {\n\t\tabstract: true,\n\t\turl: '/auth',\n\t\ttemplate: '<ui-view></ui-view>'\n\t});\n\n\t$stateProvider.state('auth.signin', {\n\t\turl: '/',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.signin;\n\t\t},\n\t\tcontroller: 'SigninCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'SIGNIN',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.recoverPassword', {\n\t\turl: '/recoverPassword',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.recoverPassword;\n\t\t},\n\t\tcontroller: 'RecoverPasswordCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'RECOVER',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.accessDenied', {\n\t\turl: '/accessDenied',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.accessDenied;\n\t\t},\n\t\tcontroller: 'AccessDeniedCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCESS_DENIED',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.resetPassword', {\n\t\turl: '/resetPassword',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.resetPassword;\n\t\t},\n\t\tcontroller: 'ResetPasswordCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'RESET_PASSWORD',\n\t\t\tauthorities: []\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'SIGNIN': 'Identification',\n\t\t'SIGNIN_INTRO': 'Identifiez-vous pour démarrer votre session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'J\\'ai oublié mon mot de passe ...',\n\t\t'SIGNIN_USERNAME': 'Identifiant',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'L\\'identifiant est obligatoire',\n\t\t'SIGNIN_PASSWORD': 'Mot de passe',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'SIGNIN_SUBMIT': 'Démarrer la session',\n\t\t'SIGNIN_ERROR': 'Erreur d\\'authentification : identifiant ou mot de passe incorrect.',\n\t\t'RECOVER': 'Récupération de mot de passe',\n\t\t'RECOVER_INTRO': 'Saisissez votre email pour récupérer votre mot de passe',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'L\\'email est obligatoire',\n\t\t'RECOVER_MAIL_EMAIL': 'L\\'email n\\'est pas au bon format',\n\t\t'RECOVER_SUBMIT': 'Récupérer mon mot de passe',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Retour à l\\'identificaition',\n\t\t'RECOVER_SUCCESS': 'Consultez votre email pour connaître comment réinitialiser votre mot de passe.',\n\t\t'RECOVER_ERROR': 'Erreur lors de la récupération du mot de passe.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'L\\'email n\\'existe pas',\n\t\t'ACCESS_DENIED': 'Accès interdit',\n\t\t'ACCESS_DENIED_INTRO': 'Vous n\\'avez pas suffisamment de droits d\\'accéder à cette page.',\n\t\t'ACCESS_DENIED_BACK_TO_LOGIN': 'Retour à l\\'identificaition',\n\t\t'RESET_PASSWORD': 'Initialisation du mot de passe',\n\t\t'RESET_PASSWORD_INTRO': 'Saisissez et confirmez votre mot de passe',\n\t\t'RESET_PASSWORD_SUBMIT': 'Modifier mon mot de passe',\n\t\t'RESET_PASSWORD_PASSWORD': 'Mot de passe',\n\t\t'RESET_PASSWORD_PASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'RESET_PASSWORD_PASSWORD_MINLENGTH': 'Minimum 6 caractères',\n\t\t'RESET_PASSWORD_PASSWORD_MAXLENGTH': 'Maximum 100 caractères',\n\t\t'RESET_PASSWORD_PASSWORD_CONFIRM': 'Confirmation du mot de passe',\n\t\t'RESET_PASSWORD_PASSWORD_CONFIRM_REQUIRED': 'La confirmation est obligatoire',\n\t\t'RESET_PASSWORD_PASSWORD_CONFIRM_MATCH': 'La confirmation ne correspond pas',\n\t\t'RESET_PASSWORD_ERROR': 'Une erreur est intervenur, contactez un administrateur',\n\t\t'RESET_PASSWORD_MESSAGE_FOR_MOBILE_USER': 'Vous pouvez vous authentifier dans l\\'application mobile'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'SIGNIN': 'Signin',\n\t\t'SIGNIN_INTRO': 'Sign in to start your session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'I forgot my password ...',\n\t\t'SIGNIN_USERNAME': 'Username',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'Username is required',\n\t\t'SIGNIN_PASSWORD': 'Password',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Password is required',\n\t\t'SIGNIN_SUBMIT': 'Start session',\n\t\t'SIGNIN_ERROR': 'Authentication error : Username or password are incorrect.',\n\t\t'RECOVER': 'Recover password',\n\t\t'RECOVER_INTRO': 'Set your email to recover your password',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'Email is required',\n\t\t'RECOVER_MAIL_EMAIL': 'Email does not respect the right format',\n\t\t'RECOVER_SUBMIT': 'Retrieve my password',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Back to signin',\n\t\t'RECOVER_SUCCESS': 'Check your e-mails for details on how to reset your password.',\n\t\t'RECOVER_ERROR': 'Recovering error.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'E-Mail address isn\\'t registered! Please check and try again',\n\t\t'ACCESS_DENIED': 'Access denied',\n\t\t'ACCESS_DENIED_INTRO': 'You do not have enough privileges to access this page.',\n\t\t'ACCESS_DENIED_BACK_TO_LOGIN': 'Back to signin',\n\t\t'RESET_PASSWORD': 'New password',\n\t\t'RESET_PASSWORD_INTRO': 'Set and confirm new password',\n\t\t'RESET_PASSWORD_SUBMIT': 'Change my password',\n\t\t'RESET_PASSWORD_PASSWORD': 'Password',\n\t\t'RESET_PASSWORD_PASSWORD_REQUIRED': 'Password is required',\n\t\t'RESET_PASSWORD_PASSWORD_MINLENGTH': '6 chars minimum',\n\t\t'RESET_PASSWORD_PASSWORD_MAXLENGTH': '100 chars maximum',\n\t\t'RESET_PASSWORD_PASSWORD_CONFIRM': 'Password confirmation',\n\t\t'RESET_PASSWORD_PASSWORD_CONFIRM_REQUIRED': 'Confirmation is required',\n\t\t'RESET_PASSWORD_PASSWORD_CONFIRM_MATCH': 'Confirmation does not match',\n\t\t'RESET_PASSWORD_ERROR': 'There was an error, please contact adminstrator',\n\t\t'RESET_PASSWORD_MESSAGE_FOR_MOBILE_USER': 'You can now signin into the mobile application'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('RecoverPasswordCtrl', [\"Principal\", function(Principal) {\n\tvar ctrl = this;\n\tctrl.recover = function(userEmail) {\n\t\tctrl.recoverSuccess = false;\n\t\tctrl.recoverError = false;\n\t\tctrl.errorEmailNotExists = false;\n\t\tctrl.loading = true;\n\t\tPrincipal.resetPasswordInit(userEmail).then(function() {\n\t\t\tctrl.recoverSuccess = true;\n\t\t}).catch(function(response) {\n\t\t\tif (response.status === 400 && response.data === 'e-mail address not registered') {\n\t\t\t\tctrl.errorEmailNotExists = true;\n\t\t\t} else {\n\t\t\t\tctrl.recoverError = true;\n\t\t\t}\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('ResetPasswordCtrl', [\"$location\", \"$state\", \"Principal\", function($location, $state, Principal) {\n\tvar ctrl = this;\n\tctrl.loading = false;\n\tctrl.resetError = false;\n\tctrl.messageForMobileUser = false;\n\tctrl.resetPassword = function(newPassword) {\n\t\tctrl.loading = true;\n\t\tPrincipal.resetPasswordFinish({\n\t\t\tkey: $location.search().key,\n\t\t\tnewPassword: newPassword\n\t\t}).then(function() {\n\t\t\tconsole.log('everything is awesome');\n\t\t\tvar origin = $location.search().origin;\n\t\t\tconsole.log('origin', origin);\n\t\t\tif (origin === 'front') {\n\t\t\t\t$state.go('^.signin');\n\t\t\t} else if (origin === 'mobile') {\n\t\t\t\tctrl.messageForMobileUser = true;\n\t\t\t}\n\t\t}, function() {\n\t\t\tctrl.resetError = true;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('SigninCtrl', [\"$rootScope\", \"$state\", \"Auth\", function($rootScope, $state, Auth) {\n\tvar ctrl = this;\n\tctrl.signin = function(userName, userPassword) {\n\t\tctrl.authenticationError = false;\n\t\tAuth.login({\n\t\t\tusername: userName,\n\t\t\tpassword: userPassword\n\t\t}).then(function() {\n\t\t\tif ($rootScope.previousStateName === 'auth.signin' || $state.get($rootScope.previousStateName) === null) {\n\t\t\t\t$state.go('app.main');\n\t\t\t} else {\n\t\t\t\t$state.go($rootScope.previousStateName, $rootScope.previousStateParams);\n\t\t\t}\n\t\t}).catch(function() {\n\t\t\tctrl.authenticationError = true;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').component('binaryFileDefinition', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.binaryFileDefinition;\n\t}],\n\tbindings: {\n\t\tafterUploadCallback: '&?',\n\t\tfilePattern: '@',\n\t\tlabelKey: '@'\n\t},\n\trequire: {\n\t\tngModel: 'ngModel'\n\t},\n\tcontroller: [\"binaryFileService\", function(binaryFileService) {\n\t\tvar ctrl = this;\n\t\tctrl.isPicture = ctrl.filePattern === 'image/*';\n\t\tctrl.ongoingUpload = undefined;\n\t\tctrl.error = false;\n\t\tctrl.upload = function(file) {\n\t\t\tif (angular.isArray(file)) {\n\t\t\t\tfile = file[0];\n\t\t\t}\n\t\t\tctrl.ngModel.$setValidity('loading', false);\n\t\t\tctrl.error = false;\n\t\t\tctrl.ongoingUpload = binaryFileService.uploadFile(file, ctrl.isPicture);\n\t\t\tctrl.ongoingUpload.then(function(resp) {\n\t\t\t\tvar newFile = resp.data;\n\t\t\t\tif (ctrl.afterUploadCallback) {\n\t\t\t\t\treturn ctrl.afterUploadCallback({\n\t\t\t\t\t\tnewFile: newFile\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn newFile;\n\t\t\t}).then(function(newFile) {\n\t\t\t\tctrl.ngModel.$setViewValue(newFile);\n\t\t\t}, function() {\n\t\t\t\tctrl.error = true;\n\t\t\t\tctrl.ngModel.$setViewValue(undefined);\n\t\t\t}).finally(function() {\n\t\t\t\tctrl.ngModel.$setValidity('loading', true);\n\t\t\t\tctrl.ongoingUpload = undefined;\n\t\t\t});\n\t\t};\n\t\tctrl.resetFile = function() {\n\t\t\tctrl.ngModel.$setViewValue(undefined);\n\t\t};\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'CRUD_BACK_TO_LIST': 'Retour à la liste',\n\t\t'CRUD_CANCEL': 'Annuler',\n\t\t'CRUD_CONFIRM_DELETE': 'Confirmer la suppression',\n\t\t'CRUD_CONFIRM_EDIT': 'Editer',\n\t\t'CRUD_CONFIRM_EXPORT': 'Confirmer l\\'export',\n\t\t'CRUD_CONFIRM_IMPORT': 'Confirmer l\\'import',\n\t\t'CRUD_CONFIRM_SAVE': 'Créer',\n\t\t'CRUD_DELETE_MESSAGE': 'Etes-vous certain de vouloir supprimer ?',\n\t\t'CRUD_DELETE_SUCCESS': 'Suppression avec succès.',\n\t\t'CRUD_DELETE_ERROR': 'Erreur, impossible de supprimer.',\n\t\t'CRUD_EXPORT_XLS_MESSAGE': 'Vous vous apprétez à exporter toutes les données dans une feuille de calcul Excel (XLS).',\n\t\t'CRUD_EXPORT_XLS_SUCCESS': 'Exportation avec succès.',\n\t\t'CRUD_EXPORT_XLS_ERROR': 'Erreur, impossible d\\'exporter.',\n\t\t'CRUD_IMPORT_XLS_MESSAGE': 'Sélectionnez un fichier Excel puis validez pour un import massif de données.',\n\t\t'CRUD_IMPORT_XLS_SUCCESS': 'Importation avec succès.',\n\t\t'CRUD_IMPORT_XLS_ERROR': 'Erreur, impossible d\\'importer.',\n\t\t'CRUD_NEW': 'Nouveau',\n\t\t'CRUD_MASS_IMPORT': 'Import massif',\n\t\t'CRUD_MASS_EXPORT': 'Export massif',\n\t\t'CRUD_EDIT_SUCCESS': 'Enregistrement avec succès.',\n\t\t'CRUD_NEW_SUCCESS': 'Création avec succès.',\n\t\t'CRUD_SAVE_ERROR': 'Erreur, impossible de sauvegarder.',\n\t\t'CRUD_FORM_ERROR_REQUIRED': 'Le champs est obligatoire.',\n\t\t'CRUD_FORM_ERROR_NUMBER': 'Le champs est un nombre.',\n\t\t'CRUD_FORM_ERROR_MAXLENGTH': 'Le champs ne doit pas dépasser {{ maxlength }} caractères.',\n\t\t'CRUD_FORM_ERROR_EMAIL': 'Le format est invalide.',\n\t\t'CRUD_FORM_SEARCH': 'Recherche',\n\t\t'CRUD_FORM_SEARCH_SUBMIT': 'Rechercher',\n\t\t'CRUD_ACTION_VIEW': 'Détails',\n\t\t'CRUD_ACTION_EDIT': 'Editer',\n\t\t'CRUD_ACTION_DELETE': 'Supprimer'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'CRUD_BACK_TO_LIST': 'Back to list',\n\t\t'CRUD_CANCEL': 'Cancel',\n\t\t'CRUD_CONFIRM_DELETE': 'Confirm delete',\n\t\t'CRUD_CONFIRM_EDIT': 'Edit',\n\t\t'CRUD_CONFIRM_EXPORT': 'Confirm export',\n\t\t'CRUD_CONFIRM_IMPORT': 'Confirm import',\n\t\t'CRUD_CONFIRM_SAVE': 'Save',\n\t\t'CRUD_DELETE_MESSAGE': 'Are you sure you want to delete ?',\n\t\t'CRUD_DELETE_SUCCESS': 'Delete successfull.',\n\t\t'CRUD_DELETE_ERROR': 'Error, impossible to delete.',\n\t\t'CRUD_EXPORT_XLS_MESSAGE': 'You\\'re about to export all the data into an Excel spreadsheet (XLS).',\n\t\t'CRUD_EXPORT_XLS_SUCCESS': 'Export successfull.',\n\t\t'CRUD_EXPORT_XLS_ERROR': 'Error, impossible to export.',\n\t\t'CRUD_IMPORT_XLS_MESSAGE': 'Select an Excel file and submit in order to mass import data.',\n\t\t'CRUD_IMPORT_XLS_SUCCESS': 'Import successfull.',\n\t\t'CRUD_IMPORT_XLS_ERROR': 'Error, impossible to import.',\n\t\t'CRUD_NEW': 'New',\n\t\t'CRUD_MASS_IMPORT': 'Mass import',\n\t\t'CRUD_MASS_EXPORT': 'Mass export',\n\t\t'CRUD_EDIT_SUCCESS': 'Save successfull.',\n\t\t'CRUD_NEW_SUCCESS': 'Creation successful.',\n\t\t'CRUD_SAVE_ERROR': 'Error, impossible to save.',\n\t\t'CRUD_FORM_ERROR_REQUIRED': 'This field is required.',\n\t\t'CRUD_FORM_ERROR_NUMBER': 'This field is a number.',\n\t\t'CRUD_FORM_ERROR_MAXLENGTH': 'This field cannot be longer than {{ maxlength }} characters.',\n\t\t'CRUD_FORM_ERROR_EMAIL': 'Format is invalid.',\n\t\t'CRUD_FORM_SEARCH': 'Search',\n\t\t'CRUD_FORM_SEARCH_SUBMIT': 'Search',\n\t\t'CRUD_ACTION_VIEW': 'View details',\n\t\t'CRUD_ACTION_EDIT': 'Edit',\n\t\t'CRUD_ACTION_DELETE': 'Delete'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('btnConfirmEdit', [\"adamaConstant\", function(adamaConstant) {\n\treturn {\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.btnConfirmEdit;\n\t\t},\n\t\trestrict: 'E'\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').component('btnCreate', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.btnCreate;\n\t}],\n\ttransclude: true,\n\tbindings: {\n\t\tdisableCreate: '<',\n\t\tdisableMassImport: '<',\n\t\tdisableMassExport: '<',\n\t\tdisableAdditionnalAction: '<'\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').component('crudActionDropdown', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.crudActionDropdown;\n\t}],\n\ttransclude: true,\n\tbindings: {\n\t\trouteMapping: '<',\n\t\tdisableView: '<',\n\t\tdisableEdit: '<',\n\t\tdisableDelete: '<'\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').component('crudCustomFilter', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.crudCustomFilter;\n\t}],\n\tbindings: {\n\t\ttableParams: '<',\n\t\tsearchValue: '<',\n\t\tlabelKey: '@'\n\t},\n\tcontroller: function() {\n\t\tvar ctrl = this;\n\t\tctrl.displayFiltered = function() {\n\t\t\tctrl.tableParams.filter({\n\t\t\t\tbusiness: ctrl.searchValue\n\t\t\t});\n\t\t\tctrl.tableParams.page(1);\n\t\t\tctrl.tableParams.reload();\n\t\t};\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').controller('CrudDeleteCtrl', [\"$scope\", \"entity\", \"AlertService\", function($scope, entity, AlertService) {\n\tvar ctrl = this;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\tctrl.confirmDelete = function() {\n\t\tentity.$delete().then(function() {\n\t\t\tAlertService.success('CRUD_DELETE_SUCCESS');\n\t\t\t$scope.$close();\n\t\t}).catch(function() {\n\t\t\tAlertService.error('CRUD_DELETE_ERROR');\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudEditFullpageCtrl', [\"entity\", \"EntityGenericResource\", \"AlertService\", function(entity, EntityGenericResource, AlertService) {\n\tvar ctrl = this;\n\tctrl.isEdition = !!entity;\n\tctrl.entity = entity;\n\tctrl.save = function() {\n\t\tvar resourceAction;\n\t\tif (ctrl.isEdition) {\n\t\t\tresourceAction = EntityGenericResource.update;\n\t\t} else {\n\t\t\tresourceAction = EntityGenericResource.save;\n\t\t}\n\t\tresourceAction(ctrl.entity).$promise.then(function(newEntity) {\n\t\t\tif (ctrl.isEdition) {\n\t\t\t\tAlertService.success('CRUD_EDIT_SUCCESS');\n\t\t\t} else {\n\t\t\t\tAlertService.success('CRUD_NEW_SUCCESS');\n\t\t\t}\n\t\t\tctrl.entity = newEntity;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudEditCtrl', [\"$scope\", \"entity\", \"EntityGenericResource\", \"AlertService\", function($scope, entity, EntityGenericResource, AlertService) {\n\tvar ctrl = this;\n\tctrl.isEdition = !!entity;\n\tctrl.entity = entity;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\tctrl.save = function() {\n\t\tvar resourceAction;\n\t\tif (ctrl.isEdition) {\n\t\t\tresourceAction = EntityGenericResource.update;\n\t\t} else {\n\t\t\tresourceAction = EntityGenericResource.save;\n\t\t}\n\t\tresourceAction(ctrl.entity).$promise.then(function(newEntity) {\n\t\t\tif (ctrl.isEdition) {\n\t\t\t\tAlertService.success('CRUD_EDIT_SUCCESS');\n\t\t\t} else {\n\t\t\t\tAlertService.success('CRUD_NEW_SUCCESS');\n\t\t\t}\n\t\t\t$scope.$close(newEntity);\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudExportXlsCtrl', [\"$scope\", \"AlertService\", \"EntityGenericResource\", function($scope, AlertService, EntityGenericResource) {\n\tvar ctrl = this;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\tctrl.loading = false;\n\tctrl.confirmExportXls = function() {\n\t\tctrl.loading = true;\n\t\tEntityGenericResource.massExportXls().$promise.then(function(newEntity) {\n\t\t\tAlertService.success('CRUD_EXPORT_XLS_SUCCESS');\n\t\t\t$scope.$close(newEntity);\n\t\t}).catch(function() {\n\t\t\tAlertService.error('CRUD_EXPORT_XLS_ERROR');\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudImportXlsCtrl', [\"$scope\", \"AlertService\", \"EntityGenericResource\", function($scope, AlertService, EntityGenericResource) {\n\tvar ctrl = this;\n\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n\n\tctrl.loading = false;\n\tctrl.confirmImportXls = function() {\n\t\tvar file = ctrl.file;\n\t\tctrl.loading = true;\n\t\tEntityGenericResource.massImportXls({\n\t\t\tfile: file\n\t\t}).$promise.then(function() {\n\t\t\tAlertService.success('CRUD_IMPORT_XLS_SUCCESS');\n\t\t\t$scope.$close();\n\t\t}, function() {\n\t\t\tAlertService.error('CRUD_IMPORT_XLS_ERROR');\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudListCtrl', [\"EntityGenericResource\", \"NgTableParams\", function(EntityGenericResource, NgTableParams) {\n\t// TODO filter search results\n\tvar ctrl = this;\n\n\t// search data\n\tctrl.tableParams = new NgTableParams({}, {\n\t\ttotal: 0,\n\t\tgetData: function(params) {\n\t\t\tvar sort = params.sorting();\n\t\t\tvar sortValues = [];\n\t\t\tif (!angular.equals({}, sort)) {\n\t\t\t\tfor (var key in sort) {\n\t\t\t\t\tif (sort.hasOwnProperty(key)) {\n\t\t\t\t\t\tsortValues.push(key + ',' + sort[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar requestParams = angular.extend({}, {\n\t\t\t\tpage: params.page() - 1,\n\t\t\t\tsize: params.count(),\n\t\t\t\tsort: sortValues,\n\t\t\t\tsearch: params.filter().$\n\t\t\t}, params.filter().business);\n\t\t\treturn EntityGenericResource.query(requestParams).$promise.then(function(entities) {\n\t\t\t\tparams.total(entities.$metadata.totalItems);\n\t\t\t\treturn entities;\n\t\t\t});\n\t\t}\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').component('crudSearchField', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.crudSearchField;\n\t}],\n\tbindings: {\n\t\ttableParams: '<'\n\t},\n\tcontroller: function() {\n\t\tvar ctrl = this;\n\t\tctrl.search = function() {\n\t\t\tctrl.tableParams.filter({\n\t\t\t\t$: ctrl.searchValue\n\t\t\t});\n\t\t\tctrl.tableParams.page(1);\n\t\t\tctrl.tableParams.reload();\n\t\t};\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').controller('CrudViewFullpageCtrl', [\"entity\", function(entity) {\n\tvar ctrl = this;\n\tctrl.entity = entity;\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('CrudViewCtrl', [\"$scope\", \"entity\", function($scope, entity) {\n\tvar ctrl = this;\n\tctrl.entity = entity;\n\tctrl.dismiss = function() {\n\t\t$scope.$dismiss();\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnBackToList', [\"adamaConstant\", function(adamaConstant) {\n\treturn {\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.modalBtnBackToList;\n\t\t},\n\t\trestrict: 'E'\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnCancel', [\"adamaConstant\", function(adamaConstant) {\n\treturn {\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.modalBtnCancel;\n\t\t},\n\t\trestrict: 'E'\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmDelete', [\"adamaConstant\", function(adamaConstant) {\n\treturn {\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.modalBtnConfirmDelete;\n\t\t},\n\t\trestrict: 'E'\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmEdit', [\"adamaConstant\", function(adamaConstant) {\n\treturn {\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.modalBtnConfirmEdit;\n\t\t},\n\t\trestrict: 'E'\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmExportXls', [\"adamaConstant\", function(adamaConstant) {\n\treturn {\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.modalBtnConfirmExportXls;\n\t\t},\n\t\trestrict: 'E'\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('modalBtnConfirmImportXls', [\"adamaConstant\", function(adamaConstant) {\n\treturn {\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.modalBtnConfirmImportXls;\n\t\t},\n\t\trestrict: 'E'\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('dsAuthorities', [\"$parse\", \"adamaConstant\", function($parse, adamaConstant) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar authorities = adamaConstant.authorities;\n\t\t\t$parse(attrs.data).assign(scope, authorities);\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('dsBinaryFileUrl', [\"$parse\", \"binaryFileService\", function($parse, binaryFileService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar updateOutput = function(binaryFileList) {\n\t\t\t\tif (attrs.output) {\n\t\t\t\t\tbinaryFileList = angular.copy(binaryFileList);\n\t\t\t\t}\n\t\t\t\tif (!angular.isArray(binaryFileList)) {\n\t\t\t\t\tbinaryFileList = [binaryFileList];\n\t\t\t\t}\n\t\t\t\tbinaryFileService.initUrlForBinaryFiles(binaryFileList).then(function() {\n\t\t\t\t\tif (attrs.output) {\n\t\t\t\t\t\t$parse(attrs.output).assign(scope, binaryFileList);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tscope.$watch(attrs.input, function() {\n\t\t\t\tvar binaryFileList = $parse(attrs.input)(scope);\n\t\t\t\tif (binaryFileList) {\n\t\t\t\t\tupdateOutput(binaryFileList);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('dsLanguage', [\"$parse\", \"language\", function($parse, language) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tlanguage.getAll().then(function(languages) {\n\t\t\t\t$parse(attrs.data).assign(scope, languages);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('dsPrincipalIdentity', [\"$parse\", \"Principal\", function($parse, Principal) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tPrincipal.identity().then(function(account) {\n\t\t\t\t$parse(attrs.data).assign(scope, account);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('layoutFix', [\"$rootScope\", \"$timeout\", function($rootScope, $timeout) {\n\treturn {\n\t\tscope: {\n\t\t\taddEvent: '='\n\t\t},\n\t\trestrict: 'E',\n\t\tlink: function postLink(scope) {\n\t\t\tif (scope.addEvent) {\n\t\t\t\t$rootScope.$on('$viewContentLoaded', function() {\n\t\t\t\t\t$.AdminLTE.layout.fix();\n\t\t\t\t});\n\t\t\t}\n\t\t\t$timeout(function() {\n\t\t\t\t$.AdminLTE.layout.fix();\n\t\t\t}, 0);\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('lazyControl', [\"$rootScope\", \"$filter\", function($rootScope, $filter) {\n\tvar translateFilter = $filter('translate');\n\treturn {\n\t\tlink: function postLink(scope, element, attrs) {\n\t\t\tvar id, additionalLabelAttributes, labelScreenOnly, labelContainer;\n\t\t\tvar isPlaceholderForced = false;\n\t\t\tif (attrs.type === 'checkbox') {\n\t\t\t\telement.wrap('<div class=\"checkbox\"><label></label></div>');\n\t\t\t\telement.after('<span></span>');\n\t\t\t\tlabelContainer = element.next().eq(0);\n\t\t\t} else {\n\t\t\t\tid = attrs.ngModel.replace(/\\./g, '_');\n\t\t\t\tadditionalLabelAttributes = ' for=\"' + id + '\"';\n\t\t\t\tlabelScreenOnly = attrs.labelScreenOnly || false;\n\t\t\t\tif (labelScreenOnly) {\n\t\t\t\t\tadditionalLabelAttributes += ' class=\"sr-only\"';\n\t\t\t\t}\n\t\t\t\tif (attrs.placeholder) {\n\t\t\t\t\tisPlaceholderForced = true;\n\t\t\t\t}\n\t\t\t\telement.attr('id', id);\n\t\t\t\telement.addClass('form-control');\n\t\t\t\telement.wrap('<div class=\"form-group\"></div>');\n\t\t\t\telement.before('<label' + additionalLabelAttributes + '></label>');\n\t\t\t\tlabelContainer = element.prev().eq(0);\n\t\t\t}\n\t\t\tvar initLabelAndPlaceholder = function() {\n\t\t\t\tvar label = translateFilter(attrs.lazyControlLabelKey);\n\t\t\t\tlabelContainer.html(label);\n\t\t\t\tif (!isPlaceholderForced) {\n\t\t\t\t\telement.attr('placeholder', label);\n\t\t\t\t}\n\t\t\t};\n\t\t\tinitLabelAndPlaceholder();\n\t\t\t$rootScope.$on('$translateChangeSuccess', function() {\n\t\t\t\tinitLabelAndPlaceholder();\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').filter('min', function() {\n\treturn Math.min;\n});\n","'use strict';\n\nangular.module('adama-web').directive('hasAnyAuthority', [\"Principal\", function(Principal) {\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar setVisible = function() {\n\t\t\t\telement.removeClass('hidden');\n\t\t\t};\n\t\t\tvar setHidden = function() {\n\t\t\t\telement.addClass('hidden');\n\t\t\t};\n\t\t\tvar authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\t\t\tvar defineVisibility = function(reset) {\n\t\t\t\tvar result;\n\t\t\t\tif (reset) {\n\t\t\t\t\tsetVisible();\n\t\t\t\t}\n\n\t\t\t\tresult = Principal.hasAnyAuthority(authorities);\n\t\t\t\tif (result) {\n\t\t\t\t\tsetVisible();\n\t\t\t\t} else {\n\t\t\t\t\tsetHidden();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (authorities.length > 0) {\n\t\t\t\tdefineVisibility(true);\n\n\t\t\t\tscope.$watch(function() {\n\t\t\t\t\treturn Principal.isAuthenticated();\n\t\t\t\t}, function() {\n\t\t\t\t\tdefineVisibility(true);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').directive('hasAuthority', [\"Principal\", function(Principal) {\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar setVisible = function() {\n\t\t\t\telement.removeClass('hidden');\n\t\t\t};\n\t\t\tvar setHidden = function() {\n\t\t\t\telement.addClass('hidden');\n\t\t\t};\n\t\t\tvar authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\t\t\tvar defineVisibility = function(reset) {\n\n\t\t\t\tif (reset) {\n\t\t\t\t\tsetVisible();\n\t\t\t\t}\n\n\t\t\t\tPrincipal.hasAuthority(authority).then(function(result) {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tsetVisible();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetHidden();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (authority.length > 0) {\n\t\t\t\tdefineVisibility(true);\n\n\t\t\t\tscope.$watch(function() {\n\t\t\t\t\treturn Principal.isAuthenticated();\n\t\t\t\t}, function() {\n\t\t\t\t\tdefineVisibility(true);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-web').factory('authExpiredInterceptor', [\"$injector\", \"$q\", \"adamaConstant\", function($injector, $q, adamaConstant) {\n\tvar getHttpService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$http'));\n\t\t};\n\t}());\n\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\treturn {\n\t\tresponseError: function(response) {\n\t\t\tvar config = response.config;\n\t\t\tif (response.status === 401 && config && config.url.indexOf(adamaConstant.apiBase) === 0 && config.url.indexOf(adamaConstant.apiBase + 'login/authenticate') !== 0) {\n\t\t\t\tconsole.log('authExpiredInterceptor error 401, refresh token');\n\t\t\t\treturn getAdamaTokenService().refreshAndGetToken().then(function() {\n\t\t\t\t\tconsole.log('authExpiredInterceptor token is refresh, reset Authorization header');\n\t\t\t\t\tconfig.headers['Authorization'] = undefined;\n\t\t\t\t\treturn getHttpService()(config);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-web').factory('authInterceptor', [\"$injector\", \"adamaConstant\", function($injector, adamaConstant) {\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\treturn {\n\t\t// Add authorization token to headers\n\t\trequest: function(config) {\n\t\t\tconfig.headers = config.headers || {};\n\t\t\tif (!config.headers['Authorization'] && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\tconsole.log('authInterceptor need authorization, getting token');\n\t\t\t\treturn getAdamaTokenService().getToken().then(function(token) {\n\t\t\t\t\tconsole.log('add token to http config');\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn config;\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('errorHandlerInterceptor', [\"$q\", \"$rootScope\", function($q, $rootScope) {\n\treturn {\n\t\t'responseError': function(response) {\n\t\t\tif (!(response.status === 401 && response.data === 'Bad credentials')) {\n\t\t\t\t$rootScope.$emit('Adama.httpError', response);\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('notificationInterceptor', [\"$q\", \"AlertService\", function($q, AlertService) {\n\treturn {\n\t\tresponse: function(response) {\n\t\t\tvar alertKey = response.headers('X-Adama-alert');\n\t\t\tif (angular.isString(alertKey)) {\n\t\t\t\tAlertService.success(alertKey, {\n\t\t\t\t\tparam: response.headers('X-Adama-params')\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response;\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('User', [\"$resource\", \"adamaConstant\", \"adamaResourceConfig\", function($resource, adamaConstant, adamaResourceConfig) {\n\tvar config = angular.extend({}, adamaResourceConfig, {\n\t\tsave: {\n\t\t\tmethod: 'POST',\n\t\t\tparams: {\n\t\t\t\turlCreatePassword: '@urlCreatePassword'\n\t\t\t}\n\t\t}\n\t});\n\treturn $resource(adamaConstant.apiBase + 'users/:id', {}, config);\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('adamaResourceConfig', [\"ParseLinks\", \"pdfService\", function(ParseLinks, pdfService) {\n\treturn {\n\t\t'query': {\n\t\t\tmethod: 'GET',\n\t\t\tisArray: true,\n\t\t\ttransformResponse: function(data, headers, status) {\n\t\t\t\tdata = angular.fromJson(data);\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tdata.$metadata = {\n\t\t\t\t\t\tlinks: ParseLinks.parse(headers('link')),\n\t\t\t\t\t\ttotalItems: parseInt(headers('X-Total-Count'), 10)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t},\n\t\t\tinterceptor: {\n\t\t\t\tresponse: function(response) {\n\t\t\t\t\tresponse.resource.$metadata = response.data.$metadata;\n\t\t\t\t\treturn response.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'get': {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\t'save': {\n\t\t\tmethod: 'POST'\n\t\t},\n\t\t'update': {\n\t\t\tmethod: 'PUT'\n\t\t},\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tid: '@id'\n\t\t\t}\n\t\t},\n\t\t'massExportXls': {\n\t\t\tmethod: 'GET',\n\t\t\tresponseType: 'arraybuffer',\n\t\t\tparams: {\n\t\t\t\tall: true\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/vnd.ms-excel'\n\t\t\t},\n\t\t\ttransformResponse: pdfService.transformResponseToPdf\n\t\t},\n\t\t'massImportXls': {\n\t\t\tmethod: 'POST',\n\t\t\tparams: {\n\t\t\t\tmethod: 'import-xls'\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\t'Content-Type': undefined\n\t\t\t},\n\t\t\ttransformRequest: function(data) {\n\t\t\t\tvar formData = new window.FormData();\n\t\t\t\tvar file = data.file;\n\t\t\t\tformData.append('file', file, file.name);\n\t\t\t\treturn formData;\n\t\t\t}\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-web').factory('adamaTokenService', [\"$rootScope\", \"$http\", \"$q\", \"$state\", \"jwtHelper\", \"localStorageService\", \"adamaConstant\", function($rootScope, $http, $q, $state, jwtHelper, localStorageService, adamaConstant) {\n\tvar api = {};\n\n\tvar getPayload = function(key) {\n\t\treturn api.getToken().then(function(token) {\n\t\t\tif (token) {\n\t\t\t\tvar tokenPayload = jwtHelper.decodeToken(token);\n\t\t\t\tif (key) {\n\t\t\t\t\treturn tokenPayload[key];\n\t\t\t\t}\n\t\t\t\treturn tokenPayload;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t};\n\n\tapi.getUsername = function() {\n\t\treturn getPayload('sub');\n\t};\n\n\tapi.setToken = function(token) {\n\t\tlocalStorageService.set('token', token);\n\t};\n\n\tapi.setRefreshToken = function(token) {\n\t\tlocalStorageService.set('refresh_token', token);\n\t};\n\n\tapi.getToken = function() {\n\t\tvar token = localStorageService.get('token');\n\t\tif (token && jwtHelper.isTokenExpired(token)) {\n\t\t\tconsole.log('adamaTokenService.getToken token is expired');\n\t\t\treturn api.refreshAndGetToken();\n\t\t}\n\t\treturn $q.when(token);\n\t};\n\n\tapi.refreshAndGetToken = function() {\n\t\tvar token = localStorageService.get('token');\n\t\tif (!token) {\n\t\t\tconsole.error('no token, redirect to signin');\n\t\t\t$state.go('auth.signin');\n\t\t\treturn $q.reject('refreshAndGetToken : no token');\n\t\t}\n\t\tvar refreshToken = localStorageService.get('refresh_token');\n\t\treturn $http({\n\t\t\tmethod: 'POST',\n\t\t\turl: adamaConstant.apiBase + 'login/refresh',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t'refresh_token': refreshToken\n\t\t\t}\n\t\t}).then(function(response) {\n\t\t\tvar data = response.data;\n\t\t\tvar newToken = data['access_token'];\n\t\t\tapi.setToken(newToken);\n\t\t\treturn newToken;\n\t\t}, function(rejection) {\n\t\t\tconsole.error('error while refreshing user token, redirect to signin', rejection);\n\t\t\t$state.go('auth.signin');\n\t\t\tapi.setToken(undefined);\n\t\t\treturn $q.reject(rejection);\n\t\t});\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').constant('adamaConstant', {\n\tapiBase: 'http://localhost:13337/',\n\tadamaWebToolkitTemplateUrl: {\n\t\tpassword: 'adama-web/account/password/password.html',\n\t\tsettings: 'adama-web/account/settings/settings.html',\n\t\tadamaAlertError: 'adama-web/alert/adama-alert-error.html',\n\t\tadamaAlert: 'adama-web/alert/adama-alert.html',\n\t\tarkFooter: 'adama-web/ark/ark-footer/ark-footer.html',\n\t\tarkHeader: 'adama-web/ark/ark-header/ark-header.html',\n\t\tlanguageSelector: 'adama-web/ark/language-selector/language-selector.html',\n\t\tmainNavigation: 'adama-web/ark/menu/main-navigation.html',\n\t\tselectAll: 'adama-web/ark/select-all/select-all.html',\n\t\tuserInfo: 'adama-web/ark/user-info/user-info.html',\n\t\tviewAttribute: 'adama-web/ark/view-attribute/view-attribute.html',\n\t\tresetPassword: 'adama-web/auth/resetPassword.html',\n\t\tsignin: 'adama-web/auth/signin.html',\n\t\trecoverPassword: 'adama-web/auth/recoverPassword.html',\n\t\taccessDenied: 'adama-web/auth/accessDenied.html',\n\t\tbinaryFileDefinition: 'adama-web/binary-file-definition/binary-file-definition.html',\n\t\tbtnConfirmEdit: 'adama-web/crud/btn-confirm-edit.html',\n\t\tbtnCreate: 'adama-web/crud/btn-create.html',\n\t\tcrudActionDropdown: 'adama-web/crud/crud-action-dropdown.html',\n\t\tcrudCustomFilter: 'adama-web/crud/crud-custom-filter.html',\n\t\tcrudSearchField: 'adama-web/crud/crud-search-field.html',\n\t\tmodalBtnConfirmDelete: 'adama-web/crud/modal-btn-confirm-delete.html',\n\t\tmodalBtnCancel: 'adama-web/crud/modal-btn-cancel.html',\n\t\tmodalBtnBackToList: 'adama-web/crud/modal-btn-back-to-list.html',\n\t\tmodalBtnConfirmEdit: 'adama-web/crud/modal-btn-confirm-edit.html',\n\t\tmodalBtnConfirmExportXls: 'adama-web/crud/modal-btn-confirm-export-xls.html',\n\t\tmodalBtnConfirmImportXls: 'adama-web/crud/modal-btn-confirm-import-xls.html',\n\t\tusers: 'adama-web/user/user-list.html',\n\t\tuserEdit: 'adama-web/user/user-edit.html',\n\t\tuserCreate: 'adama-web/user/user-edit.html',\n\t\tuserView: 'adama-web/user/user-view.html',\n\t\tuserDelete: 'adama-web/user/user-delete.html',\n\t\tusersImportXls: 'adama-web/user/user-import-xls.html',\n\t\tusersExportXls: 'adama-web/user/user-export-xls.html'\n\t},\n\tauthorities: ['ROLE_ADMIN', 'ROLE_USER', 'ROLE_MANAGER'],\n\tuserAuthorities: ['ROLE_MANAGER', 'ROLE_ADMIN'],\n\turlCreatePassword: 'replace/me/with/your/project/specific/url/reset-password.html?origin=front'\n});\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-web').factory('authBackendService', [\"$http\", \"adamaConstant\", \"adamaTokenService\", function loginService($http, adamaConstant, adamaTokenService) {\n\tvar api = {};\n\n\tapi.login = function(credentials) {\n\t\treturn $http.post(adamaConstant.apiBase + 'login/authenticate', {\n\t\t\tusername: credentials.username,\n\t\t\tpassword: credentials.password\n\t\t}).then(function(response) {\n\t\t\tvar data = response.data;\n\t\t\tadamaTokenService.setToken(data['access_token']);\n\t\t\tadamaTokenService.setRefreshToken(data['refresh_token']);\n\t\t});\n\t};\n\n\tapi.logout = function() {\n\t\tadamaTokenService.setToken(undefined);\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('Auth', [\"$rootScope\", \"$state\", \"$q\", \"$translate\", \"Principal\", \"authBackendService\", function Auth($rootScope, $state, $q, $translate, Principal, authBackendService) {\n\tvar api = {};\n\n\tapi.login = function(credentials) {\n\t\tvar deferred = $q.defer();\n\n\t\tauthBackendService.login(credentials).then(function(data) {\n\t\t\t// retrieve the logged account information\n\t\t\tPrincipal.identity(true).then(function(account) {\n\t\t\t\t// After the login the language will be changed to\n\t\t\t\t// the language selected by the user during his\n\t\t\t\t// registration\n\t\t\t\tif (account.langKey) {\n\t\t\t\t\t$translate.use(account.langKey);\n\t\t\t\t}\n\t\t\t\tdeferred.resolve(data);\n\t\t\t});\n\t\t}).catch(function(err) {\n\t\t\tapi.logout();\n\t\t\tdeferred.reject(err);\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\tapi.logout = function() {\n\t\tauthBackendService.logout();\n\t\tPrincipal.authenticate(null);\n\t\t// Reset state memory\n\t\t$rootScope.previousStateName = undefined;\n\t\t$rootScope.previousStateNameParams = undefined;\n\t};\n\n\treturn api;\n}]);\n","/*jshint bitwise: false*/\n'use strict';\n\nangular.module('adama-web').service('Base64', function() {\n\tvar keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\tthis.encode = function(input) {\n\t\tvar output = '';\n\t\tvar chr1, chr2, enc1, enc2, enc3;\n\t\tvar chr3 = '';\n\t\tvar enc4 = '';\n\t\tvar i = 0;\n\n\t\twhile (i < input.length) {\n\t\t\tchr1 = input.charCodeAt(i++);\n\t\t\tchr2 = input.charCodeAt(i++);\n\t\t\tchr3 = input.charCodeAt(i++);\n\n\t\t\tenc1 = chr1 >> 2;\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n\t\t\tenc4 = chr3 & 63;\n\n\t\t\tif (isNaN(chr2)) {\n\t\t\t\tenc3 = enc4 = 64;\n\t\t\t} else if (isNaN(chr3)) {\n\t\t\t\tenc4 = 64;\n\t\t\t}\n\n\t\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n\t\t\tchr1 = chr2 = chr3 = '';\n\t\t\tenc1 = enc2 = enc3 = enc4 = '';\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tthis.decode = function(input) {\n\t\tvar output = '';\n\t\tvar chr1, chr2, enc1, enc2, enc3;\n\t\tvar chr3 = '';\n\t\tvar enc4 = '';\n\t\tvar i = 0;\n\n\t\t// remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n\t\twhile (i < input.length) {\n\t\t\tenc1 = keyStr.indexOf(input.charAt(i++));\n\t\t\tenc2 = keyStr.indexOf(input.charAt(i++));\n\t\t\tenc3 = keyStr.indexOf(input.charAt(i++));\n\t\t\tenc4 = keyStr.indexOf(input.charAt(i++));\n\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\n\n\t\t\toutput = output + String.fromCharCode(chr1);\n\n\t\t\tif (enc3 !== 64) {\n\t\t\t\toutput = output + String.fromCharCode(chr2);\n\t\t\t}\n\t\t\tif (enc4 !== 64) {\n\t\t\t\toutput = output + String.fromCharCode(chr3);\n\t\t\t}\n\n\t\t\tchr1 = chr2 = chr3 = '';\n\t\t\tenc1 = enc2 = enc3 = enc4 = '';\n\t\t}\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').factory('binaryFileService', [\"$http\", \"$q\", \"Upload\", \"adamaConstant\", function($http, $q, Upload, adamaConstant) {\n\tvar api = {};\n\n\tapi.initUrlForBinaryFiles = function(binaryFileList) {\n\t\tvar workingList = [];\n\t\tvar idList = [];\n\t\tangular.forEach(binaryFileList, function(binaryFile) {\n\t\t\tif (binaryFile && binaryFile.id && !binaryFile.url) {\n\t\t\t\tworkingList.push(binaryFile);\n\t\t\t\tidList.push(binaryFile.id);\n\t\t\t}\n\t\t});\n\t\tif (idList.length) {\n\t\t\treturn $http({\n\t\t\t\tmethod: 'PUT',\n\t\t\t\turl: adamaConstant.apiBase + 'files',\n\t\t\t\tdata: idList\n\t\t\t}).then(function(response) {\n\t\t\t\tangular.forEach(workingList, function(binaryFile) {\n\t\t\t\t\tbinaryFile.url = response.data.urlList[binaryFile.id];\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn $q.when();\n\t};\n\n\tapi.uploadFile = function(file, isPicture) {\n\t\treturn Upload.upload({\n\t\t\turl: adamaConstant.apiBase + 'files?isPicture=' + isPicture,\n\t\t\tdata: {\n\t\t\t\tfile: file\n\t\t\t},\n\t\t\tdisableProgress: true\n\t\t});\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').provider('language', function() {\n\tvar languages = ['en', 'fr'];\n\tvar selectorData = [{\n\t\tcode: 'en',\n\t\tlabelKey: 'FLAG_EN',\n\t\tcssCLass: 'us'\n\t}, {\n\t\tcode: 'fr',\n\t\tlabelKey: 'FLAG_FR',\n\t\tcssCLass: 'fr'\n\t}];\n\n\tthis.setLanguages = function(newLanguages) {\n\t\tlanguages = newLanguages;\n\t};\n\n\tthis.setSelectorData = function(newSelectorData) {\n\t\tselectorData = newSelectorData;\n\t};\n\n\tthis.$get = [\"$q\", \"$http\", \"$translate\", function($q, $http, $translate) {\n\t\tvar api = {};\n\n\t\tapi.getCurrent = function() {\n\t\t\tvar language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\t\t\tif (angular.isUndefined(language)) {\n\t\t\t\tlanguage = 'en';\n\t\t\t}\n\t\t\treturn $q.when(language);\n\t\t};\n\n\t\tapi.getAll = function() {\n\t\t\treturn $q.when(languages);\n\t\t};\n\n\t\tapi.getSelectorData = function() {\n\t\t\treturn $q.when(selectorData);\n\t\t};\n\n\t\treturn api;\n\t}];\n});\n","'use strict';\n\nangular.module('adama-web').service('ParseLinks', function() {\n\tthis.parse = function(header) {\n\t\tif (header.length === 0) {\n\t\t\tthrow new Error('input must not be of zero length');\n\t\t}\n\n\t\t// Split parts by comma\n\t\tvar parts = header.split(',');\n\t\tvar links = {};\n\t\t// Parse each part into a named link\n\t\tangular.forEach(parts, function(p) {\n\t\t\tvar section = p.split(';');\n\t\t\tif (section.length !== 2) {\n\t\t\t\tthrow new Error('section could not be split on \";\"');\n\t\t\t}\n\t\t\tvar url = section[0].replace(/<(.*)>/, '$1').trim();\n\t\t\tvar queryString = {};\n\t\t\turl.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function($0, $1, $2, $3) {\n\t\t\t\tqueryString[$1] = $3;\n\t\t\t});\n\t\t\tvar page = queryString.page;\n\t\t\tif (angular.isString(page)) {\n\t\t\t\tpage = parseInt(page);\n\t\t\t}\n\t\t\tvar name = section[1].replace(/rel='(.*)'/, '$1').trim();\n\t\t\tlinks[name] = page;\n\t\t});\n\n\t\treturn links;\n\t};\n});\n","'use strict';\n\nangular.module('adama-web').factory('pdfService', [\"FileSaver\", function(FileSaver) {\n\tvar api = {};\n\n\tapi.transformResponseToPdf = function(data, headersGetter, status) {\n\t\tif (status === 200) {\n\t\t\tvar dataBlob = new Blob([data], {\n\t\t\t\ttype: 'application/pdf'\n\t\t\t});\n\t\t\tvar contentDisposition = headersGetter('Content-Disposition');\n\t\t\tvar filename;\n\t\t\tif (contentDisposition) {\n\t\t\t\tfilename = contentDisposition.substring('attachment;filename = '.length);\n\t\t\t}\n\t\t\tif (!filename) {\n\t\t\t\tfilename = 'file.pdf';\n\t\t\t}\n\t\t\tFileSaver.saveAs(dataBlob, filename);\n\t\t}\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').factory('Principal', [\"$http\", \"$q\", \"$rootScope\", \"$resource\", \"$state\", \"adamaConstant\", \"adamaTokenService\", function($http, $q, $rootScope, $resource, $state, adamaConstant, adamaTokenService) {\n\tvar Password = $resource(adamaConstant.apiBase + 'account/change_password');\n\tvar PasswordResetInit = $resource(adamaConstant.apiBase + 'account/reset_password/init', {}, {});\n\tvar PasswordResetFinish = $resource(adamaConstant.apiBase + 'account/reset_password/finish');\n\n\tvar _identity;\n\tvar _authenticated = false;\n\n\tvar api = {};\n\n\tapi.isIdentityResolved = function() {\n\t\treturn angular.isDefined(_identity);\n\t};\n\n\tapi.isAuthenticated = function() {\n\t\treturn _authenticated;\n\t};\n\n\tapi.hasAuthority = function(authority) {\n\t\tif (!_authenticated) {\n\t\t\treturn $q.when(false);\n\t\t}\n\t\treturn this.identity().then(function(_id) {\n\t\t\treturn _id.authority && _id.authority === authority;\n\t\t}, function() {\n\t\t\treturn false;\n\t\t});\n\t};\n\n\tapi.hasAnyAuthority = function(authorities) {\n\t\tif (!_authenticated || !_identity || !_identity.authority) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < authorities.length; i++) {\n\t\t\tif (_identity.authority === authorities[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tapi.authenticate = function(identity) {\n\t\t_identity = identity;\n\t\t_authenticated = identity !== null;\n\t};\n\n\tapi.identity = function(force) {\n\t\tvar deferred = $q.defer();\n\n\t\tif (force === true) {\n\t\t\t_identity = undefined;\n\t\t}\n\n\t\t// check and see if we have retrieved the identity data from the\n\t\t// server.\n\t\t// if we have, reuse it by immediately resolving\n\t\tif (angular.isDefined(_identity)) {\n\t\t\tdeferred.resolve(_identity);\n\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\t// retrieve the identity data from the server, update the\n\t\t// identity object, and then resolve.\n\n\t\t// from jwt token : sub\n\t\t// users/byLogin/:sub\n\t\tadamaTokenService.getUsername().then(function(username) {\n\t\t\tif (username) {\n\t\t\t\treturn $http({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: adamaConstant.apiBase + 'users/byLogin/' + username\n\t\t\t\t}).then(function(response) {\n\t\t\t\t\treturn response.data;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn $q.reject('not connected');\n\t\t}).then(function(account) {\n\t\t\t_identity = account;\n\t\t\t_authenticated = true;\n\t\t\tdeferred.resolve(_identity);\n\t\t}, function() {\n\t\t\t_identity = null;\n\t\t\t_authenticated = false;\n\t\t\tdeferred.resolve(_identity);\n\t\t});\n\n\t\treturn deferred.promise;\n\t};\n\n\tapi.authorize = function(force) {\n\t\treturn api.identity(force).then(function() {\n\t\t\tvar isAuthenticated = api.isAuthenticated();\n\t\t\t// an authenticated user can't access to login pages\n\t\t\tif (isAuthenticated && $rootScope.toState.name && $rootScope.toState.name === 'auth.signin') {\n\t\t\t\tconsole.log('redirect to main as user is authenticated and is trying to access signin');\n\t\t\t\treturn $state.go('app.main', {}, {\n\t\t\t\t\tlocation: 'replace'\n\t\t\t\t});\n\t\t\t}\n\t\t\tif ((!$rootScope.toState.data || !$rootScope.toState.data.authorities) && !isAuthenticated) {\n\t\t\t\t// user is not signed in but desired state needs an\n\t\t\t\t// authenticated user\n\t\t\t\tconsole.log('redirect to signin as user is not authenticated and page is restricted (default conf with no authorities on state)');\n\t\t\t\treturn $state.go('auth.signin', {}, {\n\t\t\t\t\tlocation: 'replace'\n\t\t\t\t});\n\t\t\t}\n\t\t\tif ($rootScope.toState.data && //\n\t\t\t\t$rootScope.toState.data.authorities && //\n\t\t\t\t$rootScope.toState.data.authorities.length > 0 && //\n\t\t\t\t!api.hasAnyAuthority($rootScope.toState.data.authorities) //\n\t\t\t) {\n\t\t\t\tif (isAuthenticated) {\n\t\t\t\t\t// user is signed in but not authorized for\n\t\t\t\t\t// desired state\n\t\t\t\t\tconsole.log('redirect to accessDenied as user is authenticated and does not have right privileges');\n\t\t\t\t\treturn $state.go('auth.accessDenied', {}, {\n\t\t\t\t\t\tlocation: 'replace'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// user is not authenticated. stow the state\n\t\t\t\t// they wanted before you\n\t\t\t\t// send them to the signin state, so you can\n\t\t\t\t// return them when you're done\n\t\t\t\t$rootScope.previousStateName = $rootScope.toState;\n\t\t\t\t$rootScope.previousStateNameParams = $rootScope.toStateParams;\n\t\t\t\t// now, send them to the signin state so they\n\t\t\t\t// can log in\n\t\t\t\tconsole.log('redirect to signin as user is not authenticated and page is restricted (conf with explicit authorities on state)');\n\t\t\t\treturn $state.go('auth.signin', {}, {\n\t\t\t\t\tlocation: 'replace'\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tapi.updateAccount = function(account) {\n\t\treturn $http({\n\t\t\tmethod: 'PUT',\n\t\t\turl: adamaConstant.apiBase + 'users',\n\t\t\tdata: {\n\t\t\t\tuser: account\n\t\t\t}\n\t\t}).then(function() {\n\t\t\t$rootScope.$emit('auth.updateAccount', {\n\t\t\t\taccount: account\n\t\t\t});\n\t\t\treturn account;\n\t\t});\n\t};\n\n\tapi.changePassword = function(newPassword) {\n\t\treturn Password.save(newPassword).$promise;\n\t};\n\n\tapi.resetPasswordInit = function(mail) {\n\t\treturn PasswordResetInit.save({\n\t\t\tmail: mail,\n\t\t\turlResetPassword: adamaConstant.urlCreatePassword\n\t\t}).$promise;\n\t};\n\n\tapi.resetPasswordFinish = function(keyAndPassword) {\n\t\treturn PasswordResetFinish.save(keyAndPassword).$promise;\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('app.user', {\n\t\turl: '/users',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.users;\n\t\t},\n\t\tcontroller: 'CrudListCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tresolve: {\n\t\t\tEntityGenericResource: [\"User\", function(User) {\n\t\t\t\treturn User;\n\t\t\t}]\n\t\t},\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_LIST',\n\t\t\tauthorities: adamaConstant.userAuthorities\n\t\t}\n\t});\n\n\tvar openModal = function($state, $uibModal, $stateParams, controllerName, templateUrl) {\n\t\tvar resolveEntity;\n\t\tif ($stateParams) {\n\t\t\tresolveEntity = /* @ngInject */ [\"User\", function(User) {\n\t\t\t\treturn User.get({\n\t\t\t\t\tid: $stateParams.id\n\t\t\t\t}).$promise;\n\t\t\t}];\n\t\t}\n\t\t$uibModal.open({\n\t\t\ttemplateUrl: templateUrl,\n\t\t\tresolve: {\n\t\t\t\tentity: resolveEntity,\n\t\t\t\tEntityGenericResource: [\"User\", function(User) {\n\t\t\t\t\treturn User;\n\t\t\t\t}]\n\t\t\t},\n\t\t\tcontroller: controllerName + ' as ctrl'\n\t\t}).result.then(function() {\n\t\t\t$state.go('^', {}, {\n\t\t\t\treload: true\n\t\t\t});\n\t\t}).catch(function() {\n\t\t\t$state.go('^');\n\t\t});\n\t};\n\n\t$stateProvider.state('app.user.edit', {\n\t\turl: '/edit/:id',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"$stateParams\", \"adamaConstant\", function($state, $uibModal, $stateParams, adamaConstant) {\n\t\t\topenModal($state, $uibModal, $stateParams, 'CrudEditCtrl', adamaConstant.adamaWebToolkitTemplateUrl.userEdit);\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_EDIT',\n\t\t\tauthorities: adamaConstant.userAuthorities\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.create', {\n\t\turl: '/new',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"adamaConstant\", function($state, $uibModal, adamaConstant) {\n\t\t\topenModal($state, $uibModal, undefined, 'CrudEditCtrl', adamaConstant.adamaWebToolkitTemplateUrl.userCreate);\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_NEW',\n\t\t\tauthorities: adamaConstant.userAuthorities\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.view', {\n\t\turl: '/view/:id',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"$stateParams\", \"adamaConstant\", function($state, $uibModal, $stateParams, adamaConstant) {\n\t\t\topenModal($state, $uibModal, $stateParams, 'CrudViewCtrl', adamaConstant.adamaWebToolkitTemplateUrl.userView);\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_VIEW',\n\t\t\tauthorities: adamaConstant.userAuthorities\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.delete', {\n\t\turl: '/delete/:id',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"$stateParams\", \"adamaConstant\", function($state, $uibModal, $stateParams, adamaConstant) {\n\t\t\topenModal($state, $uibModal, $stateParams, 'CrudDeleteCtrl', adamaConstant.adamaWebToolkitTemplateUrl.userDelete);\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_DELETE',\n\t\t\tauthorities: adamaConstant.userAuthorities\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.importXls', {\n\t\turl: '/import-xls',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"adamaConstant\", function($state, $uibModal, adamaConstant) {\n\t\t\topenModal($state, $uibModal, undefined, 'CrudImportXlsCtrl', adamaConstant.adamaWebToolkitTemplateUrl.usersImportXls);\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_IMPORT_XLS',\n\t\t\tauthorities: adamaConstant.userAuthorities\n\t\t}\n\t});\n\n\t$stateProvider.state('app.user.exportXls', {\n\t\turl: '/export-xls',\n\t\tonEnter: [\"$state\", \"$uibModal\", \"adamaConstant\", function($state, $uibModal, adamaConstant) {\n\t\t\topenModal($state, $uibModal, undefined, 'CrudExportXlsCtrl', adamaConstant.adamaWebToolkitTemplateUrl.usersExportXls);\n\t\t}],\n\t\tdata: {\n\t\t\tpageTitle: 'USER_TITLE_EXPORT_XLS',\n\t\t\tauthorities: adamaConstant.userAuthorities\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\terror: {\n\t\t\tuserexists: 'Login déjà utilisé !',\n\t\t\temailexists: 'E-mail déjà utilisé !'\n\t\t},\n\t\t'USER_MENU': 'Utilisateurs',\n\t\t'USER_TITLE_DELETE': 'Suppression d\\'un utilisateur',\n\t\t'USER_TITLE_VIEW': 'Détails d\\'un utilisateur',\n\t\t'USER_TITLE_LIST': 'Liste des utilisateurs',\n\t\t'USER_TITLE_EDIT': 'Editer un utilisateur',\n\t\t'USER_TITLE_NEW': 'Créer un utilisateur',\n\t\t'USER_TITLE_IMPORT_XLS': 'Importer en masse des utilisateurs',\n\t\t'USER_TITLE_EXPORT_XLS': 'Exporter en masse des utilisateurs',\n\n\t\t'USER_FORM_LOGIN': 'Identifiant',\n\t\t'USER_FORM_FIRSTNAME': 'Prénom',\n\t\t'USER_FORM_LASTNAME': 'Nom de famille',\n\t\t'USER_FORM_EMAIL': 'Email',\n\t\t'USER_FORM_LANGUAGE': 'Langue',\n\t\t'USER_FORM_AUTHORITY': 'Rôle',\n\n\t\t'USER_LIST_LOGIN': 'Identifiant',\n\t\t'USER_LIST_MAIL': 'Email',\n\t\t'USER_LIST_LANGUAGE': 'Langue',\n\t\t'USER_LIST_AUTHORITY': 'Rôle'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\terror: {\n\t\t\tuserexists: 'Login name already used!',\n\t\t\temailexists: 'E-mail is already in use!'\n\t\t},\n\t\t'USER_MENU': 'Users',\n\t\t'USER_TITLE_DELETE': 'User delete',\n\t\t'USER_TITLE_VIEW': 'User details',\n\t\t'USER_TITLE_LIST': 'User list',\n\t\t'USER_TITLE_EDIT': 'User edition',\n\t\t'USER_TITLE_NEW': 'User creation',\n\t\t'USER_TITLE_IMPORT_XLS': 'Users mass import',\n\t\t'USER_TITLE_EXPORT_XLS': 'Users mass export',\n\n\t\t'USER_FORM_LOGIN': 'Login',\n\t\t'USER_FORM_FIRSTNAME': 'Firstname',\n\t\t'USER_FORM_LASTNAME': 'Lastname',\n\t\t'USER_FORM_EMAIL': 'Email',\n\t\t'USER_FORM_LANGUAGE': 'Language',\n\t\t'USER_FORM_AUTHORITY': 'Authority',\n\n\t\t'USER_LIST_LOGIN': 'Login',\n\t\t'USER_LIST_MAIL': 'Email',\n\t\t'USER_LIST_LANGUAGE': 'Language',\n\t\t'USER_LIST_AUTHORITY': 'Authority'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('app.personal.password', {\n\t\turl: '/password',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.password;\n\t\t},\n\t\tcontroller: 'PasswordCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCOUNT_PASSWORD'\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'ACCOUNT_PASSWORD': 'Modifier mon mot de passe',\n\t\t'ACCOUNT_PASSWORD_TITLE': 'Modifier mon mot de passe',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD': 'Mot de passe',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_PLACEHOLDER': 'Mot de passe ?',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MINLENGTH': 'Le mot de passe doit être composé d\\'au moins 5 caractères.',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MAXLENGTH': 'Le mot de passe doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD': 'Confirmation du mot de passe',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PLACEHOLDER': 'Confirmation du mot de passe ?',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_REQUIRED': 'La confirmation du mot de passe est obligatoire',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MINLENGTH': 'La confirmation du mot de passe doit être composé d\\'au moins 5 caractères.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MAXLENGTH': 'La confirmation du mot de passe doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PATTERN': 'Les mots de passe ne sont pas égaux.',\n\t\t'ACCOUNT_PASSWORD_SUBMIT': 'Enregistrer',\n\t\t'ACCOUNT_PASSWORD_SAVE_SUCCESS': 'Le mot de passe a été changé avec succès.',\n\t\t'ACCOUNT_PASSWORD_SAVE_ERROR': 'Le mot de passe n\\'a pu être changé.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'ACCOUNT_PASSWORD': 'Change my password',\n\t\t'ACCOUNT_PASSWORD_TITLE': 'Change my password',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD': 'Password',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_PLACEHOLDER': 'Password ?',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_REQUIRED': 'Your password is required.',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MINLENGTH': 'Your password is required to be at least 5 characters.',\n\t\t'ACCOUNT_PASSWORD_NEWPASSWORD_MAXLENGTH': 'Your password cannot be longer than 50 characters.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD': 'Password confirmation',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PLACEHOLDER': 'Password confirmation ?',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_REQUIRED': 'Your confirmation password is required.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MINLENGTH': 'Your confirmation password is required to be at least 5 characters.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_MAXLENGTH': 'Your confirmation password cannot be longer than 50 characters.',\n\t\t'ACCOUNT_PASSWORD_CONFIRM_NEWPASSWORD_PATTERN': 'Password and confirmation do not match.',\n\t\t'ACCOUNT_PASSWORD_SUBMIT': 'Save',\n\t\t'ACCOUNT_PASSWORD_SAVE_SUCCESS': 'Password successfully changed.',\n\t\t'ACCOUNT_PASSWORD_SAVE_ERROR': 'Password could not be changed.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('PasswordCtrl', [\"Principal\", \"AlertService\", function(Principal, AlertService) {\n\tvar ctrl = this;\n\tPrincipal.identity().then(function(account) {\n\t\tctrl.account = account;\n\t});\n\tctrl.changePassword = function() {\n\t\tPrincipal.changePassword(ctrl.password).then(function() {\n\t\t\tAlertService.success('ACCOUNT_PASSWORD_SAVE_SUCCESS');\n\t\t}).catch(function() {\n\t\t\tAlertService.error('ACCOUNT_PASSWORD_SAVE_ERROR');\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('app.personal.settings', {\n\t\turl: '/settings',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.settings;\n\t\t},\n\t\tcontroller: 'SettingsCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCOUNT_SETTINGS'\n\t\t}\n\t});\n}]);\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'ACCOUNT_SETTINGS': 'Mon profil',\n\t\t'ACCOUNT_SETTINGS_TITLE': 'Mon profil',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME': 'Prénom',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_PLACEHOLDER': 'Prénom ?',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_REQUIRED': 'Votre prénom est obligatoire.',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_MAXLENGTH': 'Votre prénom doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME': 'Nom de famille',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_PLACEHOLDER': 'Nom de famille ?',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_REQUIRED': 'Votre nom de famille est obligatoire.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_MAXLENGTH': 'Votre nom de famille doit être composé d\\'au plus 50 caractères.',\n\t\t'ACCOUNT_SETTINGS_EMAIL': 'Email',\n\t\t'ACCOUNT_SETTINGS_EMAIL_PLACEHOLDER': 'Email ?',\n\t\t'ACCOUNT_SETTINGS_EMAIL_REQUIRED': 'Votre email est obligatoire.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_EMAIL': 'Votre email est invalide.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_MAXLENGTH': 'Votre email doit être composé d\\'au plus 100 caractères.',\n\t\t'ACCOUNT_SETTINGS_LANGUAGE': 'Langue',\n\t\t'ACCOUNT_SETTINGS_SUBMIT': 'Enregistrer',\n\t\t'ACCOUNT_SETTINGS_SAVE_SUCCESS': 'Enregistrement du profil avec succès.',\n\t\t'ACCOUNT_SETTINGS_SAVE_ERROR': 'Impossible d\\'enregistrer le profil.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'ACCOUNT_SETTINGS': 'My profile',\n\t\t'ACCOUNT_SETTINGS_TITLE': 'My profile',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME': 'First name',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_PLACEHOLDER': 'First name ?',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_REQUIRED': 'Your first name is required.',\n\t\t'ACCOUNT_SETTINGS_FIRSTNAME_MAXLENGTH': 'Your first name cannot be longer than 50 characters.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME': 'Last name',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_PLACEHOLDER': 'Last name ?',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_REQUIRED': 'Your last name is required.',\n\t\t'ACCOUNT_SETTINGS_LASTNAME_MAXLENGTH': 'Your last name cannot be longer than 50 characters.',\n\t\t'ACCOUNT_SETTINGS_EMAIL': 'Email',\n\t\t'ACCOUNT_SETTINGS_EMAIL_PLACEHOLDER': 'Email ?',\n\t\t'ACCOUNT_SETTINGS_EMAIL_REQUIRED': 'Your e-mail is required.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_EMAIL': 'Your e-mail is invalid.',\n\t\t'ACCOUNT_SETTINGS_EMAIL_MAXLENGTH': 'Your e-mail cannot be longer than 100 characters.',\n\t\t'ACCOUNT_SETTINGS_LANGUAGE': 'Language',\n\t\t'ACCOUNT_SETTINGS_SUBMIT': 'Save',\n\t\t'ACCOUNT_SETTINGS_SAVE_SUCCESS': 'Profile successfully saved.',\n\t\t'ACCOUNT_SETTINGS_SAVE_ERROR': 'Profile could not be saved.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').controller('SettingsCtrl', [\"Principal\", \"language\", \"AlertService\", \"$translate\", function(Principal, language, AlertService, $translate) {\n\tvar ctrl = this;\n\tvar copyAccount = function(account) {\n\t\t// Store the \"settings account\" in a separate variable, and not in the\n\t\t// shared \"account\" variable.\n\t\treturn {\n\t\t\tactivated: account.activated,\n\t\t\temail: account.email,\n\t\t\tfirstName: account.firstName,\n\t\t\tlangKey: account.langKey,\n\t\t\tlastName: account.lastName,\n\t\t\tlogin: account.login\n\t\t};\n\t};\n\tPrincipal.identity().then(function(account) {\n\t\tctrl.settingsAccount = copyAccount(account);\n\t});\n\tctrl.save = function() {\n\t\tPrincipal.updateAccount(ctrl.settingsAccount).then(function() {\n\t\t\treturn Principal.identity(true).then(function(account) {\n\t\t\t\tctrl.settingsAccount = copyAccount(account);\n\t\t\t\tlanguage.getCurrent().then(function(current) {\n\t\t\t\t\tif (ctrl.settingsAccount.langKey !== current) {\n\t\t\t\t\t\t$translate.use(ctrl.settingsAccount.langKey);\n\t\t\t\t\t}\n\t\t\t\t\tAlertService.success('ACCOUNT_SETTINGS_SAVE_SUCCESS');\n\t\t\t\t});\n\t\t\t});\n\t\t}).catch(function() {\n\t\t\tAlertService.error('ACCOUNT_SETTINGS_SAVE_ERROR');\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-web').component('arkFooter', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.arkFooter;\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'TOGGLE_NAVIGATION': 'Navigation',\n\t\t'USERINFO_PROFILE': 'Profil',\n\t\t'USERINFO_PASSWORD': 'Mot de passe',\n\t\t'USERINFO_SIGNOUT': 'Déconnection'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'TOGGLE_NAVIGATION': 'Toggle navigation',\n\t\t'USERINFO_PROFILE': 'Profile',\n\t\t'USERINFO_PASSWORD': 'Password',\n\t\t'USERINFO_SIGNOUT': 'Sign out'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-web').component('arkHeader', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.arkHeader;\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').component('languageSelector', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.languageSelector;\n\t}],\n\tcontroller: [\"$rootScope\", \"$translate\", \"language\", function($rootScope, $translate, language) {\n\t\tvar ctrl = this;\n\t\tctrl.changeLanguage = function(key) {\n\t\t\t$translate.use(key);\n\t\t};\n\t\tvar updateCurrentLanguage = function() {\n\t\t\tctrl.currentLanguage = $translate.use();\n\t\t\tif (ctrl.currentLanguage.indexOf('en') === 0) {\n\t\t\t\tctrl.currentLanguage = 'us';\n\t\t\t}\n\t\t};\n\t\t$rootScope.$on('$translateChangeSuccess', function() {\n\t\t\tupdateCurrentLanguage();\n\t\t});\n\t\tupdateCurrentLanguage();\n\t\tlanguage.getSelectorData().then(function(data) {\n\t\t\tctrl.languages = data;\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').component('mainNavigation', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.mainNavigation;\n\t}],\n\tcontroller: [\"$rootScope\", \"$filter\", \"menuService\", function($rootScope, $filter, menuService) {\n\t\tvar ctrl = this;\n\t\tvar translate = $filter('translate');\n\t\tvar translateLabels = function(itemList) {\n\t\t\tif (!!itemList) {\n\t\t\t\tangular.forEach(itemList, function(item) {\n\t\t\t\t\titem.label = translate(item.labelKey);\n\t\t\t\t\ttranslateLabels(item.subItems);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tctrl.menuItems = menuService.getItems();\n\t\tvar updateMenuEntries = function() {\n\t\t\ttranslateLabels(ctrl.menuItems);\n\t\t};\n\t\tupdateMenuEntries();\n\t\t$rootScope.$on('$translateChangeSuccess', updateMenuEntries);\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').provider('menuService', function() {\n\tvar menuItems = [];\n\n\tthis.addItem = function(newItem) {\n\t\tif (newItem.position !== 'right') {\n\t\t\tnewItem.position = 'left';\n\t\t}\n\t\tmenuItems.push(newItem);\n\t};\n\n\tthis.$get = [\"$rootScope\", function($rootScope) {\n\t\tvar api = {};\n\t\tangular.forEach(menuItems, function(menuItem) {\n\t\t\tif (menuItem.badge && menuItem.badge.event) {\n\t\t\t\t$rootScope.$on(menuItem.badge.event, function(event, param) {\n\t\t\t\t\tmenuItem.badge.value = param.value;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tapi.getItems = function() {\n\t\t\treturn menuItems;\n\t\t};\n\t\treturn api;\n\t}];\n});\n","'use strict';\n\nangular.module('adama-web').component('selectAll', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.selectAll;\n\t}],\n\tbindings: {\n\t\tentityList: '<'\n\t},\n\tcontroller: function() {\n\t\tvar ctrl = this;\n\t\tctrl.isAllChecked = false;\n\t\tctrl.checkAll = function() {\n\t\t\tctrl.isAllChecked = !ctrl.isAllChecked;\n\t\t\tangular.forEach(ctrl.entityList, function(entity) {\n\t\t\t\tentity.isSelected = ctrl.isAllChecked;\n\t\t\t});\n\t\t};\n\t}\n});\n","'use strict';\n\nangular.module('adama-web').component('userInfo', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.userInfo;\n\t}],\n\tcontroller: [\"$rootScope\", \"$state\", \"Auth\", function($rootScope, $state, Auth) {\n\t\tvar ctrl = this;\n\t\tctrl.signout = function() {\n\t\t\tAuth.logout();\n\t\t\t$state.go('auth.signin');\n\t\t};\n\t\t$rootScope.$on('auth.updateAccount', function(event, data) {\n\t\t\tctrl.account = data.account;\n\t\t});\n\t}]\n});\n","'use strict';\n\nangular.module('adama-web').component('viewAttribute', {\n\ttemplateUrl: /* @ngInject */ [\"adamaConstant\", function(adamaConstant) {\n\t\treturn adamaConstant.adamaWebToolkitTemplateUrl.viewAttribute;\n\t}],\n\ttransclude: true,\n\tbindings: {\n\t\tlabelKey: '@',\n\t\tvalue: '<',\n\t\tvalueKey: '@value'\n\t},\n\tcontroller: function() {}\n});\n"],"sourceRoot":"/source/"}